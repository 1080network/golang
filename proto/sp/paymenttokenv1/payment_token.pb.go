// Copyright (c) 2021 1080 Network, Inc. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of 1080 Network, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "1080 Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the 1080 Software without a
// valid license or the prior written approval of 1080 Network, Inc. 1080 Network, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of 1080 Network, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: sp/paymenttoken/v1/payment_token.proto

package paymenttokenv1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	v1 "ten80/proto/common/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ProvisionSPPaymentTokenResponse_Status int32

const (
	ProvisionSPPaymentTokenResponse_STATUS_UNSPECIFIED          ProvisionSPPaymentTokenResponse_Status = 0
	ProvisionSPPaymentTokenResponse_STATUS_SUCCESS              ProvisionSPPaymentTokenResponse_Status = 1
	ProvisionSPPaymentTokenResponse_STATUS_ERROR                ProvisionSPPaymentTokenResponse_Status = 2
	ProvisionSPPaymentTokenResponse_STATUS_INSTRUMENT_NOT_FOUND ProvisionSPPaymentTokenResponse_Status = 3
)

// Enum value maps for ProvisionSPPaymentTokenResponse_Status.
var (
	ProvisionSPPaymentTokenResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_INSTRUMENT_NOT_FOUND",
	}
	ProvisionSPPaymentTokenResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":          0,
		"STATUS_SUCCESS":              1,
		"STATUS_ERROR":                2,
		"STATUS_INSTRUMENT_NOT_FOUND": 3,
	}
)

func (x ProvisionSPPaymentTokenResponse_Status) Enum() *ProvisionSPPaymentTokenResponse_Status {
	p := new(ProvisionSPPaymentTokenResponse_Status)
	*p = x
	return p
}

func (x ProvisionSPPaymentTokenResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvisionSPPaymentTokenResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sp_paymenttoken_v1_payment_token_proto_enumTypes[0].Descriptor()
}

func (ProvisionSPPaymentTokenResponse_Status) Type() protoreflect.EnumType {
	return &file_sp_paymenttoken_v1_payment_token_proto_enumTypes[0]
}

func (x ProvisionSPPaymentTokenResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvisionSPPaymentTokenResponse_Status.Descriptor instead.
func (ProvisionSPPaymentTokenResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{2, 0}
}

type RemoveSPPaymentTokenResponse_Status int32

const (
	RemoveSPPaymentTokenResponse_STATUS_UNSPECIFIED RemoveSPPaymentTokenResponse_Status = 0
	RemoveSPPaymentTokenResponse_STATUS_SUCCESS     RemoveSPPaymentTokenResponse_Status = 1
	RemoveSPPaymentTokenResponse_STATUS_ERROR       RemoveSPPaymentTokenResponse_Status = 2
	RemoveSPPaymentTokenResponse_STATUS_NOT_FOUND   RemoveSPPaymentTokenResponse_Status = 3
)

// Enum value maps for RemoveSPPaymentTokenResponse_Status.
var (
	RemoveSPPaymentTokenResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	RemoveSPPaymentTokenResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x RemoveSPPaymentTokenResponse_Status) Enum() *RemoveSPPaymentTokenResponse_Status {
	p := new(RemoveSPPaymentTokenResponse_Status)
	*p = x
	return p
}

func (x RemoveSPPaymentTokenResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveSPPaymentTokenResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sp_paymenttoken_v1_payment_token_proto_enumTypes[1].Descriptor()
}

func (RemoveSPPaymentTokenResponse_Status) Type() protoreflect.EnumType {
	return &file_sp_paymenttoken_v1_payment_token_proto_enumTypes[1]
}

func (x RemoveSPPaymentTokenResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveSPPaymentTokenResponse_Status.Descriptor instead.
func (RemoveSPPaymentTokenResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{4, 0}
}

type SearchSPPaymentTokenResponse_Status int32

const (
	SearchSPPaymentTokenResponse_STATUS_UNSPECIFIED SearchSPPaymentTokenResponse_Status = 0
	SearchSPPaymentTokenResponse_STATUS_SUCCESS     SearchSPPaymentTokenResponse_Status = 1
	SearchSPPaymentTokenResponse_STATUS_ERROR       SearchSPPaymentTokenResponse_Status = 2
)

// Enum value maps for SearchSPPaymentTokenResponse_Status.
var (
	SearchSPPaymentTokenResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchSPPaymentTokenResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchSPPaymentTokenResponse_Status) Enum() *SearchSPPaymentTokenResponse_Status {
	p := new(SearchSPPaymentTokenResponse_Status)
	*p = x
	return p
}

func (x SearchSPPaymentTokenResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchSPPaymentTokenResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sp_paymenttoken_v1_payment_token_proto_enumTypes[2].Descriptor()
}

func (SearchSPPaymentTokenResponse_Status) Type() protoreflect.EnumType {
	return &file_sp_paymenttoken_v1_payment_token_proto_enumTypes[2]
}

func (x SearchSPPaymentTokenResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchSPPaymentTokenResponse_Status.Descriptor instead.
func (SearchSPPaymentTokenResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{6, 0}
}

type SPPaymentToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1080 generated key for the user that owns this token
	SpUserKey string `protobuf:"bytes,1,opt,name=sp_user_key,json=spUserKey,proto3" json:"sp_user_key,omitempty"`
	// the primary key of this user at the SP
	SpUserRef string `protobuf:"bytes,2,opt,name=sp_user_ref,json=spUserRef,proto3" json:"sp_user_ref,omitempty"`
	// 1080 generated key for the instrument that this token represents
	SpInstrumentKey string `protobuf:"bytes,3,opt,name=sp_instrument_key,json=spInstrumentKey,proto3" json:"sp_instrument_key,omitempty"`
	// the primary key of this instrument at the SP
	SpInstrumentRef string                 `protobuf:"bytes,4,opt,name=sp_instrument_ref,json=spInstrumentRef,proto3" json:"sp_instrument_ref,omitempty"`
	PaymentToken    *v1.CommonPaymentToken `protobuf:"bytes,5,opt,name=payment_token,json=paymentToken,proto3" json:"payment_token,omitempty"`
}

func (x *SPPaymentToken) Reset() {
	*x = SPPaymentToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPPaymentToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPPaymentToken) ProtoMessage() {}

func (x *SPPaymentToken) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPPaymentToken.ProtoReflect.Descriptor instead.
func (*SPPaymentToken) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{0}
}

func (x *SPPaymentToken) GetSpUserKey() string {
	if x != nil {
		return x.SpUserKey
	}
	return ""
}

func (x *SPPaymentToken) GetSpUserRef() string {
	if x != nil {
		return x.SpUserRef
	}
	return ""
}

func (x *SPPaymentToken) GetSpInstrumentKey() string {
	if x != nil {
		return x.SpInstrumentKey
	}
	return ""
}

func (x *SPPaymentToken) GetSpInstrumentRef() string {
	if x != nil {
		return x.SpInstrumentRef
	}
	return ""
}

func (x *SPPaymentToken) GetPaymentToken() *v1.CommonPaymentToken {
	if x != nil {
		return x.PaymentToken
	}
	return nil
}

// to 1080
type ProvisionSPPaymentTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//	*ProvisionSPPaymentTokenRequest_SpInstrumentKey
	//	*ProvisionSPPaymentTokenRequest_SpInstrumentRef
	Criteria isProvisionSPPaymentTokenRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *ProvisionSPPaymentTokenRequest) Reset() {
	*x = ProvisionSPPaymentTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionSPPaymentTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionSPPaymentTokenRequest) ProtoMessage() {}

func (x *ProvisionSPPaymentTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionSPPaymentTokenRequest.ProtoReflect.Descriptor instead.
func (*ProvisionSPPaymentTokenRequest) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{1}
}

func (m *ProvisionSPPaymentTokenRequest) GetCriteria() isProvisionSPPaymentTokenRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *ProvisionSPPaymentTokenRequest) GetSpInstrumentKey() string {
	if x, ok := x.GetCriteria().(*ProvisionSPPaymentTokenRequest_SpInstrumentKey); ok {
		return x.SpInstrumentKey
	}
	return ""
}

func (x *ProvisionSPPaymentTokenRequest) GetSpInstrumentRef() string {
	if x, ok := x.GetCriteria().(*ProvisionSPPaymentTokenRequest_SpInstrumentRef); ok {
		return x.SpInstrumentRef
	}
	return ""
}

type isProvisionSPPaymentTokenRequest_Criteria interface {
	isProvisionSPPaymentTokenRequest_Criteria()
}

type ProvisionSPPaymentTokenRequest_SpInstrumentKey struct {
	// The key representing this instrument in 1080.
	SpInstrumentKey string `protobuf:"bytes,1,opt,name=sp_instrument_key,json=spInstrumentKey,proto3,oneof"`
}

type ProvisionSPPaymentTokenRequest_SpInstrumentRef struct {
	// Primary key on the external system.
	SpInstrumentRef string `protobuf:"bytes,2,opt,name=sp_instrument_ref,json=spInstrumentRef,proto3,oneof"`
}

func (*ProvisionSPPaymentTokenRequest_SpInstrumentKey) isProvisionSPPaymentTokenRequest_Criteria() {}

func (*ProvisionSPPaymentTokenRequest_SpInstrumentRef) isProvisionSPPaymentTokenRequest_Criteria() {}

type ProvisionSPPaymentTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ProvisionSPPaymentTokenResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                              `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// A payment token that can be used at all partners.
	SpPaymentToken string `protobuf:"bytes,3,opt,name=sp_payment_token,json=spPaymentToken,proto3" json:"sp_payment_token,omitempty"`
}

func (x *ProvisionSPPaymentTokenResponse) Reset() {
	*x = ProvisionSPPaymentTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionSPPaymentTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionSPPaymentTokenResponse) ProtoMessage() {}

func (x *ProvisionSPPaymentTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionSPPaymentTokenResponse.ProtoReflect.Descriptor instead.
func (*ProvisionSPPaymentTokenResponse) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{2}
}

func (x *ProvisionSPPaymentTokenResponse) GetStatus() ProvisionSPPaymentTokenResponse_Status {
	if x != nil {
		return x.Status
	}
	return ProvisionSPPaymentTokenResponse_STATUS_UNSPECIFIED
}

func (x *ProvisionSPPaymentTokenResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProvisionSPPaymentTokenResponse) GetSpPaymentToken() string {
	if x != nil {
		return x.SpPaymentToken
	}
	return ""
}

type RemoveSPPaymentTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//	*RemoveSPPaymentTokenRequest_SpInstrumentKey
	//	*RemoveSPPaymentTokenRequest_SpInstrumentRef
	//	*RemoveSPPaymentTokenRequest_SpPaymentToken
	Criteria isRemoveSPPaymentTokenRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *RemoveSPPaymentTokenRequest) Reset() {
	*x = RemoveSPPaymentTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSPPaymentTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSPPaymentTokenRequest) ProtoMessage() {}

func (x *RemoveSPPaymentTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSPPaymentTokenRequest.ProtoReflect.Descriptor instead.
func (*RemoveSPPaymentTokenRequest) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{3}
}

func (m *RemoveSPPaymentTokenRequest) GetCriteria() isRemoveSPPaymentTokenRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *RemoveSPPaymentTokenRequest) GetSpInstrumentKey() string {
	if x, ok := x.GetCriteria().(*RemoveSPPaymentTokenRequest_SpInstrumentKey); ok {
		return x.SpInstrumentKey
	}
	return ""
}

func (x *RemoveSPPaymentTokenRequest) GetSpInstrumentRef() string {
	if x, ok := x.GetCriteria().(*RemoveSPPaymentTokenRequest_SpInstrumentRef); ok {
		return x.SpInstrumentRef
	}
	return ""
}

func (x *RemoveSPPaymentTokenRequest) GetSpPaymentToken() string {
	if x, ok := x.GetCriteria().(*RemoveSPPaymentTokenRequest_SpPaymentToken); ok {
		return x.SpPaymentToken
	}
	return ""
}

type isRemoveSPPaymentTokenRequest_Criteria interface {
	isRemoveSPPaymentTokenRequest_Criteria()
}

type RemoveSPPaymentTokenRequest_SpInstrumentKey struct {
	// The key representing this instrument in 1080.
	SpInstrumentKey string `protobuf:"bytes,1,opt,name=sp_instrument_key,json=spInstrumentKey,proto3,oneof"`
}

type RemoveSPPaymentTokenRequest_SpInstrumentRef struct {
	// Primary key on the external system.
	SpInstrumentRef string `protobuf:"bytes,2,opt,name=sp_instrument_ref,json=spInstrumentRef,proto3,oneof"`
}

type RemoveSPPaymentTokenRequest_SpPaymentToken struct {
	// A payment token that can be used at all partners.
	SpPaymentToken string `protobuf:"bytes,3,opt,name=sp_payment_token,json=spPaymentToken,proto3,oneof"`
}

func (*RemoveSPPaymentTokenRequest_SpInstrumentKey) isRemoveSPPaymentTokenRequest_Criteria() {}

func (*RemoveSPPaymentTokenRequest_SpInstrumentRef) isRemoveSPPaymentTokenRequest_Criteria() {}

func (*RemoveSPPaymentTokenRequest_SpPaymentToken) isRemoveSPPaymentTokenRequest_Criteria() {}

type RemoveSPPaymentTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          RemoveSPPaymentTokenResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sp.paymenttoken.v1.RemoveSPPaymentTokenResponse_Status" json:"status,omitempty"`
	Error           *v1.Error                           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SpPaymentTokens []string                            `protobuf:"bytes,3,rep,name=sp_payment_tokens,json=spPaymentTokens,proto3" json:"sp_payment_tokens,omitempty"`
}

func (x *RemoveSPPaymentTokenResponse) Reset() {
	*x = RemoveSPPaymentTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSPPaymentTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSPPaymentTokenResponse) ProtoMessage() {}

func (x *RemoveSPPaymentTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSPPaymentTokenResponse.ProtoReflect.Descriptor instead.
func (*RemoveSPPaymentTokenResponse) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveSPPaymentTokenResponse) GetStatus() RemoveSPPaymentTokenResponse_Status {
	if x != nil {
		return x.Status
	}
	return RemoveSPPaymentTokenResponse_STATUS_UNSPECIFIED
}

func (x *RemoveSPPaymentTokenResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RemoveSPPaymentTokenResponse) GetSpPaymentTokens() []string {
	if x != nil {
		return x.SpPaymentTokens
	}
	return nil
}

type SearchSPPaymentTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpUserKey       string `protobuf:"bytes,1,opt,name=sp_user_key,json=spUserKey,proto3" json:"sp_user_key,omitempty"`
	SpInstrumentKey string `protobuf:"bytes,2,opt,name=sp_instrument_key,json=spInstrumentKey,proto3" json:"sp_instrument_key,omitempty"`
}

func (x *SearchSPPaymentTokenRequest) Reset() {
	*x = SearchSPPaymentTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSPPaymentTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSPPaymentTokenRequest) ProtoMessage() {}

func (x *SearchSPPaymentTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSPPaymentTokenRequest.ProtoReflect.Descriptor instead.
func (*SearchSPPaymentTokenRequest) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{5}
}

func (x *SearchSPPaymentTokenRequest) GetSpUserKey() string {
	if x != nil {
		return x.SpUserKey
	}
	return ""
}

func (x *SearchSPPaymentTokenRequest) GetSpInstrumentKey() string {
	if x != nil {
		return x.SpInstrumentKey
	}
	return ""
}

type SearchSPPaymentTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          SearchSPPaymentTokenResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sp.paymenttoken.v1.SearchSPPaymentTokenResponse_Status" json:"status,omitempty"`
	Error           *v1.Error                           `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SpPaymentTokens []*SPPaymentToken                   `protobuf:"bytes,3,rep,name=sp_payment_tokens,json=spPaymentTokens,proto3" json:"sp_payment_tokens,omitempty"`
}

func (x *SearchSPPaymentTokenResponse) Reset() {
	*x = SearchSPPaymentTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSPPaymentTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSPPaymentTokenResponse) ProtoMessage() {}

func (x *SearchSPPaymentTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sp_paymenttoken_v1_payment_token_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSPPaymentTokenResponse.ProtoReflect.Descriptor instead.
func (*SearchSPPaymentTokenResponse) Descriptor() ([]byte, []int) {
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP(), []int{6}
}

func (x *SearchSPPaymentTokenResponse) GetStatus() SearchSPPaymentTokenResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchSPPaymentTokenResponse_STATUS_UNSPECIFIED
}

func (x *SearchSPPaymentTokenResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchSPPaymentTokenResponse) GetSpPaymentTokens() []*SPPaymentToken {
	if x != nil {
		return x.SpPaymentTokens
	}
	return nil
}

var File_sp_paymenttoken_v1_payment_token_proto protoreflect.FileDescriptor

var file_sp_paymenttoken_v1_payment_token_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x70, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xec, 0x01, 0x0a, 0x0e, 0x53, 0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x70,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x42, 0x0a,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0f, 0x73, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0f, 0x73, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x42, 0x0a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xb0, 0x02, 0x0a,
	0x1f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x50, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x52, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3a, 0x2e, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x67, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0xb1, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x50, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x70,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a,
	0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x70, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x70, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x22, 0xa1, 0x02, 0x0a, 0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x50,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x53, 0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x70, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22, 0x69, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x73, 0x70, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0xaf, 0x02, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x50, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4e, 0x0a, 0x11,
	0x73, 0x70, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0f, 0x73, 0x70, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x46, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x02, 0x42, 0x67, 0x0a, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x74, 0x65, 0x6e, 0x38, 0x30, 0x2e, 0x73, 0x70, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x1c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x50, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1d, 0x74, 0x65, 0x6e, 0x38, 0x30, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x54, 0x45, 0x4e, 0x38, 0x30, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sp_paymenttoken_v1_payment_token_proto_rawDescOnce sync.Once
	file_sp_paymenttoken_v1_payment_token_proto_rawDescData = file_sp_paymenttoken_v1_payment_token_proto_rawDesc
)

func file_sp_paymenttoken_v1_payment_token_proto_rawDescGZIP() []byte {
	file_sp_paymenttoken_v1_payment_token_proto_rawDescOnce.Do(func() {
		file_sp_paymenttoken_v1_payment_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_sp_paymenttoken_v1_payment_token_proto_rawDescData)
	})
	return file_sp_paymenttoken_v1_payment_token_proto_rawDescData
}

var file_sp_paymenttoken_v1_payment_token_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sp_paymenttoken_v1_payment_token_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sp_paymenttoken_v1_payment_token_proto_goTypes = []interface{}{
	(ProvisionSPPaymentTokenResponse_Status)(0), // 0: sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse.Status
	(RemoveSPPaymentTokenResponse_Status)(0),    // 1: sp.paymenttoken.v1.RemoveSPPaymentTokenResponse.Status
	(SearchSPPaymentTokenResponse_Status)(0),    // 2: sp.paymenttoken.v1.SearchSPPaymentTokenResponse.Status
	(*SPPaymentToken)(nil),                      // 3: sp.paymenttoken.v1.SPPaymentToken
	(*ProvisionSPPaymentTokenRequest)(nil),      // 4: sp.paymenttoken.v1.ProvisionSPPaymentTokenRequest
	(*ProvisionSPPaymentTokenResponse)(nil),     // 5: sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse
	(*RemoveSPPaymentTokenRequest)(nil),         // 6: sp.paymenttoken.v1.RemoveSPPaymentTokenRequest
	(*RemoveSPPaymentTokenResponse)(nil),        // 7: sp.paymenttoken.v1.RemoveSPPaymentTokenResponse
	(*SearchSPPaymentTokenRequest)(nil),         // 8: sp.paymenttoken.v1.SearchSPPaymentTokenRequest
	(*SearchSPPaymentTokenResponse)(nil),        // 9: sp.paymenttoken.v1.SearchSPPaymentTokenResponse
	(*v1.CommonPaymentToken)(nil),               // 10: common.v1.CommonPaymentToken
	(*v1.Error)(nil),                            // 11: common.v1.Error
}
var file_sp_paymenttoken_v1_payment_token_proto_depIdxs = []int32{
	10, // 0: sp.paymenttoken.v1.SPPaymentToken.payment_token:type_name -> common.v1.CommonPaymentToken
	0,  // 1: sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse.status:type_name -> sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse.Status
	11, // 2: sp.paymenttoken.v1.ProvisionSPPaymentTokenResponse.error:type_name -> common.v1.Error
	1,  // 3: sp.paymenttoken.v1.RemoveSPPaymentTokenResponse.status:type_name -> sp.paymenttoken.v1.RemoveSPPaymentTokenResponse.Status
	11, // 4: sp.paymenttoken.v1.RemoveSPPaymentTokenResponse.error:type_name -> common.v1.Error
	2,  // 5: sp.paymenttoken.v1.SearchSPPaymentTokenResponse.status:type_name -> sp.paymenttoken.v1.SearchSPPaymentTokenResponse.Status
	11, // 6: sp.paymenttoken.v1.SearchSPPaymentTokenResponse.error:type_name -> common.v1.Error
	3,  // 7: sp.paymenttoken.v1.SearchSPPaymentTokenResponse.sp_payment_tokens:type_name -> sp.paymenttoken.v1.SPPaymentToken
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_sp_paymenttoken_v1_payment_token_proto_init() }
func file_sp_paymenttoken_v1_payment_token_proto_init() {
	if File_sp_paymenttoken_v1_payment_token_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPPaymentToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionSPPaymentTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionSPPaymentTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSPPaymentTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSPPaymentTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSPPaymentTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_paymenttoken_v1_payment_token_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSPPaymentTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sp_paymenttoken_v1_payment_token_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ProvisionSPPaymentTokenRequest_SpInstrumentKey)(nil),
		(*ProvisionSPPaymentTokenRequest_SpInstrumentRef)(nil),
	}
	file_sp_paymenttoken_v1_payment_token_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RemoveSPPaymentTokenRequest_SpInstrumentKey)(nil),
		(*RemoveSPPaymentTokenRequest_SpInstrumentRef)(nil),
		(*RemoveSPPaymentTokenRequest_SpPaymentToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sp_paymenttoken_v1_payment_token_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sp_paymenttoken_v1_payment_token_proto_goTypes,
		DependencyIndexes: file_sp_paymenttoken_v1_payment_token_proto_depIdxs,
		EnumInfos:         file_sp_paymenttoken_v1_payment_token_proto_enumTypes,
		MessageInfos:      file_sp_paymenttoken_v1_payment_token_proto_msgTypes,
	}.Build()
	File_sp_paymenttoken_v1_payment_token_proto = out.File
	file_sp_paymenttoken_v1_payment_token_proto_rawDesc = nil
	file_sp_paymenttoken_v1_payment_token_proto_goTypes = nil
	file_sp_paymenttoken_v1_payment_token_proto_depIdxs = nil
}
