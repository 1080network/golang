// Copyright (c) 2022 Mica, Inc. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0
// source: sp/spaccount/v1/sp_account.proto

package spaccountv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	accounttypev1 "mica/proto/common/enums/accounttypev1"
	currencyv1 "mica/proto/common/enums/currencyv1"
	v1 "mica/proto/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetSPAccountResponse_Status int32

const (
	GetSPAccountResponse_STATUS_UNSPECIFIED GetSPAccountResponse_Status = 0
	GetSPAccountResponse_STATUS_SUCCESS     GetSPAccountResponse_Status = 1
	GetSPAccountResponse_STATUS_ERROR       GetSPAccountResponse_Status = 2
	GetSPAccountResponse_STATUS_NOT_FOUND   GetSPAccountResponse_Status = 3
)

// Enum value maps for GetSPAccountResponse_Status.
var (
	GetSPAccountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	GetSPAccountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x GetSPAccountResponse_Status) Enum() *GetSPAccountResponse_Status {
	p := new(GetSPAccountResponse_Status)
	*p = x
	return p
}

func (x GetSPAccountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetSPAccountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sp_spaccount_v1_sp_account_proto_enumTypes[0].Descriptor()
}

func (GetSPAccountResponse_Status) Type() protoreflect.EnumType {
	return &file_sp_spaccount_v1_sp_account_proto_enumTypes[0]
}

func (x GetSPAccountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetSPAccountResponse_Status.Descriptor instead.
func (GetSPAccountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{2, 0}
}

type SearchSPAccountResponse_Status int32

const (
	SearchSPAccountResponse_STATUS_UNSPECIFIED SearchSPAccountResponse_Status = 0
	SearchSPAccountResponse_STATUS_SUCCESS     SearchSPAccountResponse_Status = 1
	SearchSPAccountResponse_STATUS_ERROR       SearchSPAccountResponse_Status = 2
)

// Enum value maps for SearchSPAccountResponse_Status.
var (
	SearchSPAccountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchSPAccountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchSPAccountResponse_Status) Enum() *SearchSPAccountResponse_Status {
	p := new(SearchSPAccountResponse_Status)
	*p = x
	return p
}

func (x SearchSPAccountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchSPAccountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_sp_spaccount_v1_sp_account_proto_enumTypes[1].Descriptor()
}

func (SearchSPAccountResponse_Status) Type() protoreflect.EnumType {
	return &file_sp_spaccount_v1_sp_account_proto_enumTypes[1]
}

func (x SearchSPAccountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchSPAccountResponse_Status.Descriptor instead.
func (SearchSPAccountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{4, 0}
}

type SPAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpAccountKey string                    `protobuf:"bytes,1,opt,name=sp_account_key,json=spAccountKey,proto3" json:"sp_account_key,omitempty"`
	Created      *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	Updated      *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=updated,proto3" json:"updated,omitempty"`
	Version      int64                     `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	SpKey        string                    `protobuf:"bytes,5,opt,name=sp_key,json=spKey,proto3" json:"sp_key,omitempty"`
	AccountType  accounttypev1.AccountType `protobuf:"varint,6,opt,name=account_type,json=accountType,proto3,enum=common.enums.accounttype.v1.AccountType" json:"account_type,omitempty"`
	Currency     currencyv1.Currency       `protobuf:"varint,7,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
}

func (x *SPAccount) Reset() {
	*x = SPAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPAccount) ProtoMessage() {}

func (x *SPAccount) ProtoReflect() protoreflect.Message {
	mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPAccount.ProtoReflect.Descriptor instead.
func (*SPAccount) Descriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{0}
}

func (x *SPAccount) GetSpAccountKey() string {
	if x != nil {
		return x.SpAccountKey
	}
	return ""
}

func (x *SPAccount) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *SPAccount) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *SPAccount) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SPAccount) GetSpKey() string {
	if x != nil {
		return x.SpKey
	}
	return ""
}

func (x *SPAccount) GetAccountType() accounttypev1.AccountType {
	if x != nil {
		return x.AccountType
	}
	return accounttypev1.AccountType(0)
}

func (x *SPAccount) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

type GetSPAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpAccountKey string `protobuf:"bytes,1,opt,name=sp_account_key,json=spAccountKey,proto3" json:"sp_account_key,omitempty"`
}

func (x *GetSPAccountRequest) Reset() {
	*x = GetSPAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSPAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSPAccountRequest) ProtoMessage() {}

func (x *GetSPAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSPAccountRequest.ProtoReflect.Descriptor instead.
func (*GetSPAccountRequest) Descriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{1}
}

func (x *GetSPAccountRequest) GetSpAccountKey() string {
	if x != nil {
		return x.SpAccountKey
	}
	return ""
}

type GetSPAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    GetSPAccountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sp.spaccount.v1.GetSPAccountResponse_Status" json:"status,omitempty"`
	Error     *v1.Error                   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SpAccount *SPAccount                  `protobuf:"bytes,3,opt,name=sp_account,json=spAccount,proto3" json:"sp_account,omitempty"`
}

func (x *GetSPAccountResponse) Reset() {
	*x = GetSPAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSPAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSPAccountResponse) ProtoMessage() {}

func (x *GetSPAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSPAccountResponse.ProtoReflect.Descriptor instead.
func (*GetSPAccountResponse) Descriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{2}
}

func (x *GetSPAccountResponse) GetStatus() GetSPAccountResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetSPAccountResponse_STATUS_UNSPECIFIED
}

func (x *GetSPAccountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetSPAccountResponse) GetSpAccount() *SPAccount {
	if x != nil {
		return x.SpAccount
	}
	return nil
}

type SearchSPAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpKey       string                    `protobuf:"bytes,1,opt,name=sp_key,json=spKey,proto3" json:"sp_key,omitempty"`
	AccountType accounttypev1.AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=common.enums.accounttype.v1.AccountType" json:"account_type,omitempty"`
	Currency    currencyv1.Currency       `protobuf:"varint,3,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
}

func (x *SearchSPAccountRequest) Reset() {
	*x = SearchSPAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSPAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSPAccountRequest) ProtoMessage() {}

func (x *SearchSPAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSPAccountRequest.ProtoReflect.Descriptor instead.
func (*SearchSPAccountRequest) Descriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{3}
}

func (x *SearchSPAccountRequest) GetSpKey() string {
	if x != nil {
		return x.SpKey
	}
	return ""
}

func (x *SearchSPAccountRequest) GetAccountType() accounttypev1.AccountType {
	if x != nil {
		return x.AccountType
	}
	return accounttypev1.AccountType(0)
}

func (x *SearchSPAccountRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

type SearchSPAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     SearchSPAccountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sp.spaccount.v1.SearchSPAccountResponse_Status" json:"status,omitempty"`
	Error      *v1.Error                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SpAccounts []*SPAccount                   `protobuf:"bytes,3,rep,name=sp_accounts,json=spAccounts,proto3" json:"sp_accounts,omitempty"`
}

func (x *SearchSPAccountResponse) Reset() {
	*x = SearchSPAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSPAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSPAccountResponse) ProtoMessage() {}

func (x *SearchSPAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sp_spaccount_v1_sp_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSPAccountResponse.ProtoReflect.Descriptor instead.
func (*SearchSPAccountResponse) Descriptor() ([]byte, []int) {
	return file_sp_spaccount_v1_sp_account_proto_rawDescGZIP(), []int{4}
}

func (x *SearchSPAccountResponse) GetStatus() SearchSPAccountResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchSPAccountResponse_STATUS_UNSPECIFIED
}

func (x *SearchSPAccountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchSPAccountResponse) GetSpAccounts() []*SPAccount {
	if x != nil {
		return x.SpAccounts
	}
	return nil
}

var File_sp_spaccount_v1_sp_account_proto protoreflect.FileDescriptor

var file_sp_spaccount_v1_sp_account_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x70, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0f, 0x73, 0x70, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x02, 0x0a, 0x09, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22,
	0x9d, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x70, 0x2e, 0x73, 0x70,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x50,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x70, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x70, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x50, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0xbc, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x70, 0x4b, 0x65,
	0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x8f,
	0x02, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x73, 0x70, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x70, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x70, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x73, 0x70,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x42, 0x50, 0x0a, 0x1c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x70, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x42, 0x0e, 0x53, 0x50, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x19, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70, 0x2f,
	0x73, 0x70, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49,
	0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sp_spaccount_v1_sp_account_proto_rawDescOnce sync.Once
	file_sp_spaccount_v1_sp_account_proto_rawDescData = file_sp_spaccount_v1_sp_account_proto_rawDesc
)

func file_sp_spaccount_v1_sp_account_proto_rawDescGZIP() []byte {
	file_sp_spaccount_v1_sp_account_proto_rawDescOnce.Do(func() {
		file_sp_spaccount_v1_sp_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_sp_spaccount_v1_sp_account_proto_rawDescData)
	})
	return file_sp_spaccount_v1_sp_account_proto_rawDescData
}

var file_sp_spaccount_v1_sp_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sp_spaccount_v1_sp_account_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_sp_spaccount_v1_sp_account_proto_goTypes = []interface{}{
	(GetSPAccountResponse_Status)(0),    // 0: sp.spaccount.v1.GetSPAccountResponse.Status
	(SearchSPAccountResponse_Status)(0), // 1: sp.spaccount.v1.SearchSPAccountResponse.Status
	(*SPAccount)(nil),                   // 2: sp.spaccount.v1.SPAccount
	(*GetSPAccountRequest)(nil),         // 3: sp.spaccount.v1.GetSPAccountRequest
	(*GetSPAccountResponse)(nil),        // 4: sp.spaccount.v1.GetSPAccountResponse
	(*SearchSPAccountRequest)(nil),      // 5: sp.spaccount.v1.SearchSPAccountRequest
	(*SearchSPAccountResponse)(nil),     // 6: sp.spaccount.v1.SearchSPAccountResponse
	(*timestamppb.Timestamp)(nil),       // 7: google.protobuf.Timestamp
	(accounttypev1.AccountType)(0),      // 8: common.enums.accounttype.v1.AccountType
	(currencyv1.Currency)(0),            // 9: common.enums.currency.v1.Currency
	(*v1.Error)(nil),                    // 10: common.v1.Error
}
var file_sp_spaccount_v1_sp_account_proto_depIdxs = []int32{
	7,  // 0: sp.spaccount.v1.SPAccount.created:type_name -> google.protobuf.Timestamp
	7,  // 1: sp.spaccount.v1.SPAccount.updated:type_name -> google.protobuf.Timestamp
	8,  // 2: sp.spaccount.v1.SPAccount.account_type:type_name -> common.enums.accounttype.v1.AccountType
	9,  // 3: sp.spaccount.v1.SPAccount.currency:type_name -> common.enums.currency.v1.Currency
	0,  // 4: sp.spaccount.v1.GetSPAccountResponse.status:type_name -> sp.spaccount.v1.GetSPAccountResponse.Status
	10, // 5: sp.spaccount.v1.GetSPAccountResponse.error:type_name -> common.v1.Error
	2,  // 6: sp.spaccount.v1.GetSPAccountResponse.sp_account:type_name -> sp.spaccount.v1.SPAccount
	8,  // 7: sp.spaccount.v1.SearchSPAccountRequest.account_type:type_name -> common.enums.accounttype.v1.AccountType
	9,  // 8: sp.spaccount.v1.SearchSPAccountRequest.currency:type_name -> common.enums.currency.v1.Currency
	1,  // 9: sp.spaccount.v1.SearchSPAccountResponse.status:type_name -> sp.spaccount.v1.SearchSPAccountResponse.Status
	10, // 10: sp.spaccount.v1.SearchSPAccountResponse.error:type_name -> common.v1.Error
	2,  // 11: sp.spaccount.v1.SearchSPAccountResponse.sp_accounts:type_name -> sp.spaccount.v1.SPAccount
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sp_spaccount_v1_sp_account_proto_init() }
func file_sp_spaccount_v1_sp_account_proto_init() {
	if File_sp_spaccount_v1_sp_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sp_spaccount_v1_sp_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_spaccount_v1_sp_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSPAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_spaccount_v1_sp_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSPAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_spaccount_v1_sp_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSPAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sp_spaccount_v1_sp_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSPAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sp_spaccount_v1_sp_account_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sp_spaccount_v1_sp_account_proto_goTypes,
		DependencyIndexes: file_sp_spaccount_v1_sp_account_proto_depIdxs,
		EnumInfos:         file_sp_spaccount_v1_sp_account_proto_enumTypes,
		MessageInfos:      file_sp_spaccount_v1_sp_account_proto_msgTypes,
	}.Build()
	File_sp_spaccount_v1_sp_account_proto = out.File
	file_sp_spaccount_v1_sp_account_proto_rawDesc = nil
	file_sp_spaccount_v1_sp_account_proto_goTypes = nil
	file_sp_spaccount_v1_sp_account_proto_depIdxs = nil
}
