// Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: connect/instrument/v1/instrument.proto

package instrumentv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	currencyv1 "github.com/1080network/golang/connect/proto/common/enums/currencyv1"
	instrumenttypev1 "github.com/1080network/golang/connect/proto/common/enums/instrumenttypev1"
	v1 "github.com/1080network/golang/connect/proto/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WidgetRegisterInstrumentInitiateResponse_Status int32

const (
	WidgetRegisterInstrumentInitiateResponse_STATUS_UNSPECIFIED WidgetRegisterInstrumentInitiateResponse_Status = 0
	WidgetRegisterInstrumentInitiateResponse_STATUS_SUCCESS     WidgetRegisterInstrumentInitiateResponse_Status = 1
	// generic error that's not one of the following
	WidgetRegisterInstrumentInitiateResponse_STATUS_ERROR                        WidgetRegisterInstrumentInitiateResponse_Status = 2
	WidgetRegisterInstrumentInitiateResponse_STATUS_UNSUPPORTED_SERVICE_PROVIDER WidgetRegisterInstrumentInitiateResponse_Status = 3
)

// Enum value maps for WidgetRegisterInstrumentInitiateResponse_Status.
var (
	WidgetRegisterInstrumentInitiateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_UNSUPPORTED_SERVICE_PROVIDER",
	}
	WidgetRegisterInstrumentInitiateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":                  0,
		"STATUS_SUCCESS":                      1,
		"STATUS_ERROR":                        2,
		"STATUS_UNSUPPORTED_SERVICE_PROVIDER": 3,
	}
)

func (x WidgetRegisterInstrumentInitiateResponse_Status) Enum() *WidgetRegisterInstrumentInitiateResponse_Status {
	p := new(WidgetRegisterInstrumentInitiateResponse_Status)
	*p = x
	return p
}

func (x WidgetRegisterInstrumentInitiateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetRegisterInstrumentInitiateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_instrument_v1_instrument_proto_enumTypes[0].Descriptor()
}

func (WidgetRegisterInstrumentInitiateResponse_Status) Type() protoreflect.EnumType {
	return &file_connect_instrument_v1_instrument_proto_enumTypes[0]
}

func (x WidgetRegisterInstrumentInitiateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetRegisterInstrumentInitiateResponse_Status.Descriptor instead.
func (WidgetRegisterInstrumentInitiateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{2, 0}
}

type WidgetRegisterInstrumentWithAccountResponse_Status int32

const (
	WidgetRegisterInstrumentWithAccountResponse_STATUS_UNSPECIFIED WidgetRegisterInstrumentWithAccountResponse_Status = 0
	WidgetRegisterInstrumentWithAccountResponse_STATUS_SUCCESS     WidgetRegisterInstrumentWithAccountResponse_Status = 1
	WidgetRegisterInstrumentWithAccountResponse_STATUS_ERROR       WidgetRegisterInstrumentWithAccountResponse_Status = 2
)

// Enum value maps for WidgetRegisterInstrumentWithAccountResponse_Status.
var (
	WidgetRegisterInstrumentWithAccountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	WidgetRegisterInstrumentWithAccountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x WidgetRegisterInstrumentWithAccountResponse_Status) Enum() *WidgetRegisterInstrumentWithAccountResponse_Status {
	p := new(WidgetRegisterInstrumentWithAccountResponse_Status)
	*p = x
	return p
}

func (x WidgetRegisterInstrumentWithAccountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetRegisterInstrumentWithAccountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_instrument_v1_instrument_proto_enumTypes[1].Descriptor()
}

func (WidgetRegisterInstrumentWithAccountResponse_Status) Type() protoreflect.EnumType {
	return &file_connect_instrument_v1_instrument_proto_enumTypes[1]
}

func (x WidgetRegisterInstrumentWithAccountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetRegisterInstrumentWithAccountResponse_Status.Descriptor instead.
func (WidgetRegisterInstrumentWithAccountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{5, 0}
}

type WidgetRegisterInstrumentCompleteResponse_Status int32

const (
	WidgetRegisterInstrumentCompleteResponse_STATUS_UNSPECIFIED                WidgetRegisterInstrumentCompleteResponse_Status = 0
	WidgetRegisterInstrumentCompleteResponse_STATUS_SUCCESS                    WidgetRegisterInstrumentCompleteResponse_Status = 1
	WidgetRegisterInstrumentCompleteResponse_STATUS_ERROR                      WidgetRegisterInstrumentCompleteResponse_Status = 2
	WidgetRegisterInstrumentCompleteResponse_STATUS_MATCHING_CODE_MISMATCH     WidgetRegisterInstrumentCompleteResponse_Status = 3
	WidgetRegisterInstrumentCompleteResponse_STATUS_INVALID_REGISTRATION_STATE WidgetRegisterInstrumentCompleteResponse_Status = 4
)

// Enum value maps for WidgetRegisterInstrumentCompleteResponse_Status.
var (
	WidgetRegisterInstrumentCompleteResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_MATCHING_CODE_MISMATCH",
		4: "STATUS_INVALID_REGISTRATION_STATE",
	}
	WidgetRegisterInstrumentCompleteResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":                0,
		"STATUS_SUCCESS":                    1,
		"STATUS_ERROR":                      2,
		"STATUS_MATCHING_CODE_MISMATCH":     3,
		"STATUS_INVALID_REGISTRATION_STATE": 4,
	}
)

func (x WidgetRegisterInstrumentCompleteResponse_Status) Enum() *WidgetRegisterInstrumentCompleteResponse_Status {
	p := new(WidgetRegisterInstrumentCompleteResponse_Status)
	*p = x
	return p
}

func (x WidgetRegisterInstrumentCompleteResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetRegisterInstrumentCompleteResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_instrument_v1_instrument_proto_enumTypes[2].Descriptor()
}

func (WidgetRegisterInstrumentCompleteResponse_Status) Type() protoreflect.EnumType {
	return &file_connect_instrument_v1_instrument_proto_enumTypes[2]
}

func (x WidgetRegisterInstrumentCompleteResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetRegisterInstrumentCompleteResponse_Status.Descriptor instead.
func (WidgetRegisterInstrumentCompleteResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{9, 0}
}

type WidgetRibbitRegisterInstrumentInitiateResponse_Status int32

const (
	WidgetRibbitRegisterInstrumentInitiateResponse_STATUS_UNSPECIFIED WidgetRibbitRegisterInstrumentInitiateResponse_Status = 0
	WidgetRibbitRegisterInstrumentInitiateResponse_STATUS_SUCCESS     WidgetRibbitRegisterInstrumentInitiateResponse_Status = 1
	// generic error that's not one of the following
	WidgetRibbitRegisterInstrumentInitiateResponse_STATUS_ERROR                        WidgetRibbitRegisterInstrumentInitiateResponse_Status = 2
	WidgetRibbitRegisterInstrumentInitiateResponse_STATUS_UNSUPPORTED_SERVICE_PROVIDER WidgetRibbitRegisterInstrumentInitiateResponse_Status = 3
)

// Enum value maps for WidgetRibbitRegisterInstrumentInitiateResponse_Status.
var (
	WidgetRibbitRegisterInstrumentInitiateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_UNSUPPORTED_SERVICE_PROVIDER",
	}
	WidgetRibbitRegisterInstrumentInitiateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":                  0,
		"STATUS_SUCCESS":                      1,
		"STATUS_ERROR":                        2,
		"STATUS_UNSUPPORTED_SERVICE_PROVIDER": 3,
	}
)

func (x WidgetRibbitRegisterInstrumentInitiateResponse_Status) Enum() *WidgetRibbitRegisterInstrumentInitiateResponse_Status {
	p := new(WidgetRibbitRegisterInstrumentInitiateResponse_Status)
	*p = x
	return p
}

func (x WidgetRibbitRegisterInstrumentInitiateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WidgetRibbitRegisterInstrumentInitiateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_connect_instrument_v1_instrument_proto_enumTypes[3].Descriptor()
}

func (WidgetRibbitRegisterInstrumentInitiateResponse_Status) Type() protoreflect.EnumType {
	return &file_connect_instrument_v1_instrument_proto_enumTypes[3]
}

func (x WidgetRibbitRegisterInstrumentInitiateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WidgetRibbitRegisterInstrumentInitiateResponse_Status.Descriptor instead.
func (WidgetRibbitRegisterInstrumentInitiateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{11, 0}
}

type WidgetRegisterInstrumentInitiateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey string `protobuf:"bytes,1,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	// The financial institution which holds this account/instrument.
	ServiceProviderKey string `protobuf:"bytes,2,opt,name=service_provider_key,json=serviceProviderKey,proto3" json:"service_provider_key,omitempty"`
	// Types that are assignable to InstrumentIdentifier:
	//
	//	*WidgetRegisterInstrumentInitiateRequest_BankAccountCredentials
	//	*WidgetRegisterInstrumentInitiateRequest_BankAccountNumber
	//	*WidgetRegisterInstrumentInitiateRequest_ConnectDetails
	InstrumentIdentifier isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier `protobuf_oneof:"instrument_identifier"`
}

func (x *WidgetRegisterInstrumentInitiateRequest) Reset() {
	*x = WidgetRegisterInstrumentInitiateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentInitiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentInitiateRequest) ProtoMessage() {}

func (x *WidgetRegisterInstrumentInitiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentInitiateRequest.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentInitiateRequest) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *WidgetRegisterInstrumentInitiateRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *WidgetRegisterInstrumentInitiateRequest) GetServiceProviderKey() string {
	if x != nil {
		return x.ServiceProviderKey
	}
	return ""
}

func (m *WidgetRegisterInstrumentInitiateRequest) GetInstrumentIdentifier() isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier {
	if m != nil {
		return m.InstrumentIdentifier
	}
	return nil
}

func (x *WidgetRegisterInstrumentInitiateRequest) GetBankAccountCredentials() *v1.BankAccountCredentials {
	if x, ok := x.GetInstrumentIdentifier().(*WidgetRegisterInstrumentInitiateRequest_BankAccountCredentials); ok {
		return x.BankAccountCredentials
	}
	return nil
}

func (x *WidgetRegisterInstrumentInitiateRequest) GetBankAccountNumber() *v1.BankAccountNumber {
	if x, ok := x.GetInstrumentIdentifier().(*WidgetRegisterInstrumentInitiateRequest_BankAccountNumber); ok {
		return x.BankAccountNumber
	}
	return nil
}

func (x *WidgetRegisterInstrumentInitiateRequest) GetConnectDetails() *ConnectDetails {
	if x, ok := x.GetInstrumentIdentifier().(*WidgetRegisterInstrumentInitiateRequest_ConnectDetails); ok {
		return x.ConnectDetails
	}
	return nil
}

type isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier interface {
	isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier()
}

type WidgetRegisterInstrumentInitiateRequest_BankAccountCredentials struct {
	BankAccountCredentials *v1.BankAccountCredentials `protobuf:"bytes,4,opt,name=bank_account_credentials,json=bankAccountCredentials,proto3,oneof"`
}

type WidgetRegisterInstrumentInitiateRequest_BankAccountNumber struct {
	BankAccountNumber *v1.BankAccountNumber `protobuf:"bytes,5,opt,name=bank_account_number,json=bankAccountNumber,proto3,oneof"`
}

type WidgetRegisterInstrumentInitiateRequest_ConnectDetails struct {
	ConnectDetails *ConnectDetails `protobuf:"bytes,3,opt,name=connect_details,json=connectDetails,proto3,oneof"`
}

func (*WidgetRegisterInstrumentInitiateRequest_BankAccountCredentials) isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier() {
}

func (*WidgetRegisterInstrumentInitiateRequest_BankAccountNumber) isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier() {
}

func (*WidgetRegisterInstrumentInitiateRequest_ConnectDetails) isWidgetRegisterInstrumentInitiateRequest_InstrumentIdentifier() {
}

type ConnectDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectDetails) Reset() {
	*x = ConnectDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectDetails) ProtoMessage() {}

func (x *ConnectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectDetails.ProtoReflect.Descriptor instead.
func (*ConnectDetails) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{1}
}

type WidgetRegisterInstrumentInitiateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status WidgetRegisterInstrumentInitiateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// list of possible instruments the user can choose from
	Instruments []*Instrument `protobuf:"bytes,3,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *WidgetRegisterInstrumentInitiateResponse) Reset() {
	*x = WidgetRegisterInstrumentInitiateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentInitiateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentInitiateResponse) ProtoMessage() {}

func (x *WidgetRegisterInstrumentInitiateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentInitiateResponse.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentInitiateResponse) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{2}
}

func (x *WidgetRegisterInstrumentInitiateResponse) GetStatus() WidgetRegisterInstrumentInitiateResponse_Status {
	if x != nil {
		return x.Status
	}
	return WidgetRegisterInstrumentInitiateResponse_STATUS_UNSPECIFIED
}

func (x *WidgetRegisterInstrumentInitiateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WidgetRegisterInstrumentInitiateResponse) GetInstruments() []*Instrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstrumentType       instrumenttypev1.InstrumentType `protobuf:"varint,1,opt,name=instrument_type,json=instrumentType,proto3,enum=common.enums.instrumenttype.v1.InstrumentType" json:"instrument_type,omitempty"`
	Currency             currencyv1.Currency             `protobuf:"varint,3,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	InstrumentIdentifier string                          `protobuf:"bytes,2,opt,name=instrument_identifier,json=instrumentIdentifier,proto3" json:"instrument_identifier,omitempty"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{3}
}

func (x *Instrument) GetInstrumentType() instrumenttypev1.InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return instrumenttypev1.InstrumentType(0)
}

func (x *Instrument) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (x *Instrument) GetInstrumentIdentifier() string {
	if x != nil {
		return x.InstrumentIdentifier
	}
	return ""
}

type WidgetRegisterInstrumentWithAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey string      `protobuf:"bytes,1,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	Instrument *Instrument `protobuf:"bytes,3,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *WidgetRegisterInstrumentWithAccountRequest) Reset() {
	*x = WidgetRegisterInstrumentWithAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentWithAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentWithAccountRequest) ProtoMessage() {}

func (x *WidgetRegisterInstrumentWithAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentWithAccountRequest.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentWithAccountRequest) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{4}
}

func (x *WidgetRegisterInstrumentWithAccountRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *WidgetRegisterInstrumentWithAccountRequest) GetInstrument() *Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

type WidgetRegisterInstrumentWithAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status WidgetRegisterInstrumentWithAccountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The matching code sent to the client. Only returned in non-production environments.
	MatchingCode string `protobuf:"bytes,3,opt,name=matching_code,json=matchingCode,proto3" json:"matching_code,omitempty"`
}

func (x *WidgetRegisterInstrumentWithAccountResponse) Reset() {
	*x = WidgetRegisterInstrumentWithAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentWithAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentWithAccountResponse) ProtoMessage() {}

func (x *WidgetRegisterInstrumentWithAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentWithAccountResponse.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentWithAccountResponse) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{5}
}

func (x *WidgetRegisterInstrumentWithAccountResponse) GetStatus() WidgetRegisterInstrumentWithAccountResponse_Status {
	if x != nil {
		return x.Status
	}
	return WidgetRegisterInstrumentWithAccountResponse_STATUS_UNSPECIFIED
}

func (x *WidgetRegisterInstrumentWithAccountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WidgetRegisterInstrumentWithAccountResponse) GetMatchingCode() string {
	if x != nil {
		return x.MatchingCode
	}
	return ""
}

type WidgetRegisterInstrumentCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey string `protobuf:"bytes,1,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	// Types that are assignable to Details:
	//
	//	*WidgetRegisterInstrumentCompleteRequest_Connect
	//	*WidgetRegisterInstrumentCompleteRequest_Ribbit
	Details isWidgetRegisterInstrumentCompleteRequest_Details `protobuf_oneof:"details"`
}

func (x *WidgetRegisterInstrumentCompleteRequest) Reset() {
	*x = WidgetRegisterInstrumentCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentCompleteRequest) ProtoMessage() {}

func (x *WidgetRegisterInstrumentCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentCompleteRequest.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentCompleteRequest) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{6}
}

func (x *WidgetRegisterInstrumentCompleteRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (m *WidgetRegisterInstrumentCompleteRequest) GetDetails() isWidgetRegisterInstrumentCompleteRequest_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *WidgetRegisterInstrumentCompleteRequest) GetConnect() *Connect {
	if x, ok := x.GetDetails().(*WidgetRegisterInstrumentCompleteRequest_Connect); ok {
		return x.Connect
	}
	return nil
}

func (x *WidgetRegisterInstrumentCompleteRequest) GetRibbit() *Ribbit {
	if x, ok := x.GetDetails().(*WidgetRegisterInstrumentCompleteRequest_Ribbit); ok {
		return x.Ribbit
	}
	return nil
}

type isWidgetRegisterInstrumentCompleteRequest_Details interface {
	isWidgetRegisterInstrumentCompleteRequest_Details()
}

type WidgetRegisterInstrumentCompleteRequest_Connect struct {
	Connect *Connect `protobuf:"bytes,2,opt,name=connect,proto3,oneof"`
}

type WidgetRegisterInstrumentCompleteRequest_Ribbit struct {
	Ribbit *Ribbit `protobuf:"bytes,3,opt,name=ribbit,proto3,oneof"`
}

func (*WidgetRegisterInstrumentCompleteRequest_Connect) isWidgetRegisterInstrumentCompleteRequest_Details() {
}

func (*WidgetRegisterInstrumentCompleteRequest_Ribbit) isWidgetRegisterInstrumentCompleteRequest_Details() {
}

type Connect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The matching code sent from the users Service Provider and given by the user.
	MatchingCode string `protobuf:"bytes,1,opt,name=matching_code,json=matchingCode,proto3" json:"matching_code,omitempty"`
}

func (x *Connect) Reset() {
	*x = Connect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{7}
}

func (x *Connect) GetMatchingCode() string {
	if x != nil {
		return x.MatchingCode
	}
	return ""
}

type Ribbit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountToken string `protobuf:"bytes,1,opt,name=account_token,json=accountToken,proto3" json:"account_token,omitempty"`
}

func (x *Ribbit) Reset() {
	*x = Ribbit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ribbit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ribbit) ProtoMessage() {}

func (x *Ribbit) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ribbit.ProtoReflect.Descriptor instead.
func (*Ribbit) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{8}
}

func (x *Ribbit) GetAccountToken() string {
	if x != nil {
		return x.AccountToken
	}
	return ""
}

type WidgetRegisterInstrumentCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status WidgetRegisterInstrumentCompleteResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WidgetRegisterInstrumentCompleteResponse) Reset() {
	*x = WidgetRegisterInstrumentCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRegisterInstrumentCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRegisterInstrumentCompleteResponse) ProtoMessage() {}

func (x *WidgetRegisterInstrumentCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRegisterInstrumentCompleteResponse.ProtoReflect.Descriptor instead.
func (*WidgetRegisterInstrumentCompleteResponse) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{9}
}

func (x *WidgetRegisterInstrumentCompleteResponse) GetStatus() WidgetRegisterInstrumentCompleteResponse_Status {
	if x != nil {
		return x.Status
	}
	return WidgetRegisterInstrumentCompleteResponse_STATUS_UNSPECIFIED
}

func (x *WidgetRegisterInstrumentCompleteResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type WidgetRibbitRegisterInstrumentInitiateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey string `protobuf:"bytes,1,opt,name=session_key,json=sessionKey,proto3" json:"session_key,omitempty"`
	// The financial institution which holds this account/instrument.
	ServiceProviderKey string `protobuf:"bytes,2,opt,name=service_provider_key,json=serviceProviderKey,proto3" json:"service_provider_key,omitempty"`
}

func (x *WidgetRibbitRegisterInstrumentInitiateRequest) Reset() {
	*x = WidgetRibbitRegisterInstrumentInitiateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRibbitRegisterInstrumentInitiateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRibbitRegisterInstrumentInitiateRequest) ProtoMessage() {}

func (x *WidgetRibbitRegisterInstrumentInitiateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRibbitRegisterInstrumentInitiateRequest.ProtoReflect.Descriptor instead.
func (*WidgetRibbitRegisterInstrumentInitiateRequest) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{10}
}

func (x *WidgetRibbitRegisterInstrumentInitiateRequest) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *WidgetRibbitRegisterInstrumentInitiateRequest) GetServiceProviderKey() string {
	if x != nil {
		return x.ServiceProviderKey
	}
	return ""
}

type WidgetRibbitRegisterInstrumentInitiateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              WidgetRibbitRegisterInstrumentInitiateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse_Status" json:"status,omitempty"`
	Error               *v1.Error                                             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Script              string                                                `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	RibbitInstitutionId int64                                                 `protobuf:"varint,4,opt,name=ribbit_institution_id,json=ribbitInstitutionId,proto3" json:"ribbit_institution_id,omitempty"`
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) Reset() {
	*x = WidgetRibbitRegisterInstrumentInitiateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_instrument_v1_instrument_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WidgetRibbitRegisterInstrumentInitiateResponse) ProtoMessage() {}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connect_instrument_v1_instrument_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WidgetRibbitRegisterInstrumentInitiateResponse.ProtoReflect.Descriptor instead.
func (*WidgetRibbitRegisterInstrumentInitiateResponse) Descriptor() ([]byte, []int) {
	return file_connect_instrument_v1_instrument_proto_rawDescGZIP(), []int{11}
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) GetStatus() WidgetRibbitRegisterInstrumentInitiateResponse_Status {
	if x != nil {
		return x.Status
	}
	return WidgetRibbitRegisterInstrumentInitiateResponse_STATUS_UNSPECIFIED
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *WidgetRibbitRegisterInstrumentInitiateResponse) GetRibbitInstitutionId() int64 {
	if x != nil {
		return x.RibbitInstitutionId
	}
	return 0
}

var File_connect_instrument_v1_instrument_proto protoreflect.FileDescriptor

var file_connect_instrument_v1_instrument_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x03, 0x0a, 0x27, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x1e, 0x18, 0x32, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x3b, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x5d, 0x0a, 0x18,
	0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x16, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x4e, 0x0a, 0x13, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52, 0x11, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x17, 0x0a,
	0x15, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x28, 0x57, 0x69, 0x64,
	0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x6f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x52, 0x10, 0x03, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x57, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x33, 0x0a, 0x15, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x22, 0x9b, 0x01, 0x0a, 0x2a, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xa5,
	0x02, 0x0a, 0x2b, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74, 0x68, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49,
	0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x46,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xd5, 0x01, 0x0a, 0x27, 0x57, 0x69, 0x64, 0x67, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e,
	0x18, 0x32, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3a,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x48,
	0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x69,
	0x62, 0x62, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x69, 0x62, 0x62, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x69, 0x62,
	0x62, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x2e,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2d,
	0x0a, 0x06, 0x52, 0x69, 0x62, 0x62, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc5, 0x02,
	0x0a, 0x28, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x46, 0x2e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x90, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x12, 0x25,
	0x0a, 0x21, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x04, 0x22, 0x98, 0x01, 0x0a, 0x2d, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74,
	0x52, 0x69, 0x62, 0x62, 0x69, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52, 0x12, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x22, 0xfb, 0x02, 0x0a, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x69, 0x62, 0x62, 0x69,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x52, 0x69, 0x62, 0x62, 0x69, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x69, 0x62,
	0x62, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x72, 0x69, 0x62, 0x62, 0x69, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x6f, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x03, 0x42, 0x58,
	0x0a, 0x1d, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42,
	0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x5a, 0x1f, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x76,
	0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connect_instrument_v1_instrument_proto_rawDescOnce sync.Once
	file_connect_instrument_v1_instrument_proto_rawDescData = file_connect_instrument_v1_instrument_proto_rawDesc
)

func file_connect_instrument_v1_instrument_proto_rawDescGZIP() []byte {
	file_connect_instrument_v1_instrument_proto_rawDescOnce.Do(func() {
		file_connect_instrument_v1_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_connect_instrument_v1_instrument_proto_rawDescData)
	})
	return file_connect_instrument_v1_instrument_proto_rawDescData
}

var file_connect_instrument_v1_instrument_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_connect_instrument_v1_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_connect_instrument_v1_instrument_proto_goTypes = []interface{}{
	(WidgetRegisterInstrumentInitiateResponse_Status)(0),       // 0: connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse.Status
	(WidgetRegisterInstrumentWithAccountResponse_Status)(0),    // 1: connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse.Status
	(WidgetRegisterInstrumentCompleteResponse_Status)(0),       // 2: connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse.Status
	(WidgetRibbitRegisterInstrumentInitiateResponse_Status)(0), // 3: connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse.Status
	(*WidgetRegisterInstrumentInitiateRequest)(nil),            // 4: connect.instrument.v1.WidgetRegisterInstrumentInitiateRequest
	(*ConnectDetails)(nil),                                     // 5: connect.instrument.v1.ConnectDetails
	(*WidgetRegisterInstrumentInitiateResponse)(nil),           // 6: connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse
	(*Instrument)(nil), // 7: connect.instrument.v1.Instrument
	(*WidgetRegisterInstrumentWithAccountRequest)(nil),  // 8: connect.instrument.v1.WidgetRegisterInstrumentWithAccountRequest
	(*WidgetRegisterInstrumentWithAccountResponse)(nil), // 9: connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse
	(*WidgetRegisterInstrumentCompleteRequest)(nil),     // 10: connect.instrument.v1.WidgetRegisterInstrumentCompleteRequest
	(*Connect)(nil), // 11: connect.instrument.v1.Connect
	(*Ribbit)(nil),  // 12: connect.instrument.v1.Ribbit
	(*WidgetRegisterInstrumentCompleteResponse)(nil),       // 13: connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse
	(*WidgetRibbitRegisterInstrumentInitiateRequest)(nil),  // 14: connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateRequest
	(*WidgetRibbitRegisterInstrumentInitiateResponse)(nil), // 15: connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse
	(*v1.BankAccountCredentials)(nil),                      // 16: common.v1.BankAccountCredentials
	(*v1.BankAccountNumber)(nil),                           // 17: common.v1.BankAccountNumber
	(*v1.Error)(nil),                                       // 18: common.v1.Error
	(instrumenttypev1.InstrumentType)(0),                   // 19: common.enums.instrumenttype.v1.InstrumentType
	(currencyv1.Currency)(0),                               // 20: common.enums.currency.v1.Currency
}
var file_connect_instrument_v1_instrument_proto_depIdxs = []int32{
	16, // 0: connect.instrument.v1.WidgetRegisterInstrumentInitiateRequest.bank_account_credentials:type_name -> common.v1.BankAccountCredentials
	17, // 1: connect.instrument.v1.WidgetRegisterInstrumentInitiateRequest.bank_account_number:type_name -> common.v1.BankAccountNumber
	5,  // 2: connect.instrument.v1.WidgetRegisterInstrumentInitiateRequest.connect_details:type_name -> connect.instrument.v1.ConnectDetails
	0,  // 3: connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse.status:type_name -> connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse.Status
	18, // 4: connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse.error:type_name -> common.v1.Error
	7,  // 5: connect.instrument.v1.WidgetRegisterInstrumentInitiateResponse.instruments:type_name -> connect.instrument.v1.Instrument
	19, // 6: connect.instrument.v1.Instrument.instrument_type:type_name -> common.enums.instrumenttype.v1.InstrumentType
	20, // 7: connect.instrument.v1.Instrument.currency:type_name -> common.enums.currency.v1.Currency
	7,  // 8: connect.instrument.v1.WidgetRegisterInstrumentWithAccountRequest.instrument:type_name -> connect.instrument.v1.Instrument
	1,  // 9: connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse.status:type_name -> connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse.Status
	18, // 10: connect.instrument.v1.WidgetRegisterInstrumentWithAccountResponse.error:type_name -> common.v1.Error
	11, // 11: connect.instrument.v1.WidgetRegisterInstrumentCompleteRequest.connect:type_name -> connect.instrument.v1.Connect
	12, // 12: connect.instrument.v1.WidgetRegisterInstrumentCompleteRequest.ribbit:type_name -> connect.instrument.v1.Ribbit
	2,  // 13: connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse.status:type_name -> connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse.Status
	18, // 14: connect.instrument.v1.WidgetRegisterInstrumentCompleteResponse.error:type_name -> common.v1.Error
	3,  // 15: connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse.status:type_name -> connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse.Status
	18, // 16: connect.instrument.v1.WidgetRibbitRegisterInstrumentInitiateResponse.error:type_name -> common.v1.Error
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_connect_instrument_v1_instrument_proto_init() }
func file_connect_instrument_v1_instrument_proto_init() {
	if File_connect_instrument_v1_instrument_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_connect_instrument_v1_instrument_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentInitiateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentInitiateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentWithAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentWithAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ribbit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRegisterInstrumentCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRibbitRegisterInstrumentInitiateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_instrument_v1_instrument_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WidgetRibbitRegisterInstrumentInitiateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_connect_instrument_v1_instrument_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WidgetRegisterInstrumentInitiateRequest_BankAccountCredentials)(nil),
		(*WidgetRegisterInstrumentInitiateRequest_BankAccountNumber)(nil),
		(*WidgetRegisterInstrumentInitiateRequest_ConnectDetails)(nil),
	}
	file_connect_instrument_v1_instrument_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*WidgetRegisterInstrumentCompleteRequest_Connect)(nil),
		(*WidgetRegisterInstrumentCompleteRequest_Ribbit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connect_instrument_v1_instrument_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connect_instrument_v1_instrument_proto_goTypes,
		DependencyIndexes: file_connect_instrument_v1_instrument_proto_depIdxs,
		EnumInfos:         file_connect_instrument_v1_instrument_proto_enumTypes,
		MessageInfos:      file_connect_instrument_v1_instrument_proto_msgTypes,
	}.Build()
	File_connect_instrument_v1_instrument_proto = out.File
	file_connect_instrument_v1_instrument_proto_rawDesc = nil
	file_connect_instrument_v1_instrument_proto_goTypes = nil
	file_connect_instrument_v1_instrument_proto_depIdxs = nil
}
