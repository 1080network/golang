// Copyright (c) 2022 Mica, Inc. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: discount/discount/v1/discount.proto

package discountv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	currencyv1 "github.com/1080network/golang/discount/proto/common/enums/currencyv1"
	unitv1 "github.com/1080network/golang/discount/proto/common/enums/unitv1"
	v1 "github.com/1080network/golang/discount/proto/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscountStatus int32

const (
	DiscountStatus_DISCOUNT_STATUS_UNSPECIFIED DiscountStatus = 0
	DiscountStatus_DISCOUNT_STATUS_AVAILABLE   DiscountStatus = 1
	// transitory status set by Mica when a discount would apply during transaction processing.
	DiscountStatus_DISCOUNT_STATUS_HOLD DiscountStatus = 2
	// set by the discount provider
	DiscountStatus_DISCOUNT_STATUS_SUSPENDED DiscountStatus = 3
	DiscountStatus_DISCOUNT_STATUS_USED      DiscountStatus = 4
	DiscountStatus_DISCOUNT_STATUS_CLOSED    DiscountStatus = 5
)

// Enum value maps for DiscountStatus.
var (
	DiscountStatus_name = map[int32]string{
		0: "DISCOUNT_STATUS_UNSPECIFIED",
		1: "DISCOUNT_STATUS_AVAILABLE",
		2: "DISCOUNT_STATUS_HOLD",
		3: "DISCOUNT_STATUS_SUSPENDED",
		4: "DISCOUNT_STATUS_USED",
		5: "DISCOUNT_STATUS_CLOSED",
	}
	DiscountStatus_value = map[string]int32{
		"DISCOUNT_STATUS_UNSPECIFIED": 0,
		"DISCOUNT_STATUS_AVAILABLE":   1,
		"DISCOUNT_STATUS_HOLD":        2,
		"DISCOUNT_STATUS_SUSPENDED":   3,
		"DISCOUNT_STATUS_USED":        4,
		"DISCOUNT_STATUS_CLOSED":      5,
	}
)

func (x DiscountStatus) Enum() *DiscountStatus {
	p := new(DiscountStatus)
	*p = x
	return p
}

func (x DiscountStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_discount_discount_v1_discount_proto_enumTypes[0].Descriptor()
}

func (DiscountStatus) Type() protoreflect.EnumType {
	return &file_discount_discount_v1_discount_proto_enumTypes[0]
}

func (x DiscountStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountStatus.Descriptor instead.
func (DiscountStatus) EnumDescriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{0}
}

type DiscountType int32

const (
	DiscountType_DISCOUNT_TYPE_UNSPECIFIED      DiscountType = 0
	DiscountType_DISCOUNT_TYPE_CPG              DiscountType = 1
	DiscountType_DISCOUNT_TYPE_GOVERNMENT       DiscountType = 2
	DiscountType_DISCOUNT_TYPE_PARTNER          DiscountType = 3
	DiscountType_DISCOUNT_TYPE_SERVICE_PROVIDER DiscountType = 4
)

// Enum value maps for DiscountType.
var (
	DiscountType_name = map[int32]string{
		0: "DISCOUNT_TYPE_UNSPECIFIED",
		1: "DISCOUNT_TYPE_CPG",
		2: "DISCOUNT_TYPE_GOVERNMENT",
		3: "DISCOUNT_TYPE_PARTNER",
		4: "DISCOUNT_TYPE_SERVICE_PROVIDER",
	}
	DiscountType_value = map[string]int32{
		"DISCOUNT_TYPE_UNSPECIFIED":      0,
		"DISCOUNT_TYPE_CPG":              1,
		"DISCOUNT_TYPE_GOVERNMENT":       2,
		"DISCOUNT_TYPE_PARTNER":          3,
		"DISCOUNT_TYPE_SERVICE_PROVIDER": 4,
	}
)

func (x DiscountType) Enum() *DiscountType {
	p := new(DiscountType)
	*p = x
	return p
}

func (x DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_discount_discount_v1_discount_proto_enumTypes[1].Descriptor()
}

func (DiscountType) Type() protoreflect.EnumType {
	return &file_discount_discount_v1_discount_proto_enumTypes[1]
}

func (x DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountType.Descriptor instead.
func (DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{1}
}

type CreateDiscountResponse_Status int32

const (
	CreateDiscountResponse_STATUS_UNSPECIFIED CreateDiscountResponse_Status = 0
	CreateDiscountResponse_STATUS_SUCCESS     CreateDiscountResponse_Status = 1
	CreateDiscountResponse_STATUS_ERROR       CreateDiscountResponse_Status = 2
)

// Enum value maps for CreateDiscountResponse_Status.
var (
	CreateDiscountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	CreateDiscountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x CreateDiscountResponse_Status) Enum() *CreateDiscountResponse_Status {
	p := new(CreateDiscountResponse_Status)
	*p = x
	return p
}

func (x CreateDiscountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateDiscountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_discount_discount_v1_discount_proto_enumTypes[2].Descriptor()
}

func (CreateDiscountResponse_Status) Type() protoreflect.EnumType {
	return &file_discount_discount_v1_discount_proto_enumTypes[2]
}

func (x CreateDiscountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateDiscountResponse_Status.Descriptor instead.
func (CreateDiscountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{6, 0}
}

type GetDiscountResponse_Status int32

const (
	GetDiscountResponse_STATUS_UNSPECIFIED GetDiscountResponse_Status = 0
	GetDiscountResponse_STATUS_SUCCESS     GetDiscountResponse_Status = 1
	GetDiscountResponse_STATUS_ERROR       GetDiscountResponse_Status = 2
	GetDiscountResponse_STATUS_NOT_FOUND   GetDiscountResponse_Status = 3
)

// Enum value maps for GetDiscountResponse_Status.
var (
	GetDiscountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	GetDiscountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x GetDiscountResponse_Status) Enum() *GetDiscountResponse_Status {
	p := new(GetDiscountResponse_Status)
	*p = x
	return p
}

func (x GetDiscountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDiscountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_discount_discount_v1_discount_proto_enumTypes[3].Descriptor()
}

func (GetDiscountResponse_Status) Type() protoreflect.EnumType {
	return &file_discount_discount_v1_discount_proto_enumTypes[3]
}

func (x GetDiscountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDiscountResponse_Status.Descriptor instead.
func (GetDiscountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{8, 0}
}

type ApplyDiscountNotificationResponse_Status int32

const (
	ApplyDiscountNotificationResponse_STATUS_UNSPECIFIED ApplyDiscountNotificationResponse_Status = 0
	ApplyDiscountNotificationResponse_STATUS_SUCCESS     ApplyDiscountNotificationResponse_Status = 1
	ApplyDiscountNotificationResponse_STATUS_ERROR       ApplyDiscountNotificationResponse_Status = 2
)

// Enum value maps for ApplyDiscountNotificationResponse_Status.
var (
	ApplyDiscountNotificationResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	ApplyDiscountNotificationResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x ApplyDiscountNotificationResponse_Status) Enum() *ApplyDiscountNotificationResponse_Status {
	p := new(ApplyDiscountNotificationResponse_Status)
	*p = x
	return p
}

func (x ApplyDiscountNotificationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplyDiscountNotificationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_discount_discount_v1_discount_proto_enumTypes[4].Descriptor()
}

func (ApplyDiscountNotificationResponse_Status) Type() protoreflect.EnumType {
	return &file_discount_discount_v1_discount_proto_enumTypes[4]
}

func (x ApplyDiscountNotificationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplyDiscountNotificationResponse_Status.Descriptor instead.
func (ApplyDiscountNotificationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{10, 0}
}

type Discount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountDefinitionKey string                 `protobuf:"bytes,1,opt,name=discount_definition_key,json=discountDefinitionKey,proto3" json:"discount_definition_key,omitempty"`
	DiscountKey           string                 `protobuf:"bytes,2,opt,name=discount_key,json=discountKey,proto3" json:"discount_key,omitempty"`
	Version               int64                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	DiscountRef           string                 `protobuf:"bytes,4,opt,name=discount_ref,json=discountRef,proto3" json:"discount_ref,omitempty"`
	ReceiptDescription    string                 `protobuf:"bytes,5,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	Status                DiscountStatus         `protobuf:"varint,6,opt,name=status,proto3,enum=discount.discount.v1.DiscountStatus" json:"status,omitempty"`
	Type                  DiscountType           `protobuf:"varint,7,opt,name=type,proto3,enum=discount.discount.v1.DiscountType" json:"type,omitempty"`
	DateFrom              *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo                *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	// the basket must include items that match each of the criteria (i.e. it's an and operation) in order for this
	// discount to apply
	DiscountCriteria []*DiscountCriteria `protobuf:"bytes,10,rep,name=discount_criteria,json=discountCriteria,proto3" json:"discount_criteria,omitempty"`
	Currency         currencyv1.Currency `protobuf:"varint,11,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	UserKey          string              `protobuf:"bytes,12,opt,name=user_key,json=userKey,proto3" json:"user_key,omitempty"`
	UserRef          string              `protobuf:"bytes,13,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
	// Types that are assignable to DiscountAmount:
	//	*Discount_MonetaryAmount
	//	*Discount_PercentageAmount
	DiscountAmount isDiscount_DiscountAmount `protobuf_oneof:"discount_amount"`
}

func (x *Discount) Reset() {
	*x = Discount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discount) ProtoMessage() {}

func (x *Discount) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discount.ProtoReflect.Descriptor instead.
func (*Discount) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{0}
}

func (x *Discount) GetDiscountDefinitionKey() string {
	if x != nil {
		return x.DiscountDefinitionKey
	}
	return ""
}

func (x *Discount) GetDiscountKey() string {
	if x != nil {
		return x.DiscountKey
	}
	return ""
}

func (x *Discount) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Discount) GetDiscountRef() string {
	if x != nil {
		return x.DiscountRef
	}
	return ""
}

func (x *Discount) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *Discount) GetStatus() DiscountStatus {
	if x != nil {
		return x.Status
	}
	return DiscountStatus_DISCOUNT_STATUS_UNSPECIFIED
}

func (x *Discount) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_DISCOUNT_TYPE_UNSPECIFIED
}

func (x *Discount) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *Discount) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *Discount) GetDiscountCriteria() []*DiscountCriteria {
	if x != nil {
		return x.DiscountCriteria
	}
	return nil
}

func (x *Discount) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (x *Discount) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *Discount) GetUserRef() string {
	if x != nil {
		return x.UserRef
	}
	return ""
}

func (m *Discount) GetDiscountAmount() isDiscount_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *Discount) GetMonetaryAmount() *MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*Discount_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *Discount) GetPercentageAmount() *PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*Discount_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

type isDiscount_DiscountAmount interface {
	isDiscount_DiscountAmount()
}

type Discount_MonetaryAmount struct {
	MonetaryAmount *MonetaryAmount `protobuf:"bytes,14,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type Discount_PercentageAmount struct {
	PercentageAmount *PercentageAmount `protobuf:"bytes,15,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*Discount_MonetaryAmount) isDiscount_DiscountAmount() {}

func (*Discount_PercentageAmount) isDiscount_DiscountAmount() {}

type Quantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// an integer or decimal number
	Quantity string      `protobuf:"bytes,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit     unitv1.Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=common.enums.unit.v1.Unit" json:"unit,omitempty"`
}

func (x *Quantity) Reset() {
	*x = Quantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quantity) ProtoMessage() {}

func (x *Quantity) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quantity.ProtoReflect.Descriptor instead.
func (*Quantity) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{1}
}

func (x *Quantity) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *Quantity) GetUnit() unitv1.Unit {
	if x != nil {
		return x.Unit
	}
	return unitv1.Unit(0)
}

type DiscountCriteria struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity       *Quantity       `protobuf:"bytes,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	MonetaryAmount *MonetaryAmount `protobuf:"bytes,2,opt,name=monetary_amount,json=monetaryAmount,proto3" json:"monetary_amount,omitempty"`
	// indicates that this criteria is used to determine how much value to apply to these items
	DiscountAmountApplicable bool     `protobuf:"varint,3,opt,name=discount_amount_applicable,json=discountAmountApplicable,proto3" json:"discount_amount_applicable,omitempty"`
	ProductGroups            []string `protobuf:"bytes,4,rep,name=product_groups,json=productGroups,proto3" json:"product_groups,omitempty"`
	// list of product codes of which the basket must include at least one in this list (i.e. it's an or operation)
	ProductCodes []string `protobuf:"bytes,5,rep,name=product_codes,json=productCodes,proto3" json:"product_codes,omitempty"`
}

func (x *DiscountCriteria) Reset() {
	*x = DiscountCriteria{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountCriteria) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountCriteria) ProtoMessage() {}

func (x *DiscountCriteria) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountCriteria.ProtoReflect.Descriptor instead.
func (*DiscountCriteria) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{2}
}

func (x *DiscountCriteria) GetQuantity() *Quantity {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *DiscountCriteria) GetMonetaryAmount() *MonetaryAmount {
	if x != nil {
		return x.MonetaryAmount
	}
	return nil
}

func (x *DiscountCriteria) GetDiscountAmountApplicable() bool {
	if x != nil {
		return x.DiscountAmountApplicable
	}
	return false
}

func (x *DiscountCriteria) GetProductGroups() []string {
	if x != nil {
		return x.ProductGroups
	}
	return nil
}

func (x *DiscountCriteria) GetProductCodes() []string {
	if x != nil {
		return x.ProductCodes
	}
	return nil
}

type MonetaryAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// must be a monetary amount (e.g. 0.34)
	Amount    string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TaxAmount string `protobuf:"bytes,2,opt,name=tax_amount,json=taxAmount,proto3" json:"tax_amount,omitempty"`
}

func (x *MonetaryAmount) Reset() {
	*x = MonetaryAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonetaryAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonetaryAmount) ProtoMessage() {}

func (x *MonetaryAmount) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonetaryAmount.ProtoReflect.Descriptor instead.
func (*MonetaryAmount) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{3}
}

func (x *MonetaryAmount) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MonetaryAmount) GetTaxAmount() string {
	if x != nil {
		return x.TaxAmount
	}
	return ""
}

type PercentageAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// must be a percentage (50.3%)
	PercentageAmount    string `protobuf:"bytes,1,opt,name=percentage_amount,json=percentageAmount,proto3" json:"percentage_amount,omitempty"`
	PercentageTaxAmount string `protobuf:"bytes,2,opt,name=percentage_tax_amount,json=percentageTaxAmount,proto3" json:"percentage_tax_amount,omitempty"`
	// must be a monetary amount (e.g. 0.34)
	MaxAmount *MonetaryAmount `protobuf:"bytes,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// what to apply the percentage to
	Criteria *DiscountCriteria `protobuf:"bytes,4,opt,name=criteria,proto3" json:"criteria,omitempty"`
}

func (x *PercentageAmount) Reset() {
	*x = PercentageAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PercentageAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PercentageAmount) ProtoMessage() {}

func (x *PercentageAmount) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PercentageAmount.ProtoReflect.Descriptor instead.
func (*PercentageAmount) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{4}
}

func (x *PercentageAmount) GetPercentageAmount() string {
	if x != nil {
		return x.PercentageAmount
	}
	return ""
}

func (x *PercentageAmount) GetPercentageTaxAmount() string {
	if x != nil {
		return x.PercentageTaxAmount
	}
	return ""
}

func (x *PercentageAmount) GetMaxAmount() *MonetaryAmount {
	if x != nil {
		return x.MaxAmount
	}
	return nil
}

func (x *PercentageAmount) GetCriteria() *DiscountCriteria {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type CreateDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountDescriptionKey string                 `protobuf:"bytes,1,opt,name=discount_description_key,json=discountDescriptionKey,proto3" json:"discount_description_key,omitempty"`
	DiscountRef            string                 `protobuf:"bytes,2,opt,name=discount_ref,json=discountRef,proto3" json:"discount_ref,omitempty"`
	ReceiptDescription     string                 `protobuf:"bytes,3,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	Status                 DiscountStatus         `protobuf:"varint,4,opt,name=status,proto3,enum=discount.discount.v1.DiscountStatus" json:"status,omitempty"`
	Type                   DiscountType           `protobuf:"varint,5,opt,name=type,proto3,enum=discount.discount.v1.DiscountType" json:"type,omitempty"`
	DateFrom               *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo                 *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	// the basket must include items that match each of the criteria (i.e. it's an and operation) in order for this
	// discount to apply
	DiscountCriteria []*DiscountCriteria `protobuf:"bytes,8,rep,name=discount_criteria,json=discountCriteria,proto3" json:"discount_criteria,omitempty"`
	UserKey          string              `protobuf:"bytes,9,opt,name=user_key,json=userKey,proto3" json:"user_key,omitempty"`
	UserRef          string              `protobuf:"bytes,10,opt,name=user_ref,json=userRef,proto3" json:"user_ref,omitempty"`
	Currency         currencyv1.Currency `protobuf:"varint,11,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Types that are assignable to DiscountAmount:
	//	*CreateDiscountRequest_MonetaryAmount
	//	*CreateDiscountRequest_PercentageAmount
	DiscountAmount isCreateDiscountRequest_DiscountAmount `protobuf_oneof:"discount_amount"`
}

func (x *CreateDiscountRequest) Reset() {
	*x = CreateDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscountRequest) ProtoMessage() {}

func (x *CreateDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscountRequest.ProtoReflect.Descriptor instead.
func (*CreateDiscountRequest) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDiscountRequest) GetDiscountDescriptionKey() string {
	if x != nil {
		return x.DiscountDescriptionKey
	}
	return ""
}

func (x *CreateDiscountRequest) GetDiscountRef() string {
	if x != nil {
		return x.DiscountRef
	}
	return ""
}

func (x *CreateDiscountRequest) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *CreateDiscountRequest) GetStatus() DiscountStatus {
	if x != nil {
		return x.Status
	}
	return DiscountStatus_DISCOUNT_STATUS_UNSPECIFIED
}

func (x *CreateDiscountRequest) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_DISCOUNT_TYPE_UNSPECIFIED
}

func (x *CreateDiscountRequest) GetDateFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *CreateDiscountRequest) GetDateTo() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

func (x *CreateDiscountRequest) GetDiscountCriteria() []*DiscountCriteria {
	if x != nil {
		return x.DiscountCriteria
	}
	return nil
}

func (x *CreateDiscountRequest) GetUserKey() string {
	if x != nil {
		return x.UserKey
	}
	return ""
}

func (x *CreateDiscountRequest) GetUserRef() string {
	if x != nil {
		return x.UserRef
	}
	return ""
}

func (x *CreateDiscountRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (m *CreateDiscountRequest) GetDiscountAmount() isCreateDiscountRequest_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *CreateDiscountRequest) GetMonetaryAmount() *MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*CreateDiscountRequest_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *CreateDiscountRequest) GetPercentageAmount() *PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*CreateDiscountRequest_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

type isCreateDiscountRequest_DiscountAmount interface {
	isCreateDiscountRequest_DiscountAmount()
}

type CreateDiscountRequest_MonetaryAmount struct {
	MonetaryAmount *MonetaryAmount `protobuf:"bytes,12,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type CreateDiscountRequest_PercentageAmount struct {
	PercentageAmount *PercentageAmount `protobuf:"bytes,13,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*CreateDiscountRequest_MonetaryAmount) isCreateDiscountRequest_DiscountAmount() {}

func (*CreateDiscountRequest_PercentageAmount) isCreateDiscountRequest_DiscountAmount() {}

type CreateDiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      CreateDiscountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=discount.discount.v1.CreateDiscountResponse_Status" json:"status,omitempty"`
	Error       *v1.Error                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DiscountKey string                        `protobuf:"bytes,3,opt,name=discount_key,json=discountKey,proto3" json:"discount_key,omitempty"`
	Version     int64                         `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateDiscountResponse) Reset() {
	*x = CreateDiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscountResponse) ProtoMessage() {}

func (x *CreateDiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscountResponse.ProtoReflect.Descriptor instead.
func (*CreateDiscountResponse) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{6}
}

func (x *CreateDiscountResponse) GetStatus() CreateDiscountResponse_Status {
	if x != nil {
		return x.Status
	}
	return CreateDiscountResponse_STATUS_UNSPECIFIED
}

func (x *CreateDiscountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateDiscountResponse) GetDiscountKey() string {
	if x != nil {
		return x.DiscountKey
	}
	return ""
}

func (x *CreateDiscountResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountKey string `protobuf:"bytes,1,opt,name=discount_key,json=discountKey,proto3" json:"discount_key,omitempty"`
}

func (x *GetDiscountRequest) Reset() {
	*x = GetDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountRequest) ProtoMessage() {}

func (x *GetDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountRequest.ProtoReflect.Descriptor instead.
func (*GetDiscountRequest) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{7}
}

func (x *GetDiscountRequest) GetDiscountKey() string {
	if x != nil {
		return x.DiscountKey
	}
	return ""
}

type GetDiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   GetDiscountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=discount.discount.v1.GetDiscountResponse_Status" json:"status,omitempty"`
	Error    *v1.Error                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Discount *Discount                  `protobuf:"bytes,3,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *GetDiscountResponse) Reset() {
	*x = GetDiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountResponse) ProtoMessage() {}

func (x *GetDiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountResponse.ProtoReflect.Descriptor instead.
func (*GetDiscountResponse) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{8}
}

func (x *GetDiscountResponse) GetStatus() GetDiscountResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetDiscountResponse_STATUS_UNSPECIFIED
}

func (x *GetDiscountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetDiscountResponse) GetDiscount() *Discount {
	if x != nil {
		return x.Discount
	}
	return nil
}

type ApplyDiscountNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// discount details
	DiscountKey    string              `protobuf:"bytes,1,opt,name=discount_key,json=discountKey,proto3" json:"discount_key,omitempty"`
	DiscountRef    string              `protobuf:"bytes,2,opt,name=discount_ref,json=discountRef,proto3" json:"discount_ref,omitempty"`
	Status         DiscountStatus      `protobuf:"varint,3,opt,name=status,proto3,enum=discount.discount.v1.DiscountStatus" json:"status,omitempty"` // only USED supported initially
	Currency       currencyv1.Currency `protobuf:"varint,4,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	MonetaryAmount *MonetaryAmount     `protobuf:"bytes,5,opt,name=monetary_amount,json=monetaryAmount,proto3" json:"monetary_amount,omitempty"`
	// transaction details
	TransactionKey      string                 `protobuf:"bytes,10,opt,name=transaction_key,json=transactionKey,proto3" json:"transaction_key,omitempty"`
	TransactionCreated  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=transaction_created,json=transactionCreated,proto3" json:"transaction_created,omitempty"` // Timestamp when discount was applied
	PartnerKey          string                 `protobuf:"bytes,13,opt,name=partner_key,json=partnerKey,proto3" json:"partner_key,omitempty"`
	PartnerName         string                 `protobuf:"bytes,14,opt,name=partner_name,json=partnerName,proto3" json:"partner_name,omitempty"`
	OrganizationKey     string                 `protobuf:"bytes,15,opt,name=organization_key,json=organizationKey,proto3" json:"organization_key,omitempty"`
	OrganizationName    string                 `protobuf:"bytes,16,opt,name=organization_name,json=organizationName,proto3" json:"organization_name,omitempty"`
	OrganizationAddress *v1.Address            `protobuf:"bytes,17,opt,name=organization_address,json=organizationAddress,proto3" json:"organization_address,omitempty"`
	StoreKey            string                 `protobuf:"bytes,19,opt,name=store_key,json=storeKey,proto3" json:"store_key,omitempty"`
	StoreNumber         string                 `protobuf:"bytes,20,opt,name=store_number,json=storeNumber,proto3" json:"store_number,omitempty"`
	StoreAddress        *v1.Address            `protobuf:"bytes,21,opt,name=store_address,json=storeAddress,proto3" json:"store_address,omitempty"`
	LineItems           []*v1.LineItem         `protobuf:"bytes,22,rep,name=line_items,json=lineItems,proto3" json:"line_items,omitempty"`
}

func (x *ApplyDiscountNotificationRequest) Reset() {
	*x = ApplyDiscountNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyDiscountNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyDiscountNotificationRequest) ProtoMessage() {}

func (x *ApplyDiscountNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyDiscountNotificationRequest.ProtoReflect.Descriptor instead.
func (*ApplyDiscountNotificationRequest) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{9}
}

func (x *ApplyDiscountNotificationRequest) GetDiscountKey() string {
	if x != nil {
		return x.DiscountKey
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetDiscountRef() string {
	if x != nil {
		return x.DiscountRef
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetStatus() DiscountStatus {
	if x != nil {
		return x.Status
	}
	return DiscountStatus_DISCOUNT_STATUS_UNSPECIFIED
}

func (x *ApplyDiscountNotificationRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (x *ApplyDiscountNotificationRequest) GetMonetaryAmount() *MonetaryAmount {
	if x != nil {
		return x.MonetaryAmount
	}
	return nil
}

func (x *ApplyDiscountNotificationRequest) GetTransactionKey() string {
	if x != nil {
		return x.TransactionKey
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetTransactionCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionCreated
	}
	return nil
}

func (x *ApplyDiscountNotificationRequest) GetPartnerKey() string {
	if x != nil {
		return x.PartnerKey
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetPartnerName() string {
	if x != nil {
		return x.PartnerName
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetOrganizationKey() string {
	if x != nil {
		return x.OrganizationKey
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetOrganizationName() string {
	if x != nil {
		return x.OrganizationName
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetOrganizationAddress() *v1.Address {
	if x != nil {
		return x.OrganizationAddress
	}
	return nil
}

func (x *ApplyDiscountNotificationRequest) GetStoreKey() string {
	if x != nil {
		return x.StoreKey
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetStoreNumber() string {
	if x != nil {
		return x.StoreNumber
	}
	return ""
}

func (x *ApplyDiscountNotificationRequest) GetStoreAddress() *v1.Address {
	if x != nil {
		return x.StoreAddress
	}
	return nil
}

func (x *ApplyDiscountNotificationRequest) GetLineItems() []*v1.LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type ApplyDiscountNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ApplyDiscountNotificationResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=discount.discount.v1.ApplyDiscountNotificationResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// TODO(kuchlein): determine if we want to have an identifier passed back. I'm leaning towards not
	ExternalRef string `protobuf:"bytes,3,opt,name=external_ref,json=externalRef,proto3" json:"external_ref,omitempty"`
}

func (x *ApplyDiscountNotificationResponse) Reset() {
	*x = ApplyDiscountNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_discount_discount_v1_discount_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyDiscountNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyDiscountNotificationResponse) ProtoMessage() {}

func (x *ApplyDiscountNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_discount_discount_v1_discount_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyDiscountNotificationResponse.ProtoReflect.Descriptor instead.
func (*ApplyDiscountNotificationResponse) Descriptor() ([]byte, []int) {
	return file_discount_discount_v1_discount_proto_rawDescGZIP(), []int{10}
}

func (x *ApplyDiscountNotificationResponse) GetStatus() ApplyDiscountNotificationResponse_Status {
	if x != nil {
		return x.Status
	}
	return ApplyDiscountNotificationResponse_STATUS_UNSPECIFIED
}

func (x *ApplyDiscountNotificationResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ApplyDiscountNotificationResponse) GetExternalRef() string {
	if x != nil {
		return x.ExternalRef
	}
	return ""
}

var File_discount_discount_v1_discount_proto protoreflect.FileDescriptor

var file_discount_discount_v1_discount_proto_rawDesc = []byte{
	0x0a, 0x23, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x27, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x69, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbd, 0x06, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x53, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x10,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d,
	0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61,
	0x72, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x56, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x75, 0x6e, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0xa7, 0x02, 0x0a, 0x10, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x3a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x0f, 0x6d, 0x6f,
	0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74,
	0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74,
	0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x1a, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x0e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfc, 0x01, 0x0a,
	0x10, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x61, 0x78,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x54, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x8f, 0x06, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x53, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x4f, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x92, 0x02,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xa1, 0x02, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0xbb, 0x06, 0x0a, 0x20, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4d, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65,
	0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x4b, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x11,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x14, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x13, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8e, 0x02,
	0x0a, 0x21, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x2a, 0xbf,
	0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x44,
	0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x49,
	0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x05,
	0x2a, 0xa1, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x43, 0x50, 0x47, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x49, 0x53, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4f, 0x56, 0x45, 0x52, 0x4e, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x10, 0x03,
	0x12, 0x22, 0x0a, 0x1e, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44,
	0x45, 0x52, 0x10, 0x04, 0x42, 0x54, 0x0a, 0x1c, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x5a, 0x1e, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_discount_discount_v1_discount_proto_rawDescOnce sync.Once
	file_discount_discount_v1_discount_proto_rawDescData = file_discount_discount_v1_discount_proto_rawDesc
)

func file_discount_discount_v1_discount_proto_rawDescGZIP() []byte {
	file_discount_discount_v1_discount_proto_rawDescOnce.Do(func() {
		file_discount_discount_v1_discount_proto_rawDescData = protoimpl.X.CompressGZIP(file_discount_discount_v1_discount_proto_rawDescData)
	})
	return file_discount_discount_v1_discount_proto_rawDescData
}

var file_discount_discount_v1_discount_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_discount_discount_v1_discount_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_discount_discount_v1_discount_proto_goTypes = []interface{}{
	(DiscountStatus)(0),                           // 0: discount.discount.v1.DiscountStatus
	(DiscountType)(0),                             // 1: discount.discount.v1.DiscountType
	(CreateDiscountResponse_Status)(0),            // 2: discount.discount.v1.CreateDiscountResponse.Status
	(GetDiscountResponse_Status)(0),               // 3: discount.discount.v1.GetDiscountResponse.Status
	(ApplyDiscountNotificationResponse_Status)(0), // 4: discount.discount.v1.ApplyDiscountNotificationResponse.Status
	(*Discount)(nil),                              // 5: discount.discount.v1.Discount
	(*Quantity)(nil),                              // 6: discount.discount.v1.Quantity
	(*DiscountCriteria)(nil),                      // 7: discount.discount.v1.DiscountCriteria
	(*MonetaryAmount)(nil),                        // 8: discount.discount.v1.MonetaryAmount
	(*PercentageAmount)(nil),                      // 9: discount.discount.v1.PercentageAmount
	(*CreateDiscountRequest)(nil),                 // 10: discount.discount.v1.CreateDiscountRequest
	(*CreateDiscountResponse)(nil),                // 11: discount.discount.v1.CreateDiscountResponse
	(*GetDiscountRequest)(nil),                    // 12: discount.discount.v1.GetDiscountRequest
	(*GetDiscountResponse)(nil),                   // 13: discount.discount.v1.GetDiscountResponse
	(*ApplyDiscountNotificationRequest)(nil),      // 14: discount.discount.v1.ApplyDiscountNotificationRequest
	(*ApplyDiscountNotificationResponse)(nil),     // 15: discount.discount.v1.ApplyDiscountNotificationResponse
	(*timestamppb.Timestamp)(nil),                 // 16: google.protobuf.Timestamp
	(currencyv1.Currency)(0),                      // 17: common.enums.currency.v1.Currency
	(unitv1.Unit)(0),                              // 18: common.enums.unit.v1.Unit
	(*v1.Error)(nil),                              // 19: common.v1.Error
	(*v1.Address)(nil),                            // 20: common.v1.Address
	(*v1.LineItem)(nil),                           // 21: common.v1.LineItem
}
var file_discount_discount_v1_discount_proto_depIdxs = []int32{
	0,  // 0: discount.discount.v1.Discount.status:type_name -> discount.discount.v1.DiscountStatus
	1,  // 1: discount.discount.v1.Discount.type:type_name -> discount.discount.v1.DiscountType
	16, // 2: discount.discount.v1.Discount.date_from:type_name -> google.protobuf.Timestamp
	16, // 3: discount.discount.v1.Discount.date_to:type_name -> google.protobuf.Timestamp
	7,  // 4: discount.discount.v1.Discount.discount_criteria:type_name -> discount.discount.v1.DiscountCriteria
	17, // 5: discount.discount.v1.Discount.currency:type_name -> common.enums.currency.v1.Currency
	8,  // 6: discount.discount.v1.Discount.monetary_amount:type_name -> discount.discount.v1.MonetaryAmount
	9,  // 7: discount.discount.v1.Discount.percentage_amount:type_name -> discount.discount.v1.PercentageAmount
	18, // 8: discount.discount.v1.Quantity.unit:type_name -> common.enums.unit.v1.Unit
	6,  // 9: discount.discount.v1.DiscountCriteria.quantity:type_name -> discount.discount.v1.Quantity
	8,  // 10: discount.discount.v1.DiscountCriteria.monetary_amount:type_name -> discount.discount.v1.MonetaryAmount
	8,  // 11: discount.discount.v1.PercentageAmount.max_amount:type_name -> discount.discount.v1.MonetaryAmount
	7,  // 12: discount.discount.v1.PercentageAmount.criteria:type_name -> discount.discount.v1.DiscountCriteria
	0,  // 13: discount.discount.v1.CreateDiscountRequest.status:type_name -> discount.discount.v1.DiscountStatus
	1,  // 14: discount.discount.v1.CreateDiscountRequest.type:type_name -> discount.discount.v1.DiscountType
	16, // 15: discount.discount.v1.CreateDiscountRequest.date_from:type_name -> google.protobuf.Timestamp
	16, // 16: discount.discount.v1.CreateDiscountRequest.date_to:type_name -> google.protobuf.Timestamp
	7,  // 17: discount.discount.v1.CreateDiscountRequest.discount_criteria:type_name -> discount.discount.v1.DiscountCriteria
	17, // 18: discount.discount.v1.CreateDiscountRequest.currency:type_name -> common.enums.currency.v1.Currency
	8,  // 19: discount.discount.v1.CreateDiscountRequest.monetary_amount:type_name -> discount.discount.v1.MonetaryAmount
	9,  // 20: discount.discount.v1.CreateDiscountRequest.percentage_amount:type_name -> discount.discount.v1.PercentageAmount
	2,  // 21: discount.discount.v1.CreateDiscountResponse.status:type_name -> discount.discount.v1.CreateDiscountResponse.Status
	19, // 22: discount.discount.v1.CreateDiscountResponse.error:type_name -> common.v1.Error
	3,  // 23: discount.discount.v1.GetDiscountResponse.status:type_name -> discount.discount.v1.GetDiscountResponse.Status
	19, // 24: discount.discount.v1.GetDiscountResponse.error:type_name -> common.v1.Error
	5,  // 25: discount.discount.v1.GetDiscountResponse.discount:type_name -> discount.discount.v1.Discount
	0,  // 26: discount.discount.v1.ApplyDiscountNotificationRequest.status:type_name -> discount.discount.v1.DiscountStatus
	17, // 27: discount.discount.v1.ApplyDiscountNotificationRequest.currency:type_name -> common.enums.currency.v1.Currency
	8,  // 28: discount.discount.v1.ApplyDiscountNotificationRequest.monetary_amount:type_name -> discount.discount.v1.MonetaryAmount
	16, // 29: discount.discount.v1.ApplyDiscountNotificationRequest.transaction_created:type_name -> google.protobuf.Timestamp
	20, // 30: discount.discount.v1.ApplyDiscountNotificationRequest.organization_address:type_name -> common.v1.Address
	20, // 31: discount.discount.v1.ApplyDiscountNotificationRequest.store_address:type_name -> common.v1.Address
	21, // 32: discount.discount.v1.ApplyDiscountNotificationRequest.line_items:type_name -> common.v1.LineItem
	4,  // 33: discount.discount.v1.ApplyDiscountNotificationResponse.status:type_name -> discount.discount.v1.ApplyDiscountNotificationResponse.Status
	19, // 34: discount.discount.v1.ApplyDiscountNotificationResponse.error:type_name -> common.v1.Error
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_discount_discount_v1_discount_proto_init() }
func file_discount_discount_v1_discount_proto_init() {
	if File_discount_discount_v1_discount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_discount_discount_v1_discount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Discount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountCriteria); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MonetaryAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PercentageAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyDiscountNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_discount_discount_v1_discount_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyDiscountNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_discount_discount_v1_discount_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Discount_MonetaryAmount)(nil),
		(*Discount_PercentageAmount)(nil),
	}
	file_discount_discount_v1_discount_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*CreateDiscountRequest_MonetaryAmount)(nil),
		(*CreateDiscountRequest_PercentageAmount)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_discount_discount_v1_discount_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_discount_discount_v1_discount_proto_goTypes,
		DependencyIndexes: file_discount_discount_v1_discount_proto_depIdxs,
		EnumInfos:         file_discount_discount_v1_discount_proto_enumTypes,
		MessageInfos:      file_discount_discount_v1_discount_proto_msgTypes,
	}.Build()
	File_discount_discount_v1_discount_proto = out.File
	file_discount_discount_v1_discount_proto_rawDesc = nil
	file_discount_discount_v1_discount_proto_goTypes = nil
	file_discount_discount_v1_discount_proto_depIdxs = nil
}
