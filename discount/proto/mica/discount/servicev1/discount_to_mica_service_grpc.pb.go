// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.28.3
// source: mica/discount/service/v1/discount_to_mica_service.proto

package servicev1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	discountdefinitionv1 "github.com/1080network/golang/discount/proto/mica/discount/discountdefinitionv1"
	discountprovideraccountv1 "github.com/1080network/golang/discount/proto/mica/discount/discountprovideraccountv1"
	discountproviderv1 "github.com/1080network/golang/discount/proto/mica/discount/discountproviderv1"
	discountv1 "github.com/1080network/golang/discount/proto/mica/discount/discountv1"
	productgroupv1 "github.com/1080network/golang/discount/proto/mica/discount/productgroupv1"
	userv1 "github.com/1080network/golang/discount/proto/mica/discount/userv1"
	pingv1 "github.com/1080network/golang/discount/proto/micashared/common/pingv1"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DiscountToMicaService_GetDiscountProvider_FullMethodName                 = "/mica.discount.service.v1.DiscountToMicaService/GetDiscountProvider"
	DiscountToMicaService_UpdateDiscountProvider_FullMethodName              = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountProvider"
	DiscountToMicaService_CreateDiscountProviderAccount_FullMethodName       = "/mica.discount.service.v1.DiscountToMicaService/CreateDiscountProviderAccount"
	DiscountToMicaService_GetDiscountProviderAccount_FullMethodName          = "/mica.discount.service.v1.DiscountToMicaService/GetDiscountProviderAccount"
	DiscountToMicaService_UpdateDiscountProviderAccount_FullMethodName       = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountProviderAccount"
	DiscountToMicaService_UpdateDiscountProviderAccountStatus_FullMethodName = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountProviderAccountStatus"
	DiscountToMicaService_RemoveDiscountProviderAccount_FullMethodName       = "/mica.discount.service.v1.DiscountToMicaService/RemoveDiscountProviderAccount"
	DiscountToMicaService_SearchDiscountProviderAccount_FullMethodName       = "/mica.discount.service.v1.DiscountToMicaService/SearchDiscountProviderAccount"
	DiscountToMicaService_CreateProductGroup_FullMethodName                  = "/mica.discount.service.v1.DiscountToMicaService/CreateProductGroup"
	DiscountToMicaService_GetProductGroup_FullMethodName                     = "/mica.discount.service.v1.DiscountToMicaService/GetProductGroup"
	DiscountToMicaService_UpdateProductGroup_FullMethodName                  = "/mica.discount.service.v1.DiscountToMicaService/UpdateProductGroup"
	DiscountToMicaService_RemoveProductGroup_FullMethodName                  = "/mica.discount.service.v1.DiscountToMicaService/RemoveProductGroup"
	DiscountToMicaService_SearchProductGroup_FullMethodName                  = "/mica.discount.service.v1.DiscountToMicaService/SearchProductGroup"
	DiscountToMicaService_CreateDiscountDefinition_FullMethodName            = "/mica.discount.service.v1.DiscountToMicaService/CreateDiscountDefinition"
	DiscountToMicaService_GetDiscountDefinition_FullMethodName               = "/mica.discount.service.v1.DiscountToMicaService/GetDiscountDefinition"
	DiscountToMicaService_UpdateDiscountDefinition_FullMethodName            = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountDefinition"
	DiscountToMicaService_UpdateDiscountDefinitionStatus_FullMethodName      = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountDefinitionStatus"
	DiscountToMicaService_RemoveDiscountDefinition_FullMethodName            = "/mica.discount.service.v1.DiscountToMicaService/RemoveDiscountDefinition"
	DiscountToMicaService_SearchDiscountDefinition_FullMethodName            = "/mica.discount.service.v1.DiscountToMicaService/SearchDiscountDefinition"
	DiscountToMicaService_CreateDiscount_FullMethodName                      = "/mica.discount.service.v1.DiscountToMicaService/CreateDiscount"
	DiscountToMicaService_GetDiscount_FullMethodName                         = "/mica.discount.service.v1.DiscountToMicaService/GetDiscount"
	DiscountToMicaService_UpdateDiscount_FullMethodName                      = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscount"
	DiscountToMicaService_UpdateDiscountStatus_FullMethodName                = "/mica.discount.service.v1.DiscountToMicaService/UpdateDiscountStatus"
	DiscountToMicaService_RemoveDiscount_FullMethodName                      = "/mica.discount.service.v1.DiscountToMicaService/RemoveDiscount"
	DiscountToMicaService_SearchDiscount_FullMethodName                      = "/mica.discount.service.v1.DiscountToMicaService/SearchDiscount"
	DiscountToMicaService_GetUserKey_FullMethodName                          = "/mica.discount.service.v1.DiscountToMicaService/GetUserKey"
	DiscountToMicaService_Ping_FullMethodName                                = "/mica.discount.service.v1.DiscountToMicaService/Ping"
	DiscountToMicaService_PingWithRoundTrip_FullMethodName                   = "/mica.discount.service.v1.DiscountToMicaService/PingWithRoundTrip"
)

// DiscountToMicaServiceClient is the client API for DiscountToMicaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DiscountToMicaServiceClient interface {
	GetDiscountProvider(ctx context.Context, in *discountproviderv1.GetDiscountProviderRequest, opts ...grpc.CallOption) (*discountproviderv1.GetDiscountProviderResponse, error)
	UpdateDiscountProvider(ctx context.Context, in *discountproviderv1.UpdateDiscountProviderRequest, opts ...grpc.CallOption) (*discountproviderv1.UpdateDiscountProviderResponse, error)
	CreateDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.CreateDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.CreateDiscountProviderAccountResponse, error)
	GetDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.GetDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.GetDiscountProviderAccountResponse, error)
	UpdateDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.UpdateDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.UpdateDiscountProviderAccountResponse, error)
	UpdateDiscountProviderAccountStatus(ctx context.Context, in *discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.UpdateDiscountProviderAccountStatusResponse, error)
	RemoveDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.RemoveDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.RemoveDiscountProviderAccountResponse, error)
	SearchDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.SearchDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.SearchDiscountProviderAccountResponse, error)
	CreateProductGroup(ctx context.Context, in *productgroupv1.CreateProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.CreateProductGroupResponse, error)
	GetProductGroup(ctx context.Context, in *productgroupv1.GetProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.GetProductGroupResponse, error)
	UpdateProductGroup(ctx context.Context, in *productgroupv1.UpdateProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.UpdateProductGroupResponse, error)
	RemoveProductGroup(ctx context.Context, in *productgroupv1.RemoveProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.RemoveProductGroupResponse, error)
	SearchProductGroup(ctx context.Context, in *productgroupv1.SearchProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.SearchProductGroupResponse, error)
	CreateDiscountDefinition(ctx context.Context, in *discountdefinitionv1.CreateDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.CreateDiscountDefinitionResponse, error)
	GetDiscountDefinition(ctx context.Context, in *discountdefinitionv1.GetDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.GetDiscountDefinitionResponse, error)
	UpdateDiscountDefinition(ctx context.Context, in *discountdefinitionv1.UpdateDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.UpdateDiscountDefinitionResponse, error)
	UpdateDiscountDefinitionStatus(ctx context.Context, in *discountdefinitionv1.UpdateDiscountDefinitionStatusRequest, opts ...grpc.CallOption) (*discountdefinitionv1.UpdateDiscountDefinitionStatusResponse, error)
	RemoveDiscountDefinition(ctx context.Context, in *discountdefinitionv1.RemoveDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.RemoveDiscountDefinitionResponse, error)
	SearchDiscountDefinition(ctx context.Context, in *discountdefinitionv1.SearchDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.SearchDiscountDefinitionResponse, error)
	CreateDiscount(ctx context.Context, in *discountv1.CreateDiscountRequest, opts ...grpc.CallOption) (*discountv1.CreateDiscountResponse, error)
	GetDiscount(ctx context.Context, in *discountv1.GetDiscountRequest, opts ...grpc.CallOption) (*discountv1.GetDiscountResponse, error)
	UpdateDiscount(ctx context.Context, in *discountv1.UpdateDiscountRequest, opts ...grpc.CallOption) (*discountv1.UpdateDiscountResponse, error)
	UpdateDiscountStatus(ctx context.Context, in *discountv1.UpdateDiscountStatusRequest, opts ...grpc.CallOption) (*discountv1.UpdateDiscountStatusResponse, error)
	RemoveDiscount(ctx context.Context, in *discountv1.RemoveDiscountRequest, opts ...grpc.CallOption) (*discountv1.RemoveDiscountResponse, error)
	SearchDiscount(ctx context.Context, in *discountv1.SearchDiscountRequest, opts ...grpc.CallOption) (*discountv1.SearchDiscountResponse, error)
	GetUserKey(ctx context.Context, in *userv1.GetUserKeyRequest, opts ...grpc.CallOption) (*userv1.GetUserKeyResponse, error)
	// An operation to ping the server to ensure it's up and running and that the connection is good.
	Ping(ctx context.Context, in *pingv1.PingRequest, opts ...grpc.CallOption) (*pingv1.PingResponse, error)
	// An operation that triggers a ping to the Mica servervice and that in turn triggers a ping to the discount provider service.
	// This is a useful call to ensure that the connectivity and security between the mica an external services is working.
	PingWithRoundTrip(ctx context.Context, in *pingv1.PingRequest, opts ...grpc.CallOption) (*pingv1.PingResponse, error)
}

type discountToMicaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscountToMicaServiceClient(cc grpc.ClientConnInterface) DiscountToMicaServiceClient {
	return &discountToMicaServiceClient{cc}
}

func (c *discountToMicaServiceClient) GetDiscountProvider(ctx context.Context, in *discountproviderv1.GetDiscountProviderRequest, opts ...grpc.CallOption) (*discountproviderv1.GetDiscountProviderResponse, error) {
	out := new(discountproviderv1.GetDiscountProviderResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetDiscountProvider_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountProvider(ctx context.Context, in *discountproviderv1.UpdateDiscountProviderRequest, opts ...grpc.CallOption) (*discountproviderv1.UpdateDiscountProviderResponse, error) {
	out := new(discountproviderv1.UpdateDiscountProviderResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountProvider_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) CreateDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.CreateDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.CreateDiscountProviderAccountResponse, error) {
	out := new(discountprovideraccountv1.CreateDiscountProviderAccountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_CreateDiscountProviderAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) GetDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.GetDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.GetDiscountProviderAccountResponse, error) {
	out := new(discountprovideraccountv1.GetDiscountProviderAccountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetDiscountProviderAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.UpdateDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.UpdateDiscountProviderAccountResponse, error) {
	out := new(discountprovideraccountv1.UpdateDiscountProviderAccountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountProviderAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountProviderAccountStatus(ctx context.Context, in *discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.UpdateDiscountProviderAccountStatusResponse, error) {
	out := new(discountprovideraccountv1.UpdateDiscountProviderAccountStatusResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountProviderAccountStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) RemoveDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.RemoveDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.RemoveDiscountProviderAccountResponse, error) {
	out := new(discountprovideraccountv1.RemoveDiscountProviderAccountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_RemoveDiscountProviderAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) SearchDiscountProviderAccount(ctx context.Context, in *discountprovideraccountv1.SearchDiscountProviderAccountRequest, opts ...grpc.CallOption) (*discountprovideraccountv1.SearchDiscountProviderAccountResponse, error) {
	out := new(discountprovideraccountv1.SearchDiscountProviderAccountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_SearchDiscountProviderAccount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) CreateProductGroup(ctx context.Context, in *productgroupv1.CreateProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.CreateProductGroupResponse, error) {
	out := new(productgroupv1.CreateProductGroupResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_CreateProductGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) GetProductGroup(ctx context.Context, in *productgroupv1.GetProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.GetProductGroupResponse, error) {
	out := new(productgroupv1.GetProductGroupResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetProductGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateProductGroup(ctx context.Context, in *productgroupv1.UpdateProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.UpdateProductGroupResponse, error) {
	out := new(productgroupv1.UpdateProductGroupResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateProductGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) RemoveProductGroup(ctx context.Context, in *productgroupv1.RemoveProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.RemoveProductGroupResponse, error) {
	out := new(productgroupv1.RemoveProductGroupResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_RemoveProductGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) SearchProductGroup(ctx context.Context, in *productgroupv1.SearchProductGroupRequest, opts ...grpc.CallOption) (*productgroupv1.SearchProductGroupResponse, error) {
	out := new(productgroupv1.SearchProductGroupResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_SearchProductGroup_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) CreateDiscountDefinition(ctx context.Context, in *discountdefinitionv1.CreateDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.CreateDiscountDefinitionResponse, error) {
	out := new(discountdefinitionv1.CreateDiscountDefinitionResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_CreateDiscountDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) GetDiscountDefinition(ctx context.Context, in *discountdefinitionv1.GetDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.GetDiscountDefinitionResponse, error) {
	out := new(discountdefinitionv1.GetDiscountDefinitionResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetDiscountDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountDefinition(ctx context.Context, in *discountdefinitionv1.UpdateDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.UpdateDiscountDefinitionResponse, error) {
	out := new(discountdefinitionv1.UpdateDiscountDefinitionResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountDefinitionStatus(ctx context.Context, in *discountdefinitionv1.UpdateDiscountDefinitionStatusRequest, opts ...grpc.CallOption) (*discountdefinitionv1.UpdateDiscountDefinitionStatusResponse, error) {
	out := new(discountdefinitionv1.UpdateDiscountDefinitionStatusResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountDefinitionStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) RemoveDiscountDefinition(ctx context.Context, in *discountdefinitionv1.RemoveDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.RemoveDiscountDefinitionResponse, error) {
	out := new(discountdefinitionv1.RemoveDiscountDefinitionResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_RemoveDiscountDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) SearchDiscountDefinition(ctx context.Context, in *discountdefinitionv1.SearchDiscountDefinitionRequest, opts ...grpc.CallOption) (*discountdefinitionv1.SearchDiscountDefinitionResponse, error) {
	out := new(discountdefinitionv1.SearchDiscountDefinitionResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_SearchDiscountDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) CreateDiscount(ctx context.Context, in *discountv1.CreateDiscountRequest, opts ...grpc.CallOption) (*discountv1.CreateDiscountResponse, error) {
	out := new(discountv1.CreateDiscountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_CreateDiscount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) GetDiscount(ctx context.Context, in *discountv1.GetDiscountRequest, opts ...grpc.CallOption) (*discountv1.GetDiscountResponse, error) {
	out := new(discountv1.GetDiscountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetDiscount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscount(ctx context.Context, in *discountv1.UpdateDiscountRequest, opts ...grpc.CallOption) (*discountv1.UpdateDiscountResponse, error) {
	out := new(discountv1.UpdateDiscountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) UpdateDiscountStatus(ctx context.Context, in *discountv1.UpdateDiscountStatusRequest, opts ...grpc.CallOption) (*discountv1.UpdateDiscountStatusResponse, error) {
	out := new(discountv1.UpdateDiscountStatusResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_UpdateDiscountStatus_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) RemoveDiscount(ctx context.Context, in *discountv1.RemoveDiscountRequest, opts ...grpc.CallOption) (*discountv1.RemoveDiscountResponse, error) {
	out := new(discountv1.RemoveDiscountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_RemoveDiscount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) SearchDiscount(ctx context.Context, in *discountv1.SearchDiscountRequest, opts ...grpc.CallOption) (*discountv1.SearchDiscountResponse, error) {
	out := new(discountv1.SearchDiscountResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_SearchDiscount_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) GetUserKey(ctx context.Context, in *userv1.GetUserKeyRequest, opts ...grpc.CallOption) (*userv1.GetUserKeyResponse, error) {
	out := new(userv1.GetUserKeyResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_GetUserKey_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) Ping(ctx context.Context, in *pingv1.PingRequest, opts ...grpc.CallOption) (*pingv1.PingResponse, error) {
	out := new(pingv1.PingResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_Ping_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discountToMicaServiceClient) PingWithRoundTrip(ctx context.Context, in *pingv1.PingRequest, opts ...grpc.CallOption) (*pingv1.PingResponse, error) {
	out := new(pingv1.PingResponse)
	err := c.cc.Invoke(ctx, DiscountToMicaService_PingWithRoundTrip_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscountToMicaServiceServer is the server API for DiscountToMicaService service.
// All implementations must embed UnimplementedDiscountToMicaServiceServer
// for forward compatibility
type DiscountToMicaServiceServer interface {
	GetDiscountProvider(context.Context, *discountproviderv1.GetDiscountProviderRequest) (*discountproviderv1.GetDiscountProviderResponse, error)
	UpdateDiscountProvider(context.Context, *discountproviderv1.UpdateDiscountProviderRequest) (*discountproviderv1.UpdateDiscountProviderResponse, error)
	CreateDiscountProviderAccount(context.Context, *discountprovideraccountv1.CreateDiscountProviderAccountRequest) (*discountprovideraccountv1.CreateDiscountProviderAccountResponse, error)
	GetDiscountProviderAccount(context.Context, *discountprovideraccountv1.GetDiscountProviderAccountRequest) (*discountprovideraccountv1.GetDiscountProviderAccountResponse, error)
	UpdateDiscountProviderAccount(context.Context, *discountprovideraccountv1.UpdateDiscountProviderAccountRequest) (*discountprovideraccountv1.UpdateDiscountProviderAccountResponse, error)
	UpdateDiscountProviderAccountStatus(context.Context, *discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest) (*discountprovideraccountv1.UpdateDiscountProviderAccountStatusResponse, error)
	RemoveDiscountProviderAccount(context.Context, *discountprovideraccountv1.RemoveDiscountProviderAccountRequest) (*discountprovideraccountv1.RemoveDiscountProviderAccountResponse, error)
	SearchDiscountProviderAccount(context.Context, *discountprovideraccountv1.SearchDiscountProviderAccountRequest) (*discountprovideraccountv1.SearchDiscountProviderAccountResponse, error)
	CreateProductGroup(context.Context, *productgroupv1.CreateProductGroupRequest) (*productgroupv1.CreateProductGroupResponse, error)
	GetProductGroup(context.Context, *productgroupv1.GetProductGroupRequest) (*productgroupv1.GetProductGroupResponse, error)
	UpdateProductGroup(context.Context, *productgroupv1.UpdateProductGroupRequest) (*productgroupv1.UpdateProductGroupResponse, error)
	RemoveProductGroup(context.Context, *productgroupv1.RemoveProductGroupRequest) (*productgroupv1.RemoveProductGroupResponse, error)
	SearchProductGroup(context.Context, *productgroupv1.SearchProductGroupRequest) (*productgroupv1.SearchProductGroupResponse, error)
	CreateDiscountDefinition(context.Context, *discountdefinitionv1.CreateDiscountDefinitionRequest) (*discountdefinitionv1.CreateDiscountDefinitionResponse, error)
	GetDiscountDefinition(context.Context, *discountdefinitionv1.GetDiscountDefinitionRequest) (*discountdefinitionv1.GetDiscountDefinitionResponse, error)
	UpdateDiscountDefinition(context.Context, *discountdefinitionv1.UpdateDiscountDefinitionRequest) (*discountdefinitionv1.UpdateDiscountDefinitionResponse, error)
	UpdateDiscountDefinitionStatus(context.Context, *discountdefinitionv1.UpdateDiscountDefinitionStatusRequest) (*discountdefinitionv1.UpdateDiscountDefinitionStatusResponse, error)
	RemoveDiscountDefinition(context.Context, *discountdefinitionv1.RemoveDiscountDefinitionRequest) (*discountdefinitionv1.RemoveDiscountDefinitionResponse, error)
	SearchDiscountDefinition(context.Context, *discountdefinitionv1.SearchDiscountDefinitionRequest) (*discountdefinitionv1.SearchDiscountDefinitionResponse, error)
	CreateDiscount(context.Context, *discountv1.CreateDiscountRequest) (*discountv1.CreateDiscountResponse, error)
	GetDiscount(context.Context, *discountv1.GetDiscountRequest) (*discountv1.GetDiscountResponse, error)
	UpdateDiscount(context.Context, *discountv1.UpdateDiscountRequest) (*discountv1.UpdateDiscountResponse, error)
	UpdateDiscountStatus(context.Context, *discountv1.UpdateDiscountStatusRequest) (*discountv1.UpdateDiscountStatusResponse, error)
	RemoveDiscount(context.Context, *discountv1.RemoveDiscountRequest) (*discountv1.RemoveDiscountResponse, error)
	SearchDiscount(context.Context, *discountv1.SearchDiscountRequest) (*discountv1.SearchDiscountResponse, error)
	GetUserKey(context.Context, *userv1.GetUserKeyRequest) (*userv1.GetUserKeyResponse, error)
	// An operation to ping the server to ensure it's up and running and that the connection is good.
	Ping(context.Context, *pingv1.PingRequest) (*pingv1.PingResponse, error)
	// An operation that triggers a ping to the Mica servervice and that in turn triggers a ping to the discount provider service.
	// This is a useful call to ensure that the connectivity and security between the mica an external services is working.
	PingWithRoundTrip(context.Context, *pingv1.PingRequest) (*pingv1.PingResponse, error)
	mustEmbedUnimplementedDiscountToMicaServiceServer()
}

// UnimplementedDiscountToMicaServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDiscountToMicaServiceServer struct {
}

func (UnimplementedDiscountToMicaServiceServer) GetDiscountProvider(context.Context, *discountproviderv1.GetDiscountProviderRequest) (*discountproviderv1.GetDiscountProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountProvider not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountProvider(context.Context, *discountproviderv1.UpdateDiscountProviderRequest) (*discountproviderv1.UpdateDiscountProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountProvider not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) CreateDiscountProviderAccount(context.Context, *discountprovideraccountv1.CreateDiscountProviderAccountRequest) (*discountprovideraccountv1.CreateDiscountProviderAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscountProviderAccount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) GetDiscountProviderAccount(context.Context, *discountprovideraccountv1.GetDiscountProviderAccountRequest) (*discountprovideraccountv1.GetDiscountProviderAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountProviderAccount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountProviderAccount(context.Context, *discountprovideraccountv1.UpdateDiscountProviderAccountRequest) (*discountprovideraccountv1.UpdateDiscountProviderAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountProviderAccount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountProviderAccountStatus(context.Context, *discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest) (*discountprovideraccountv1.UpdateDiscountProviderAccountStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountProviderAccountStatus not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) RemoveDiscountProviderAccount(context.Context, *discountprovideraccountv1.RemoveDiscountProviderAccountRequest) (*discountprovideraccountv1.RemoveDiscountProviderAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDiscountProviderAccount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) SearchDiscountProviderAccount(context.Context, *discountprovideraccountv1.SearchDiscountProviderAccountRequest) (*discountprovideraccountv1.SearchDiscountProviderAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDiscountProviderAccount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) CreateProductGroup(context.Context, *productgroupv1.CreateProductGroupRequest) (*productgroupv1.CreateProductGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProductGroup not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) GetProductGroup(context.Context, *productgroupv1.GetProductGroupRequest) (*productgroupv1.GetProductGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProductGroup not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateProductGroup(context.Context, *productgroupv1.UpdateProductGroupRequest) (*productgroupv1.UpdateProductGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProductGroup not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) RemoveProductGroup(context.Context, *productgroupv1.RemoveProductGroupRequest) (*productgroupv1.RemoveProductGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProductGroup not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) SearchProductGroup(context.Context, *productgroupv1.SearchProductGroupRequest) (*productgroupv1.SearchProductGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchProductGroup not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) CreateDiscountDefinition(context.Context, *discountdefinitionv1.CreateDiscountDefinitionRequest) (*discountdefinitionv1.CreateDiscountDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscountDefinition not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) GetDiscountDefinition(context.Context, *discountdefinitionv1.GetDiscountDefinitionRequest) (*discountdefinitionv1.GetDiscountDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscountDefinition not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountDefinition(context.Context, *discountdefinitionv1.UpdateDiscountDefinitionRequest) (*discountdefinitionv1.UpdateDiscountDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountDefinition not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountDefinitionStatus(context.Context, *discountdefinitionv1.UpdateDiscountDefinitionStatusRequest) (*discountdefinitionv1.UpdateDiscountDefinitionStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountDefinitionStatus not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) RemoveDiscountDefinition(context.Context, *discountdefinitionv1.RemoveDiscountDefinitionRequest) (*discountdefinitionv1.RemoveDiscountDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDiscountDefinition not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) SearchDiscountDefinition(context.Context, *discountdefinitionv1.SearchDiscountDefinitionRequest) (*discountdefinitionv1.SearchDiscountDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDiscountDefinition not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) CreateDiscount(context.Context, *discountv1.CreateDiscountRequest) (*discountv1.CreateDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDiscount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) GetDiscount(context.Context, *discountv1.GetDiscountRequest) (*discountv1.GetDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDiscount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscount(context.Context, *discountv1.UpdateDiscountRequest) (*discountv1.UpdateDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) UpdateDiscountStatus(context.Context, *discountv1.UpdateDiscountStatusRequest) (*discountv1.UpdateDiscountStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDiscountStatus not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) RemoveDiscount(context.Context, *discountv1.RemoveDiscountRequest) (*discountv1.RemoveDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDiscount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) SearchDiscount(context.Context, *discountv1.SearchDiscountRequest) (*discountv1.SearchDiscountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchDiscount not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) GetUserKey(context.Context, *userv1.GetUserKeyRequest) (*userv1.GetUserKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserKey not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) Ping(context.Context, *pingv1.PingRequest) (*pingv1.PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) PingWithRoundTrip(context.Context, *pingv1.PingRequest) (*pingv1.PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingWithRoundTrip not implemented")
}
func (UnimplementedDiscountToMicaServiceServer) mustEmbedUnimplementedDiscountToMicaServiceServer() {}

// UnsafeDiscountToMicaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DiscountToMicaServiceServer will
// result in compilation errors.
type UnsafeDiscountToMicaServiceServer interface {
	mustEmbedUnimplementedDiscountToMicaServiceServer()
}

func RegisterDiscountToMicaServiceServer(s grpc.ServiceRegistrar, srv DiscountToMicaServiceServer) {
	s.RegisterService(&DiscountToMicaService_ServiceDesc, srv)
}

func _DiscountToMicaService_GetDiscountProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountproviderv1.GetDiscountProviderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetDiscountProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetDiscountProvider_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetDiscountProvider(ctx, req.(*discountproviderv1.GetDiscountProviderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountproviderv1.UpdateDiscountProviderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountProvider_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProvider(ctx, req.(*discountproviderv1.UpdateDiscountProviderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_CreateDiscountProviderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.CreateDiscountProviderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).CreateDiscountProviderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_CreateDiscountProviderAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).CreateDiscountProviderAccount(ctx, req.(*discountprovideraccountv1.CreateDiscountProviderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_GetDiscountProviderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.GetDiscountProviderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetDiscountProviderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetDiscountProviderAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetDiscountProviderAccount(ctx, req.(*discountprovideraccountv1.GetDiscountProviderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountProviderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.UpdateDiscountProviderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProviderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountProviderAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProviderAccount(ctx, req.(*discountprovideraccountv1.UpdateDiscountProviderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountProviderAccountStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProviderAccountStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountProviderAccountStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountProviderAccountStatus(ctx, req.(*discountprovideraccountv1.UpdateDiscountProviderAccountStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_RemoveDiscountProviderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.RemoveDiscountProviderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).RemoveDiscountProviderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_RemoveDiscountProviderAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).RemoveDiscountProviderAccount(ctx, req.(*discountprovideraccountv1.RemoveDiscountProviderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_SearchDiscountProviderAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountprovideraccountv1.SearchDiscountProviderAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).SearchDiscountProviderAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_SearchDiscountProviderAccount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).SearchDiscountProviderAccount(ctx, req.(*discountprovideraccountv1.SearchDiscountProviderAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_CreateProductGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(productgroupv1.CreateProductGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).CreateProductGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_CreateProductGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).CreateProductGroup(ctx, req.(*productgroupv1.CreateProductGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_GetProductGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(productgroupv1.GetProductGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetProductGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetProductGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetProductGroup(ctx, req.(*productgroupv1.GetProductGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateProductGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(productgroupv1.UpdateProductGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateProductGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateProductGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateProductGroup(ctx, req.(*productgroupv1.UpdateProductGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_RemoveProductGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(productgroupv1.RemoveProductGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).RemoveProductGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_RemoveProductGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).RemoveProductGroup(ctx, req.(*productgroupv1.RemoveProductGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_SearchProductGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(productgroupv1.SearchProductGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).SearchProductGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_SearchProductGroup_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).SearchProductGroup(ctx, req.(*productgroupv1.SearchProductGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_CreateDiscountDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.CreateDiscountDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).CreateDiscountDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_CreateDiscountDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).CreateDiscountDefinition(ctx, req.(*discountdefinitionv1.CreateDiscountDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_GetDiscountDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.GetDiscountDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetDiscountDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetDiscountDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetDiscountDefinition(ctx, req.(*discountdefinitionv1.GetDiscountDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.UpdateDiscountDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountDefinition(ctx, req.(*discountdefinitionv1.UpdateDiscountDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountDefinitionStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.UpdateDiscountDefinitionStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountDefinitionStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountDefinitionStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountDefinitionStatus(ctx, req.(*discountdefinitionv1.UpdateDiscountDefinitionStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_RemoveDiscountDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.RemoveDiscountDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).RemoveDiscountDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_RemoveDiscountDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).RemoveDiscountDefinition(ctx, req.(*discountdefinitionv1.RemoveDiscountDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_SearchDiscountDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountdefinitionv1.SearchDiscountDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).SearchDiscountDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_SearchDiscountDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).SearchDiscountDefinition(ctx, req.(*discountdefinitionv1.SearchDiscountDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_CreateDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.CreateDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).CreateDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_CreateDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).CreateDiscount(ctx, req.(*discountv1.CreateDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_GetDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.GetDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetDiscount(ctx, req.(*discountv1.GetDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.UpdateDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscount(ctx, req.(*discountv1.UpdateDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_UpdateDiscountStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.UpdateDiscountStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_UpdateDiscountStatus_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).UpdateDiscountStatus(ctx, req.(*discountv1.UpdateDiscountStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_RemoveDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.RemoveDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).RemoveDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_RemoveDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).RemoveDiscount(ctx, req.(*discountv1.RemoveDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_SearchDiscount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(discountv1.SearchDiscountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).SearchDiscount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_SearchDiscount_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).SearchDiscount(ctx, req.(*discountv1.SearchDiscountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_GetUserKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(userv1.GetUserKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).GetUserKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_GetUserKey_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).GetUserKey(ctx, req.(*userv1.GetUserKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pingv1.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_Ping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).Ping(ctx, req.(*pingv1.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscountToMicaService_PingWithRoundTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pingv1.PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscountToMicaServiceServer).PingWithRoundTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscountToMicaService_PingWithRoundTrip_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscountToMicaServiceServer).PingWithRoundTrip(ctx, req.(*pingv1.PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DiscountToMicaService_ServiceDesc is the grpc.ServiceDesc for DiscountToMicaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DiscountToMicaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mica.discount.service.v1.DiscountToMicaService",
	HandlerType: (*DiscountToMicaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDiscountProvider",
			Handler:    _DiscountToMicaService_GetDiscountProvider_Handler,
		},
		{
			MethodName: "UpdateDiscountProvider",
			Handler:    _DiscountToMicaService_UpdateDiscountProvider_Handler,
		},
		{
			MethodName: "CreateDiscountProviderAccount",
			Handler:    _DiscountToMicaService_CreateDiscountProviderAccount_Handler,
		},
		{
			MethodName: "GetDiscountProviderAccount",
			Handler:    _DiscountToMicaService_GetDiscountProviderAccount_Handler,
		},
		{
			MethodName: "UpdateDiscountProviderAccount",
			Handler:    _DiscountToMicaService_UpdateDiscountProviderAccount_Handler,
		},
		{
			MethodName: "UpdateDiscountProviderAccountStatus",
			Handler:    _DiscountToMicaService_UpdateDiscountProviderAccountStatus_Handler,
		},
		{
			MethodName: "RemoveDiscountProviderAccount",
			Handler:    _DiscountToMicaService_RemoveDiscountProviderAccount_Handler,
		},
		{
			MethodName: "SearchDiscountProviderAccount",
			Handler:    _DiscountToMicaService_SearchDiscountProviderAccount_Handler,
		},
		{
			MethodName: "CreateProductGroup",
			Handler:    _DiscountToMicaService_CreateProductGroup_Handler,
		},
		{
			MethodName: "GetProductGroup",
			Handler:    _DiscountToMicaService_GetProductGroup_Handler,
		},
		{
			MethodName: "UpdateProductGroup",
			Handler:    _DiscountToMicaService_UpdateProductGroup_Handler,
		},
		{
			MethodName: "RemoveProductGroup",
			Handler:    _DiscountToMicaService_RemoveProductGroup_Handler,
		},
		{
			MethodName: "SearchProductGroup",
			Handler:    _DiscountToMicaService_SearchProductGroup_Handler,
		},
		{
			MethodName: "CreateDiscountDefinition",
			Handler:    _DiscountToMicaService_CreateDiscountDefinition_Handler,
		},
		{
			MethodName: "GetDiscountDefinition",
			Handler:    _DiscountToMicaService_GetDiscountDefinition_Handler,
		},
		{
			MethodName: "UpdateDiscountDefinition",
			Handler:    _DiscountToMicaService_UpdateDiscountDefinition_Handler,
		},
		{
			MethodName: "UpdateDiscountDefinitionStatus",
			Handler:    _DiscountToMicaService_UpdateDiscountDefinitionStatus_Handler,
		},
		{
			MethodName: "RemoveDiscountDefinition",
			Handler:    _DiscountToMicaService_RemoveDiscountDefinition_Handler,
		},
		{
			MethodName: "SearchDiscountDefinition",
			Handler:    _DiscountToMicaService_SearchDiscountDefinition_Handler,
		},
		{
			MethodName: "CreateDiscount",
			Handler:    _DiscountToMicaService_CreateDiscount_Handler,
		},
		{
			MethodName: "GetDiscount",
			Handler:    _DiscountToMicaService_GetDiscount_Handler,
		},
		{
			MethodName: "UpdateDiscount",
			Handler:    _DiscountToMicaService_UpdateDiscount_Handler,
		},
		{
			MethodName: "UpdateDiscountStatus",
			Handler:    _DiscountToMicaService_UpdateDiscountStatus_Handler,
		},
		{
			MethodName: "RemoveDiscount",
			Handler:    _DiscountToMicaService_RemoveDiscount_Handler,
		},
		{
			MethodName: "SearchDiscount",
			Handler:    _DiscountToMicaService_SearchDiscount_Handler,
		},
		{
			MethodName: "GetUserKey",
			Handler:    _DiscountToMicaService_GetUserKey_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _DiscountToMicaService_Ping_Handler,
		},
		{
			MethodName: "PingWithRoundTrip",
			Handler:    _DiscountToMicaService_PingWithRoundTrip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/1080network/golang/discount/proto/mica/discount/service/v1/discount_to_mica_service.proto",
}
