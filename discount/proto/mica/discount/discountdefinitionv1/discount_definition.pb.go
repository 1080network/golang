// Copyright (c) 2022 Mica, Inc. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: mica/discount/discountdefinition/v1/discount_definition.proto

package discountdefinitionv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	discountv1 "github.com/1080network/golang/discount/proto/mica/discount/discountv1"
	currencyv1 "github.com/1080network/golang/discount/proto/micashared/common/enums/currencyv1"
	discounttypev1 "github.com/1080network/golang/discount/proto/micashared/common/enums/discounttypev1"
	v1 "github.com/1080network/golang/discount/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiscountDefinitionStatus int32

const (
	DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED DiscountDefinitionStatus = 0
	DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_AVAILABLE   DiscountDefinitionStatus = 1
	DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_SUSPENDED   DiscountDefinitionStatus = 2
	DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_CLOSED      DiscountDefinitionStatus = 3
)

// Enum value maps for DiscountDefinitionStatus.
var (
	DiscountDefinitionStatus_name = map[int32]string{
		0: "DISCOUNT_DEFINITION_STATUS_UNSPECIFIED",
		1: "DISCOUNT_DEFINITION_STATUS_AVAILABLE",
		2: "DISCOUNT_DEFINITION_STATUS_SUSPENDED",
		3: "DISCOUNT_DEFINITION_STATUS_CLOSED",
	}
	DiscountDefinitionStatus_value = map[string]int32{
		"DISCOUNT_DEFINITION_STATUS_UNSPECIFIED": 0,
		"DISCOUNT_DEFINITION_STATUS_AVAILABLE":   1,
		"DISCOUNT_DEFINITION_STATUS_SUSPENDED":   2,
		"DISCOUNT_DEFINITION_STATUS_CLOSED":      3,
	}
)

func (x DiscountDefinitionStatus) Enum() *DiscountDefinitionStatus {
	p := new(DiscountDefinitionStatus)
	*p = x
	return p
}

func (x DiscountDefinitionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountDefinitionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[0].Descriptor()
}

func (DiscountDefinitionStatus) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[0]
}

func (x DiscountDefinitionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountDefinitionStatus.Descriptor instead.
func (DiscountDefinitionStatus) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{0}
}

type CreateDiscountDefinitionResponse_Status int32

const (
	CreateDiscountDefinitionResponse_STATUS_UNSPECIFIED CreateDiscountDefinitionResponse_Status = 0
	CreateDiscountDefinitionResponse_STATUS_SUCCESS     CreateDiscountDefinitionResponse_Status = 1
	CreateDiscountDefinitionResponse_STATUS_ERROR       CreateDiscountDefinitionResponse_Status = 2
)

// Enum value maps for CreateDiscountDefinitionResponse_Status.
var (
	CreateDiscountDefinitionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	CreateDiscountDefinitionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x CreateDiscountDefinitionResponse_Status) Enum() *CreateDiscountDefinitionResponse_Status {
	p := new(CreateDiscountDefinitionResponse_Status)
	*p = x
	return p
}

func (x CreateDiscountDefinitionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateDiscountDefinitionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[1].Descriptor()
}

func (CreateDiscountDefinitionResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[1]
}

func (x CreateDiscountDefinitionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateDiscountDefinitionResponse_Status.Descriptor instead.
func (CreateDiscountDefinitionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{2, 0}
}

type GetDiscountDefinitionResponse_Status int32

const (
	GetDiscountDefinitionResponse_STATUS_UNSPECIFIED GetDiscountDefinitionResponse_Status = 0
	GetDiscountDefinitionResponse_STATUS_SUCCESS     GetDiscountDefinitionResponse_Status = 1
	GetDiscountDefinitionResponse_STATUS_ERROR       GetDiscountDefinitionResponse_Status = 2
	GetDiscountDefinitionResponse_STATUS_NOT_FOUND   GetDiscountDefinitionResponse_Status = 3
)

// Enum value maps for GetDiscountDefinitionResponse_Status.
var (
	GetDiscountDefinitionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	GetDiscountDefinitionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x GetDiscountDefinitionResponse_Status) Enum() *GetDiscountDefinitionResponse_Status {
	p := new(GetDiscountDefinitionResponse_Status)
	*p = x
	return p
}

func (x GetDiscountDefinitionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetDiscountDefinitionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[2].Descriptor()
}

func (GetDiscountDefinitionResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[2]
}

func (x GetDiscountDefinitionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetDiscountDefinitionResponse_Status.Descriptor instead.
func (GetDiscountDefinitionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{4, 0}
}

type UpdateDiscountDefinitionResponse_Status int32

const (
	UpdateDiscountDefinitionResponse_STATUS_UNSPECIFIED UpdateDiscountDefinitionResponse_Status = 0
	UpdateDiscountDefinitionResponse_STATUS_SUCCESS     UpdateDiscountDefinitionResponse_Status = 1
	UpdateDiscountDefinitionResponse_STATUS_ERROR       UpdateDiscountDefinitionResponse_Status = 2
	UpdateDiscountDefinitionResponse_STATUS_NOT_FOUND   UpdateDiscountDefinitionResponse_Status = 3
)

// Enum value maps for UpdateDiscountDefinitionResponse_Status.
var (
	UpdateDiscountDefinitionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	UpdateDiscountDefinitionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x UpdateDiscountDefinitionResponse_Status) Enum() *UpdateDiscountDefinitionResponse_Status {
	p := new(UpdateDiscountDefinitionResponse_Status)
	*p = x
	return p
}

func (x UpdateDiscountDefinitionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateDiscountDefinitionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[3].Descriptor()
}

func (UpdateDiscountDefinitionResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[3]
}

func (x UpdateDiscountDefinitionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateDiscountDefinitionResponse_Status.Descriptor instead.
func (UpdateDiscountDefinitionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{6, 0}
}

type UpdateDiscountDefinitionStatusResponse_Status int32

const (
	UpdateDiscountDefinitionStatusResponse_STATUS_UNSPECIFIED              UpdateDiscountDefinitionStatusResponse_Status = 0
	UpdateDiscountDefinitionStatusResponse_STATUS_SUCCESS                  UpdateDiscountDefinitionStatusResponse_Status = 1
	UpdateDiscountDefinitionStatusResponse_STATUS_ERROR                    UpdateDiscountDefinitionStatusResponse_Status = 2
	UpdateDiscountDefinitionStatusResponse_STATUS_NOT_FOUND                UpdateDiscountDefinitionStatusResponse_Status = 3
	UpdateDiscountDefinitionStatusResponse_STATUS_INVALID_STATE_TRANSITION UpdateDiscountDefinitionStatusResponse_Status = 4
)

// Enum value maps for UpdateDiscountDefinitionStatusResponse_Status.
var (
	UpdateDiscountDefinitionStatusResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
		4: "STATUS_INVALID_STATE_TRANSITION",
	}
	UpdateDiscountDefinitionStatusResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":              0,
		"STATUS_SUCCESS":                  1,
		"STATUS_ERROR":                    2,
		"STATUS_NOT_FOUND":                3,
		"STATUS_INVALID_STATE_TRANSITION": 4,
	}
)

func (x UpdateDiscountDefinitionStatusResponse_Status) Enum() *UpdateDiscountDefinitionStatusResponse_Status {
	p := new(UpdateDiscountDefinitionStatusResponse_Status)
	*p = x
	return p
}

func (x UpdateDiscountDefinitionStatusResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateDiscountDefinitionStatusResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[4].Descriptor()
}

func (UpdateDiscountDefinitionStatusResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[4]
}

func (x UpdateDiscountDefinitionStatusResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateDiscountDefinitionStatusResponse_Status.Descriptor instead.
func (UpdateDiscountDefinitionStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{8, 0}
}

type RemoveDiscountDefinitionResponse_Status int32

const (
	RemoveDiscountDefinitionResponse_STATUS_UNSPECIFIED RemoveDiscountDefinitionResponse_Status = 0
	RemoveDiscountDefinitionResponse_STATUS_SUCCESS     RemoveDiscountDefinitionResponse_Status = 1
	RemoveDiscountDefinitionResponse_STATUS_ERROR       RemoveDiscountDefinitionResponse_Status = 2
	RemoveDiscountDefinitionResponse_STATUS_NOT_FOUND   RemoveDiscountDefinitionResponse_Status = 3
)

// Enum value maps for RemoveDiscountDefinitionResponse_Status.
var (
	RemoveDiscountDefinitionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	RemoveDiscountDefinitionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x RemoveDiscountDefinitionResponse_Status) Enum() *RemoveDiscountDefinitionResponse_Status {
	p := new(RemoveDiscountDefinitionResponse_Status)
	*p = x
	return p
}

func (x RemoveDiscountDefinitionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveDiscountDefinitionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[5].Descriptor()
}

func (RemoveDiscountDefinitionResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[5]
}

func (x RemoveDiscountDefinitionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveDiscountDefinitionResponse_Status.Descriptor instead.
func (RemoveDiscountDefinitionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{10, 0}
}

type SearchDiscountDefinitionResponse_Status int32

const (
	SearchDiscountDefinitionResponse_STATUS_UNSPECIFIED SearchDiscountDefinitionResponse_Status = 0
	SearchDiscountDefinitionResponse_STATUS_SUCCESS     SearchDiscountDefinitionResponse_Status = 1
	SearchDiscountDefinitionResponse_STATUS_ERROR       SearchDiscountDefinitionResponse_Status = 2
	SearchDiscountDefinitionResponse_STATUS_NOT_FOUND   SearchDiscountDefinitionResponse_Status = 3
)

// Enum value maps for SearchDiscountDefinitionResponse_Status.
var (
	SearchDiscountDefinitionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	SearchDiscountDefinitionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x SearchDiscountDefinitionResponse_Status) Enum() *SearchDiscountDefinitionResponse_Status {
	p := new(SearchDiscountDefinitionResponse_Status)
	*p = x
	return p
}

func (x SearchDiscountDefinitionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchDiscountDefinitionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[6].Descriptor()
}

func (SearchDiscountDefinitionResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes[6]
}

func (x SearchDiscountDefinitionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchDiscountDefinitionResponse_Status.Descriptor instead.
func (SearchDiscountDefinitionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{12, 0}
}

type DiscountDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountDefinitionKey      string                 `protobuf:"bytes,1,opt,name=discount_definition_key,json=discountDefinitionKey,proto3" json:"discount_definition_key,omitempty"`
	Version                    int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Created                    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated                    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	DiscountDefinitionRef      string                 `protobuf:"bytes,5,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3" json:"discount_definition_ref,omitempty"`
	DiscountProviderAccountRef string                 `protobuf:"bytes,6,opt,name=discount_provider_account_ref,json=discountProviderAccountRef,proto3" json:"discount_provider_account_ref,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Headline string `protobuf:"bytes,16,opt,name=headline,proto3" json:"headline,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Summary            string                      `protobuf:"bytes,17,opt,name=summary,proto3" json:"summary,omitempty"`
	ReceiptDescription string                      `protobuf:"bytes,7,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	Status             DiscountDefinitionStatus    `protobuf:"varint,8,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.DiscountDefinitionStatus" json:"status,omitempty"`
	Type               discounttypev1.DiscountType `protobuf:"varint,9,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	ValidFrom          *timestamppb.Timestamp      `protobuf:"bytes,10,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo            *timestamppb.Timestamp      `protobuf:"bytes,11,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// the basket must include items that match each of the criteria (i.e. it's an and operation) in order for this
	// discount to apply
	DiscountCriteria []*discountv1.DiscountCriteria `protobuf:"bytes,12,rep,name=discount_criteria,json=discountCriteria,proto3" json:"discount_criteria,omitempty"`
	Currency         currencyv1.Currency            `protobuf:"varint,13,opt,name=currency,proto3,enum=micashared.common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Types that are assignable to DiscountAmount:
	//
	//	*DiscountDefinition_MonetaryAmount
	//	*DiscountDefinition_PercentageAmount
	DiscountAmount isDiscountDefinition_DiscountAmount `protobuf_oneof:"discount_amount"`
	// address to the image for this discount definition (note that this image is expected to be square)
	ThumbnailUrl string `protobuf:"bytes,18,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
}

func (x *DiscountDefinition) Reset() {
	*x = DiscountDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscountDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscountDefinition) ProtoMessage() {}

func (x *DiscountDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscountDefinition.ProtoReflect.Descriptor instead.
func (*DiscountDefinition) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{0}
}

func (x *DiscountDefinition) GetDiscountDefinitionKey() string {
	if x != nil {
		return x.DiscountDefinitionKey
	}
	return ""
}

func (x *DiscountDefinition) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *DiscountDefinition) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *DiscountDefinition) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *DiscountDefinition) GetDiscountDefinitionRef() string {
	if x != nil {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *DiscountDefinition) GetDiscountProviderAccountRef() string {
	if x != nil {
		return x.DiscountProviderAccountRef
	}
	return ""
}

func (x *DiscountDefinition) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

func (x *DiscountDefinition) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *DiscountDefinition) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *DiscountDefinition) GetStatus() DiscountDefinitionStatus {
	if x != nil {
		return x.Status
	}
	return DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED
}

func (x *DiscountDefinition) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *DiscountDefinition) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *DiscountDefinition) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *DiscountDefinition) GetDiscountCriteria() []*discountv1.DiscountCriteria {
	if x != nil {
		return x.DiscountCriteria
	}
	return nil
}

func (x *DiscountDefinition) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (m *DiscountDefinition) GetDiscountAmount() isDiscountDefinition_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *DiscountDefinition) GetMonetaryAmount() *discountv1.MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*DiscountDefinition_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *DiscountDefinition) GetPercentageAmount() *discountv1.PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*DiscountDefinition_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

func (x *DiscountDefinition) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

type isDiscountDefinition_DiscountAmount interface {
	isDiscountDefinition_DiscountAmount()
}

type DiscountDefinition_MonetaryAmount struct {
	MonetaryAmount *discountv1.MonetaryAmount `protobuf:"bytes,14,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type DiscountDefinition_PercentageAmount struct {
	PercentageAmount *discountv1.PercentageAmount `protobuf:"bytes,15,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*DiscountDefinition_MonetaryAmount) isDiscountDefinition_DiscountAmount() {}

func (*DiscountDefinition_PercentageAmount) isDiscountDefinition_DiscountAmount() {}

type CreateDiscountDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountDefinitionRef      string `protobuf:"bytes,1,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3" json:"discount_definition_ref,omitempty"`
	DiscountProviderAccountRef string `protobuf:"bytes,2,opt,name=discount_provider_account_ref,json=discountProviderAccountRef,proto3" json:"discount_provider_account_ref,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Headline string `protobuf:"bytes,12,opt,name=headline,proto3" json:"headline,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Summary            string `protobuf:"bytes,13,opt,name=summary,proto3" json:"summary,omitempty"`
	ReceiptDescription string `protobuf:"bytes,3,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	// the initial status of the discount definition has to be set and it cannot be unspecified
	Status    DiscountDefinitionStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.DiscountDefinitionStatus" json:"status,omitempty"`
	Type      discounttypev1.DiscountType `protobuf:"varint,5,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	ValidFrom *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo   *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// the basket must include items that match each of the criteria (i.e. it's an and operation) in order for this
	// discount to apply
	DiscountCriteria []*discountv1.DiscountCriteria `protobuf:"bytes,8,rep,name=discount_criteria,json=discountCriteria,proto3" json:"discount_criteria,omitempty"`
	Currency         currencyv1.Currency            `protobuf:"varint,9,opt,name=currency,proto3,enum=micashared.common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Types that are assignable to DiscountAmount:
	//
	//	*CreateDiscountDefinitionRequest_MonetaryAmount
	//	*CreateDiscountDefinitionRequest_PercentageAmount
	DiscountAmount isCreateDiscountDefinitionRequest_DiscountAmount `protobuf_oneof:"discount_amount"`
	// address to the image for this discount definition (note that this image is expected to be square)
	ThumbnailUrl string `protobuf:"bytes,14,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
}

func (x *CreateDiscountDefinitionRequest) Reset() {
	*x = CreateDiscountDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscountDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscountDefinitionRequest) ProtoMessage() {}

func (x *CreateDiscountDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscountDefinitionRequest.ProtoReflect.Descriptor instead.
func (*CreateDiscountDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{1}
}

func (x *CreateDiscountDefinitionRequest) GetDiscountDefinitionRef() string {
	if x != nil {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *CreateDiscountDefinitionRequest) GetDiscountProviderAccountRef() string {
	if x != nil {
		return x.DiscountProviderAccountRef
	}
	return ""
}

func (x *CreateDiscountDefinitionRequest) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

func (x *CreateDiscountDefinitionRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *CreateDiscountDefinitionRequest) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *CreateDiscountDefinitionRequest) GetStatus() DiscountDefinitionStatus {
	if x != nil {
		return x.Status
	}
	return DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED
}

func (x *CreateDiscountDefinitionRequest) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *CreateDiscountDefinitionRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetDiscountCriteria() []*discountv1.DiscountCriteria {
	if x != nil {
		return x.DiscountCriteria
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (m *CreateDiscountDefinitionRequest) GetDiscountAmount() isCreateDiscountDefinitionRequest_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetMonetaryAmount() *discountv1.MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*CreateDiscountDefinitionRequest_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetPercentageAmount() *discountv1.PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*CreateDiscountDefinitionRequest_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

func (x *CreateDiscountDefinitionRequest) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

type isCreateDiscountDefinitionRequest_DiscountAmount interface {
	isCreateDiscountDefinitionRequest_DiscountAmount()
}

type CreateDiscountDefinitionRequest_MonetaryAmount struct {
	MonetaryAmount *discountv1.MonetaryAmount `protobuf:"bytes,10,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type CreateDiscountDefinitionRequest_PercentageAmount struct {
	PercentageAmount *discountv1.PercentageAmount `protobuf:"bytes,11,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*CreateDiscountDefinitionRequest_MonetaryAmount) isCreateDiscountDefinitionRequest_DiscountAmount() {
}

func (*CreateDiscountDefinitionRequest_PercentageAmount) isCreateDiscountDefinitionRequest_DiscountAmount() {
}

type CreateDiscountDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                CreateDiscountDefinitionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse_Status" json:"status,omitempty"`
	Error                 *v1.Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DiscountDefinitionKey string                                  `protobuf:"bytes,3,opt,name=discount_definition_key,json=discountDefinitionKey,proto3" json:"discount_definition_key,omitempty"`
	Version               int64                                   `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateDiscountDefinitionResponse) Reset() {
	*x = CreateDiscountDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDiscountDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDiscountDefinitionResponse) ProtoMessage() {}

func (x *CreateDiscountDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDiscountDefinitionResponse.ProtoReflect.Descriptor instead.
func (*CreateDiscountDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDiscountDefinitionResponse) GetStatus() CreateDiscountDefinitionResponse_Status {
	if x != nil {
		return x.Status
	}
	return CreateDiscountDefinitionResponse_STATUS_UNSPECIFIED
}

func (x *CreateDiscountDefinitionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateDiscountDefinitionResponse) GetDiscountDefinitionKey() string {
	if x != nil {
		return x.DiscountDefinitionKey
	}
	return ""
}

func (x *CreateDiscountDefinitionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetDiscountDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DiscountDefinitionIdentifier:
	//
	//	*GetDiscountDefinitionRequest_DiscountDefinitionRef
	//	*GetDiscountDefinitionRequest_DiscountDefinitionKey
	DiscountDefinitionIdentifier isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier `protobuf_oneof:"discount_definition_identifier"`
}

func (x *GetDiscountDefinitionRequest) Reset() {
	*x = GetDiscountDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountDefinitionRequest) ProtoMessage() {}

func (x *GetDiscountDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetDiscountDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{3}
}

func (m *GetDiscountDefinitionRequest) GetDiscountDefinitionIdentifier() isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier {
	if m != nil {
		return m.DiscountDefinitionIdentifier
	}
	return nil
}

func (x *GetDiscountDefinitionRequest) GetDiscountDefinitionRef() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*GetDiscountDefinitionRequest_DiscountDefinitionRef); ok {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *GetDiscountDefinitionRequest) GetDiscountDefinitionKey() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*GetDiscountDefinitionRequest_DiscountDefinitionKey); ok {
		return x.DiscountDefinitionKey
	}
	return ""
}

type isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier interface {
	isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier()
}

type GetDiscountDefinitionRequest_DiscountDefinitionRef struct {
	DiscountDefinitionRef string `protobuf:"bytes,1,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3,oneof"`
}

type GetDiscountDefinitionRequest_DiscountDefinitionKey struct {
	DiscountDefinitionKey string `protobuf:"bytes,2,opt,name=discount_definition_key,json=discountDefinitionKey,proto3,oneof"`
}

func (*GetDiscountDefinitionRequest_DiscountDefinitionRef) isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

func (*GetDiscountDefinitionRequest_DiscountDefinitionKey) isGetDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

type GetDiscountDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             GetDiscountDefinitionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse_Status" json:"status,omitempty"`
	Error              *v1.Error                            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DiscountDefinition *DiscountDefinition                  `protobuf:"bytes,3,opt,name=discount_definition,json=discountDefinition,proto3" json:"discount_definition,omitempty"`
}

func (x *GetDiscountDefinitionResponse) Reset() {
	*x = GetDiscountDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountDefinitionResponse) ProtoMessage() {}

func (x *GetDiscountDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetDiscountDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{4}
}

func (x *GetDiscountDefinitionResponse) GetStatus() GetDiscountDefinitionResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetDiscountDefinitionResponse_STATUS_UNSPECIFIED
}

func (x *GetDiscountDefinitionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetDiscountDefinitionResponse) GetDiscountDefinition() *DiscountDefinition {
	if x != nil {
		return x.DiscountDefinition
	}
	return nil
}

type UpdateDiscountDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DiscountDefinitionIdentifier:
	//
	//	*UpdateDiscountDefinitionRequest_DiscountDefinitionRef
	//	*UpdateDiscountDefinitionRequest_DiscountDefinitionKey
	DiscountDefinitionIdentifier isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier `protobuf_oneof:"discount_definition_identifier"`
	Version                      int64                                                          `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	DiscountProviderAccountRef   string                                                         `protobuf:"bytes,3,opt,name=discount_provider_account_ref,json=discountProviderAccountRef,proto3" json:"discount_provider_account_ref,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Headline string `protobuf:"bytes,14,opt,name=headline,proto3" json:"headline,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Summary string `protobuf:"bytes,15,opt,name=summary,proto3" json:"summary,omitempty"`
	// address to the image for this discount definition (note that this image is expected to be square)
	ThumbnailUrl       string `protobuf:"bytes,16,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	ReceiptDescription string `protobuf:"bytes,4,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	// the update status of the discount definition has to be set and it cannot be unspecified
	Status    DiscountDefinitionStatus    `protobuf:"varint,5,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.DiscountDefinitionStatus" json:"status,omitempty"`
	Type      discounttypev1.DiscountType `protobuf:"varint,6,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	ValidFrom *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo   *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// the basket must include items that match each of the criteria (i.e. it's an and operation) in order for this
	// discount to apply
	DiscountCriteria []*discountv1.DiscountCriteria `protobuf:"bytes,9,rep,name=discount_criteria,json=discountCriteria,proto3" json:"discount_criteria,omitempty"`
	Currency         currencyv1.Currency            `protobuf:"varint,10,opt,name=currency,proto3,enum=micashared.common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Types that are assignable to DiscountAmount:
	//
	//	*UpdateDiscountDefinitionRequest_MonetaryAmount
	//	*UpdateDiscountDefinitionRequest_PercentageAmount
	DiscountAmount isUpdateDiscountDefinitionRequest_DiscountAmount `protobuf_oneof:"discount_amount"`
}

func (x *UpdateDiscountDefinitionRequest) Reset() {
	*x = UpdateDiscountDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscountDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscountDefinitionRequest) ProtoMessage() {}

func (x *UpdateDiscountDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscountDefinitionRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiscountDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{5}
}

func (m *UpdateDiscountDefinitionRequest) GetDiscountDefinitionIdentifier() isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier {
	if m != nil {
		return m.DiscountDefinitionIdentifier
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetDiscountDefinitionRef() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*UpdateDiscountDefinitionRequest_DiscountDefinitionRef); ok {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetDiscountDefinitionKey() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*UpdateDiscountDefinitionRequest_DiscountDefinitionKey); ok {
		return x.DiscountDefinitionKey
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateDiscountDefinitionRequest) GetDiscountProviderAccountRef() string {
	if x != nil {
		return x.DiscountProviderAccountRef
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *UpdateDiscountDefinitionRequest) GetStatus() DiscountDefinitionStatus {
	if x != nil {
		return x.Status
	}
	return DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED
}

func (x *UpdateDiscountDefinitionRequest) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *UpdateDiscountDefinitionRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetDiscountCriteria() []*discountv1.DiscountCriteria {
	if x != nil {
		return x.DiscountCriteria
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (m *UpdateDiscountDefinitionRequest) GetDiscountAmount() isUpdateDiscountDefinitionRequest_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetMonetaryAmount() *discountv1.MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*UpdateDiscountDefinitionRequest_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *UpdateDiscountDefinitionRequest) GetPercentageAmount() *discountv1.PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*UpdateDiscountDefinitionRequest_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

type isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier interface {
	isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier()
}

type UpdateDiscountDefinitionRequest_DiscountDefinitionRef struct {
	DiscountDefinitionRef string `protobuf:"bytes,1,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3,oneof"`
}

type UpdateDiscountDefinitionRequest_DiscountDefinitionKey struct {
	DiscountDefinitionKey string `protobuf:"bytes,13,opt,name=discount_definition_key,json=discountDefinitionKey,proto3,oneof"`
}

func (*UpdateDiscountDefinitionRequest_DiscountDefinitionRef) isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

func (*UpdateDiscountDefinitionRequest_DiscountDefinitionKey) isUpdateDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

type isUpdateDiscountDefinitionRequest_DiscountAmount interface {
	isUpdateDiscountDefinitionRequest_DiscountAmount()
}

type UpdateDiscountDefinitionRequest_MonetaryAmount struct {
	MonetaryAmount *discountv1.MonetaryAmount `protobuf:"bytes,11,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type UpdateDiscountDefinitionRequest_PercentageAmount struct {
	PercentageAmount *discountv1.PercentageAmount `protobuf:"bytes,12,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*UpdateDiscountDefinitionRequest_MonetaryAmount) isUpdateDiscountDefinitionRequest_DiscountAmount() {
}

func (*UpdateDiscountDefinitionRequest_PercentageAmount) isUpdateDiscountDefinitionRequest_DiscountAmount() {
}

type UpdateDiscountDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  UpdateDiscountDefinitionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse_Status" json:"status,omitempty"`
	Error   *v1.Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version int64                                   `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateDiscountDefinitionResponse) Reset() {
	*x = UpdateDiscountDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscountDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscountDefinitionResponse) ProtoMessage() {}

func (x *UpdateDiscountDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscountDefinitionResponse.ProtoReflect.Descriptor instead.
func (*UpdateDiscountDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDiscountDefinitionResponse) GetStatus() UpdateDiscountDefinitionResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateDiscountDefinitionResponse_STATUS_UNSPECIFIED
}

func (x *UpdateDiscountDefinitionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateDiscountDefinitionResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type UpdateDiscountDefinitionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DiscountDefinitionIdentifier:
	//
	//	*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionRef
	//	*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionKey
	DiscountDefinitionIdentifier isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier `protobuf_oneof:"discount_definition_identifier"`
	DiscountDefinitionStatus     DiscountDefinitionStatus                                             `protobuf:"varint,2,opt,name=discount_definition_status,json=discountDefinitionStatus,proto3,enum=mica.discount.discountdefinition.v1.DiscountDefinitionStatus" json:"discount_definition_status,omitempty"`
}

func (x *UpdateDiscountDefinitionStatusRequest) Reset() {
	*x = UpdateDiscountDefinitionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscountDefinitionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscountDefinitionStatusRequest) ProtoMessage() {}

func (x *UpdateDiscountDefinitionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscountDefinitionStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateDiscountDefinitionStatusRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{7}
}

func (m *UpdateDiscountDefinitionStatusRequest) GetDiscountDefinitionIdentifier() isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier {
	if m != nil {
		return m.DiscountDefinitionIdentifier
	}
	return nil
}

func (x *UpdateDiscountDefinitionStatusRequest) GetDiscountDefinitionRef() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionRef); ok {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *UpdateDiscountDefinitionStatusRequest) GetDiscountDefinitionKey() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionKey); ok {
		return x.DiscountDefinitionKey
	}
	return ""
}

func (x *UpdateDiscountDefinitionStatusRequest) GetDiscountDefinitionStatus() DiscountDefinitionStatus {
	if x != nil {
		return x.DiscountDefinitionStatus
	}
	return DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED
}

type isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier interface {
	isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier()
}

type UpdateDiscountDefinitionStatusRequest_DiscountDefinitionRef struct {
	DiscountDefinitionRef string `protobuf:"bytes,1,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3,oneof"`
}

type UpdateDiscountDefinitionStatusRequest_DiscountDefinitionKey struct {
	DiscountDefinitionKey string `protobuf:"bytes,3,opt,name=discount_definition_key,json=discountDefinitionKey,proto3,oneof"`
}

func (*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionRef) isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier() {
}

func (*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionKey) isUpdateDiscountDefinitionStatusRequest_DiscountDefinitionIdentifier() {
}

type UpdateDiscountDefinitionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  UpdateDiscountDefinitionStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse_Status" json:"status,omitempty"`
	Error   *v1.Error                                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version int64                                         `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateDiscountDefinitionStatusResponse) Reset() {
	*x = UpdateDiscountDefinitionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDiscountDefinitionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDiscountDefinitionStatusResponse) ProtoMessage() {}

func (x *UpdateDiscountDefinitionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDiscountDefinitionStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateDiscountDefinitionStatusResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateDiscountDefinitionStatusResponse) GetStatus() UpdateDiscountDefinitionStatusResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateDiscountDefinitionStatusResponse_STATUS_UNSPECIFIED
}

func (x *UpdateDiscountDefinitionStatusResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateDiscountDefinitionStatusResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type RemoveDiscountDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DiscountDefinitionIdentifier:
	//
	//	*RemoveDiscountDefinitionRequest_DiscountDefinitionRef
	//	*RemoveDiscountDefinitionRequest_DiscountDefinitionKey
	DiscountDefinitionIdentifier isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier `protobuf_oneof:"discount_definition_identifier"`
}

func (x *RemoveDiscountDefinitionRequest) Reset() {
	*x = RemoveDiscountDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDiscountDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDiscountDefinitionRequest) ProtoMessage() {}

func (x *RemoveDiscountDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDiscountDefinitionRequest.ProtoReflect.Descriptor instead.
func (*RemoveDiscountDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{9}
}

func (m *RemoveDiscountDefinitionRequest) GetDiscountDefinitionIdentifier() isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier {
	if m != nil {
		return m.DiscountDefinitionIdentifier
	}
	return nil
}

func (x *RemoveDiscountDefinitionRequest) GetDiscountDefinitionRef() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*RemoveDiscountDefinitionRequest_DiscountDefinitionRef); ok {
		return x.DiscountDefinitionRef
	}
	return ""
}

func (x *RemoveDiscountDefinitionRequest) GetDiscountDefinitionKey() string {
	if x, ok := x.GetDiscountDefinitionIdentifier().(*RemoveDiscountDefinitionRequest_DiscountDefinitionKey); ok {
		return x.DiscountDefinitionKey
	}
	return ""
}

type isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier interface {
	isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier()
}

type RemoveDiscountDefinitionRequest_DiscountDefinitionRef struct {
	DiscountDefinitionRef string `protobuf:"bytes,1,opt,name=discount_definition_ref,json=discountDefinitionRef,proto3,oneof"`
}

type RemoveDiscountDefinitionRequest_DiscountDefinitionKey struct {
	DiscountDefinitionKey string `protobuf:"bytes,2,opt,name=discount_definition_key,json=discountDefinitionKey,proto3,oneof"`
}

func (*RemoveDiscountDefinitionRequest_DiscountDefinitionRef) isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

func (*RemoveDiscountDefinitionRequest_DiscountDefinitionKey) isRemoveDiscountDefinitionRequest_DiscountDefinitionIdentifier() {
}

type RemoveDiscountDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RemoveDiscountDefinitionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RemoveDiscountDefinitionResponse) Reset() {
	*x = RemoveDiscountDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDiscountDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDiscountDefinitionResponse) ProtoMessage() {}

func (x *RemoveDiscountDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDiscountDefinitionResponse.ProtoReflect.Descriptor instead.
func (*RemoveDiscountDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveDiscountDefinitionResponse) GetStatus() RemoveDiscountDefinitionResponse_Status {
	if x != nil {
		return x.Status
	}
	return RemoveDiscountDefinitionResponse_STATUS_UNSPECIFIED
}

func (x *RemoveDiscountDefinitionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchDiscountDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiptDescription string                      `protobuf:"bytes,1,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	Status             DiscountDefinitionStatus    `protobuf:"varint,2,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.DiscountDefinitionStatus" json:"status,omitempty"`
	Type               discounttypev1.DiscountType `protobuf:"varint,3,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	ValidFrom          *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo            *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	Currency           currencyv1.Currency         `protobuf:"varint,7,opt,name=currency,proto3,enum=micashared.common.enums.currency.v1.Currency" json:"currency,omitempty"`
}

func (x *SearchDiscountDefinitionRequest) Reset() {
	*x = SearchDiscountDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDiscountDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDiscountDefinitionRequest) ProtoMessage() {}

func (x *SearchDiscountDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDiscountDefinitionRequest.ProtoReflect.Descriptor instead.
func (*SearchDiscountDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{11}
}

func (x *SearchDiscountDefinitionRequest) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *SearchDiscountDefinitionRequest) GetStatus() DiscountDefinitionStatus {
	if x != nil {
		return x.Status
	}
	return DiscountDefinitionStatus_DISCOUNT_DEFINITION_STATUS_UNSPECIFIED
}

func (x *SearchDiscountDefinitionRequest) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *SearchDiscountDefinitionRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *SearchDiscountDefinitionRequest) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *SearchDiscountDefinitionRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

type SearchDiscountDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              SearchDiscountDefinitionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse_Status" json:"status,omitempty"`
	Error               *v1.Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	DiscountDefinitions []*DiscountDefinition                   `protobuf:"bytes,3,rep,name=discount_definitions,json=discountDefinitions,proto3" json:"discount_definitions,omitempty"`
}

func (x *SearchDiscountDefinitionResponse) Reset() {
	*x = SearchDiscountDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDiscountDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDiscountDefinitionResponse) ProtoMessage() {}

func (x *SearchDiscountDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDiscountDefinitionResponse.ProtoReflect.Descriptor instead.
func (*SearchDiscountDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP(), []int{12}
}

func (x *SearchDiscountDefinitionResponse) GetStatus() SearchDiscountDefinitionResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchDiscountDefinitionResponse_STATUS_UNSPECIFIED
}

func (x *SearchDiscountDefinitionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchDiscountDefinitionResponse) GetDiscountDefinitions() []*DiscountDefinition {
	if x != nil {
		return x.DiscountDefinitions
	}
	return nil
}

var File_mica_discount_discountdefinition_v1_discount_definition_proto protoreflect.FileDescriptor

var file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x23, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x32, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xca, 0x09, 0x0a, 0x12,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1b, 0x18, 0x32, 0x52, 0x15,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32,
	0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x4c, 0x0a, 0x1d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64,
	0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38,
	0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x64, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x3f, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x01, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f,
	0x12, 0x62, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x54, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18,
	0xac, 0x02, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c,
	0x42, 0x16, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x8f, 0x08, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x17,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12,
	0x4c, 0x0a, 0x1d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x32, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23, 0x0a,
	0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x12, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x5f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x3f, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x01, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x54, 0x6f, 0x12, 0x62, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x54, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72,
	0x03, 0x18, 0xac, 0x02, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55,
	0x72, 0x6c, 0x42, 0x16, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xde, 0x02, 0x0a, 0x20, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x4c, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xcf, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x17,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x12, 0x43, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1b, 0x18, 0x32, 0x48, 0x00, 0x52,
	0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x42, 0x25, 0x0a, 0x1e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xfd, 0x02,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x49, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x68, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22, 0xa0, 0x09,
	0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32, 0x48, 0x00, 0x52,
	0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x43, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1b,
	0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c,
	0x0a, 0x1d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x32,
	0x52, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x23, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x3f, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0xb2, 0x01, 0x02, 0x40, 0x01, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f,
	0x12, 0x62, 0x0a, 0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x08, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x54, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x01, 0x52,
	0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x42, 0x25, 0x0a, 0x1e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x16, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x03, 0xf8, 0x42, 0x01,
	0x22, 0xbc, 0x02, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0xe0, 0x02, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x17, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x43,
	0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1b, 0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x85, 0x01, 0x0a, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20,
	0x00, 0x52, 0x18, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x25, 0x0a, 0x1e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x03, 0xf8,
	0x42, 0x01, 0x22, 0xee, 0x02, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x52, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x81, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x23,
	0x0a, 0x1f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x04, 0x22, 0xd2, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x17, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x43, 0x0a, 0x17,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x1b, 0x18, 0x32, 0x48, 0x00, 0x52, 0x15, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x42, 0x25, 0x0a, 0x1e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x99, 0x02, 0x0a, 0x20, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0x03, 0x22, 0xb1, 0x03, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x49, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x85, 0x03, 0x0a, 0x20, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4c, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x6a, 0x0a, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03,
	0x2a, 0xc1, 0x01, 0x0a, 0x18, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x26, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x49, 0x53,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x25, 0x0a,
	0x21, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x03, 0x42, 0x62, 0x0a, 0x26, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0d,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x22, 0x6d,
	0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x76,
	0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescOnce sync.Once
	file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescData = file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDesc
)

func file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescGZIP() []byte {
	file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescOnce.Do(func() {
		file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescData)
	})
	return file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDescData
}

var file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_mica_discount_discountdefinition_v1_discount_definition_proto_goTypes = []interface{}{
	(DiscountDefinitionStatus)(0),                      // 0: mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	(CreateDiscountDefinitionResponse_Status)(0),       // 1: mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse.Status
	(GetDiscountDefinitionResponse_Status)(0),          // 2: mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse.Status
	(UpdateDiscountDefinitionResponse_Status)(0),       // 3: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse.Status
	(UpdateDiscountDefinitionStatusResponse_Status)(0), // 4: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse.Status
	(RemoveDiscountDefinitionResponse_Status)(0),       // 5: mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse.Status
	(SearchDiscountDefinitionResponse_Status)(0),       // 6: mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse.Status
	(*DiscountDefinition)(nil),                         // 7: mica.discount.discountdefinition.v1.DiscountDefinition
	(*CreateDiscountDefinitionRequest)(nil),            // 8: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest
	(*CreateDiscountDefinitionResponse)(nil),           // 9: mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse
	(*GetDiscountDefinitionRequest)(nil),               // 10: mica.discount.discountdefinition.v1.GetDiscountDefinitionRequest
	(*GetDiscountDefinitionResponse)(nil),              // 11: mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse
	(*UpdateDiscountDefinitionRequest)(nil),            // 12: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest
	(*UpdateDiscountDefinitionResponse)(nil),           // 13: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse
	(*UpdateDiscountDefinitionStatusRequest)(nil),      // 14: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusRequest
	(*UpdateDiscountDefinitionStatusResponse)(nil),     // 15: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse
	(*RemoveDiscountDefinitionRequest)(nil),            // 16: mica.discount.discountdefinition.v1.RemoveDiscountDefinitionRequest
	(*RemoveDiscountDefinitionResponse)(nil),           // 17: mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse
	(*SearchDiscountDefinitionRequest)(nil),            // 18: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest
	(*SearchDiscountDefinitionResponse)(nil),           // 19: mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse
	(*timestamppb.Timestamp)(nil),                      // 20: google.protobuf.Timestamp
	(discounttypev1.DiscountType)(0),                   // 21: micashared.common.enums.discounttype.v1.DiscountType
	(*discountv1.DiscountCriteria)(nil),                // 22: mica.discount.discount.v1.DiscountCriteria
	(currencyv1.Currency)(0),                           // 23: micashared.common.enums.currency.v1.Currency
	(*discountv1.MonetaryAmount)(nil),                  // 24: mica.discount.discount.v1.MonetaryAmount
	(*discountv1.PercentageAmount)(nil),                // 25: mica.discount.discount.v1.PercentageAmount
	(*v1.Error)(nil),                                   // 26: micashared.common.v1.Error
}
var file_mica_discount_discountdefinition_v1_discount_definition_proto_depIdxs = []int32{
	20, // 0: mica.discount.discountdefinition.v1.DiscountDefinition.created:type_name -> google.protobuf.Timestamp
	20, // 1: mica.discount.discountdefinition.v1.DiscountDefinition.updated:type_name -> google.protobuf.Timestamp
	0,  // 2: mica.discount.discountdefinition.v1.DiscountDefinition.status:type_name -> mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	21, // 3: mica.discount.discountdefinition.v1.DiscountDefinition.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	20, // 4: mica.discount.discountdefinition.v1.DiscountDefinition.valid_from:type_name -> google.protobuf.Timestamp
	20, // 5: mica.discount.discountdefinition.v1.DiscountDefinition.valid_to:type_name -> google.protobuf.Timestamp
	22, // 6: mica.discount.discountdefinition.v1.DiscountDefinition.discount_criteria:type_name -> mica.discount.discount.v1.DiscountCriteria
	23, // 7: mica.discount.discountdefinition.v1.DiscountDefinition.currency:type_name -> micashared.common.enums.currency.v1.Currency
	24, // 8: mica.discount.discountdefinition.v1.DiscountDefinition.monetary_amount:type_name -> mica.discount.discount.v1.MonetaryAmount
	25, // 9: mica.discount.discountdefinition.v1.DiscountDefinition.percentage_amount:type_name -> mica.discount.discount.v1.PercentageAmount
	0,  // 10: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.status:type_name -> mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	21, // 11: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	20, // 12: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.valid_from:type_name -> google.protobuf.Timestamp
	20, // 13: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.valid_to:type_name -> google.protobuf.Timestamp
	22, // 14: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.discount_criteria:type_name -> mica.discount.discount.v1.DiscountCriteria
	23, // 15: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.currency:type_name -> micashared.common.enums.currency.v1.Currency
	24, // 16: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.monetary_amount:type_name -> mica.discount.discount.v1.MonetaryAmount
	25, // 17: mica.discount.discountdefinition.v1.CreateDiscountDefinitionRequest.percentage_amount:type_name -> mica.discount.discount.v1.PercentageAmount
	1,  // 18: mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse.status:type_name -> mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse.Status
	26, // 19: mica.discount.discountdefinition.v1.CreateDiscountDefinitionResponse.error:type_name -> micashared.common.v1.Error
	2,  // 20: mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse.status:type_name -> mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse.Status
	26, // 21: mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse.error:type_name -> micashared.common.v1.Error
	7,  // 22: mica.discount.discountdefinition.v1.GetDiscountDefinitionResponse.discount_definition:type_name -> mica.discount.discountdefinition.v1.DiscountDefinition
	0,  // 23: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.status:type_name -> mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	21, // 24: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	20, // 25: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.valid_from:type_name -> google.protobuf.Timestamp
	20, // 26: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.valid_to:type_name -> google.protobuf.Timestamp
	22, // 27: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.discount_criteria:type_name -> mica.discount.discount.v1.DiscountCriteria
	23, // 28: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.currency:type_name -> micashared.common.enums.currency.v1.Currency
	24, // 29: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.monetary_amount:type_name -> mica.discount.discount.v1.MonetaryAmount
	25, // 30: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionRequest.percentage_amount:type_name -> mica.discount.discount.v1.PercentageAmount
	3,  // 31: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse.status:type_name -> mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse.Status
	26, // 32: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionResponse.error:type_name -> micashared.common.v1.Error
	0,  // 33: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusRequest.discount_definition_status:type_name -> mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	4,  // 34: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse.status:type_name -> mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse.Status
	26, // 35: mica.discount.discountdefinition.v1.UpdateDiscountDefinitionStatusResponse.error:type_name -> micashared.common.v1.Error
	5,  // 36: mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse.status:type_name -> mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse.Status
	26, // 37: mica.discount.discountdefinition.v1.RemoveDiscountDefinitionResponse.error:type_name -> micashared.common.v1.Error
	0,  // 38: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest.status:type_name -> mica.discount.discountdefinition.v1.DiscountDefinitionStatus
	21, // 39: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	20, // 40: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest.valid_from:type_name -> google.protobuf.Timestamp
	20, // 41: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest.valid_to:type_name -> google.protobuf.Timestamp
	23, // 42: mica.discount.discountdefinition.v1.SearchDiscountDefinitionRequest.currency:type_name -> micashared.common.enums.currency.v1.Currency
	6,  // 43: mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse.status:type_name -> mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse.Status
	26, // 44: mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse.error:type_name -> micashared.common.v1.Error
	7,  // 45: mica.discount.discountdefinition.v1.SearchDiscountDefinitionResponse.discount_definitions:type_name -> mica.discount.discountdefinition.v1.DiscountDefinition
	46, // [46:46] is the sub-list for method output_type
	46, // [46:46] is the sub-list for method input_type
	46, // [46:46] is the sub-list for extension type_name
	46, // [46:46] is the sub-list for extension extendee
	0,  // [0:46] is the sub-list for field type_name
}

func init() { file_mica_discount_discountdefinition_v1_discount_definition_proto_init() }
func file_mica_discount_discountdefinition_v1_discount_definition_proto_init() {
	if File_mica_discount_discountdefinition_v1_discount_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscountDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscountDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDiscountDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscountDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscountDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscountDefinitionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDiscountDefinitionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDiscountDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDiscountDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDiscountDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDiscountDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*DiscountDefinition_MonetaryAmount)(nil),
		(*DiscountDefinition_PercentageAmount)(nil),
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*CreateDiscountDefinitionRequest_MonetaryAmount)(nil),
		(*CreateDiscountDefinitionRequest_PercentageAmount)(nil),
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetDiscountDefinitionRequest_DiscountDefinitionRef)(nil),
		(*GetDiscountDefinitionRequest_DiscountDefinitionKey)(nil),
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*UpdateDiscountDefinitionRequest_DiscountDefinitionRef)(nil),
		(*UpdateDiscountDefinitionRequest_DiscountDefinitionKey)(nil),
		(*UpdateDiscountDefinitionRequest_MonetaryAmount)(nil),
		(*UpdateDiscountDefinitionRequest_PercentageAmount)(nil),
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionRef)(nil),
		(*UpdateDiscountDefinitionStatusRequest_DiscountDefinitionKey)(nil),
	}
	file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*RemoveDiscountDefinitionRequest_DiscountDefinitionRef)(nil),
		(*RemoveDiscountDefinitionRequest_DiscountDefinitionKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mica_discount_discountdefinition_v1_discount_definition_proto_goTypes,
		DependencyIndexes: file_mica_discount_discountdefinition_v1_discount_definition_proto_depIdxs,
		EnumInfos:         file_mica_discount_discountdefinition_v1_discount_definition_proto_enumTypes,
		MessageInfos:      file_mica_discount_discountdefinition_v1_discount_definition_proto_msgTypes,
	}.Build()
	File_mica_discount_discountdefinition_v1_discount_definition_proto = out.File
	file_mica_discount_discountdefinition_v1_discount_definition_proto_rawDesc = nil
	file_mica_discount_discountdefinition_v1_discount_definition_proto_goTypes = nil
	file_mica_discount_discountdefinition_v1_discount_definition_proto_depIdxs = nil
}
