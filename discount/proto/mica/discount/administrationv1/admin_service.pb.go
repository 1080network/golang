// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.28.3
// source: mica/discount/administration/v1/admin_service.proto

package administrationv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	v1 "github.com/1080network/golang/discount/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingExternalResponse_Status int32

const (
	PingExternalResponse_STATUS_UNSPECIFIED PingExternalResponse_Status = 0
	PingExternalResponse_STATUS_SUCCESS     PingExternalResponse_Status = 1
)

// Enum value maps for PingExternalResponse_Status.
var (
	PingExternalResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
	}
	PingExternalResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
	}
)

func (x PingExternalResponse_Status) Enum() *PingExternalResponse_Status {
	p := new(PingExternalResponse_Status)
	*p = x
	return p
}

func (x PingExternalResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PingExternalResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[0].Descriptor()
}

func (PingExternalResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[0]
}

func (x PingExternalResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PingExternalResponse_Status.Descriptor instead.
func (PingExternalResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{1, 0}
}

type GenerateFromMicaClientCertificateResponse_Status int32

const (
	GenerateFromMicaClientCertificateResponse_STATUS_UNSPECIFIED GenerateFromMicaClientCertificateResponse_Status = 0
	GenerateFromMicaClientCertificateResponse_STATUS_SUCCESS     GenerateFromMicaClientCertificateResponse_Status = 1
	GenerateFromMicaClientCertificateResponse_STATUS_ERROR       GenerateFromMicaClientCertificateResponse_Status = 2
)

// Enum value maps for GenerateFromMicaClientCertificateResponse_Status.
var (
	GenerateFromMicaClientCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	GenerateFromMicaClientCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x GenerateFromMicaClientCertificateResponse_Status) Enum() *GenerateFromMicaClientCertificateResponse_Status {
	p := new(GenerateFromMicaClientCertificateResponse_Status)
	*p = x
	return p
}

func (x GenerateFromMicaClientCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateFromMicaClientCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[1].Descriptor()
}

func (GenerateFromMicaClientCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[1]
}

func (x GenerateFromMicaClientCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateFromMicaClientCertificateResponse_Status.Descriptor instead.
func (GenerateFromMicaClientCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{3, 0}
}

type UpdateFromMicaClientCertificateResponse_Status int32

const (
	UpdateFromMicaClientCertificateResponse_STATUS_UNSPECIFIED UpdateFromMicaClientCertificateResponse_Status = 0
	UpdateFromMicaClientCertificateResponse_STATUS_SUCCESS     UpdateFromMicaClientCertificateResponse_Status = 1
	UpdateFromMicaClientCertificateResponse_STATUS_ERROR       UpdateFromMicaClientCertificateResponse_Status = 2
)

// Enum value maps for UpdateFromMicaClientCertificateResponse_Status.
var (
	UpdateFromMicaClientCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	UpdateFromMicaClientCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x UpdateFromMicaClientCertificateResponse_Status) Enum() *UpdateFromMicaClientCertificateResponse_Status {
	p := new(UpdateFromMicaClientCertificateResponse_Status)
	*p = x
	return p
}

func (x UpdateFromMicaClientCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateFromMicaClientCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[2].Descriptor()
}

func (UpdateFromMicaClientCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[2]
}

func (x UpdateFromMicaClientCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateFromMicaClientCertificateResponse_Status.Descriptor instead.
func (UpdateFromMicaClientCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{5, 0}
}

type EnableFromMicaClientCertificateResponse_Status int32

const (
	EnableFromMicaClientCertificateResponse_STATUS_UNSPECIFIED EnableFromMicaClientCertificateResponse_Status = 0
	EnableFromMicaClientCertificateResponse_STATUS_SUCCESS     EnableFromMicaClientCertificateResponse_Status = 1
	EnableFromMicaClientCertificateResponse_STATUS_ERROR       EnableFromMicaClientCertificateResponse_Status = 2
)

// Enum value maps for EnableFromMicaClientCertificateResponse_Status.
var (
	EnableFromMicaClientCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	EnableFromMicaClientCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x EnableFromMicaClientCertificateResponse_Status) Enum() *EnableFromMicaClientCertificateResponse_Status {
	p := new(EnableFromMicaClientCertificateResponse_Status)
	*p = x
	return p
}

func (x EnableFromMicaClientCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnableFromMicaClientCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[3].Descriptor()
}

func (EnableFromMicaClientCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[3]
}

func (x EnableFromMicaClientCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnableFromMicaClientCertificateResponse_Status.Descriptor instead.
func (EnableFromMicaClientCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{7, 0}
}

type SearchFromMicaClientCertificateResponse_Status int32

const (
	SearchFromMicaClientCertificateResponse_STATUS_UNSPECIFIED SearchFromMicaClientCertificateResponse_Status = 0
	SearchFromMicaClientCertificateResponse_STATUS_SUCCESS     SearchFromMicaClientCertificateResponse_Status = 1
	SearchFromMicaClientCertificateResponse_STATUS_ERROR       SearchFromMicaClientCertificateResponse_Status = 2
)

// Enum value maps for SearchFromMicaClientCertificateResponse_Status.
var (
	SearchFromMicaClientCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchFromMicaClientCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchFromMicaClientCertificateResponse_Status) Enum() *SearchFromMicaClientCertificateResponse_Status {
	p := new(SearchFromMicaClientCertificateResponse_Status)
	*p = x
	return p
}

func (x SearchFromMicaClientCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchFromMicaClientCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[4].Descriptor()
}

func (SearchFromMicaClientCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[4]
}

func (x SearchFromMicaClientCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchFromMicaClientCertificateResponse_Status.Descriptor instead.
func (SearchFromMicaClientCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{9, 0}
}

type GetFromMicaClientSettingsResponse_Status int32

const (
	GetFromMicaClientSettingsResponse_STATUS_UNSPECIFIED GetFromMicaClientSettingsResponse_Status = 0
	GetFromMicaClientSettingsResponse_STATUS_SUCCESS     GetFromMicaClientSettingsResponse_Status = 1
	GetFromMicaClientSettingsResponse_STATUS_ERROR       GetFromMicaClientSettingsResponse_Status = 2
)

// Enum value maps for GetFromMicaClientSettingsResponse_Status.
var (
	GetFromMicaClientSettingsResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	GetFromMicaClientSettingsResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x GetFromMicaClientSettingsResponse_Status) Enum() *GetFromMicaClientSettingsResponse_Status {
	p := new(GetFromMicaClientSettingsResponse_Status)
	*p = x
	return p
}

func (x GetFromMicaClientSettingsResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetFromMicaClientSettingsResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[5].Descriptor()
}

func (GetFromMicaClientSettingsResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[5]
}

func (x GetFromMicaClientSettingsResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetFromMicaClientSettingsResponse_Status.Descriptor instead.
func (GetFromMicaClientSettingsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{11, 0}
}

type UpdateFromMicaClientCallbackAddressResponse_Status int32

const (
	UpdateFromMicaClientCallbackAddressResponse_STATUS_UNSPECIFIED UpdateFromMicaClientCallbackAddressResponse_Status = 0
	UpdateFromMicaClientCallbackAddressResponse_STATUS_SUCCESS     UpdateFromMicaClientCallbackAddressResponse_Status = 1
	UpdateFromMicaClientCallbackAddressResponse_STATUS_ERROR       UpdateFromMicaClientCallbackAddressResponse_Status = 2
)

// Enum value maps for UpdateFromMicaClientCallbackAddressResponse_Status.
var (
	UpdateFromMicaClientCallbackAddressResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	UpdateFromMicaClientCallbackAddressResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x UpdateFromMicaClientCallbackAddressResponse_Status) Enum() *UpdateFromMicaClientCallbackAddressResponse_Status {
	p := new(UpdateFromMicaClientCallbackAddressResponse_Status)
	*p = x
	return p
}

func (x UpdateFromMicaClientCallbackAddressResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateFromMicaClientCallbackAddressResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[6].Descriptor()
}

func (UpdateFromMicaClientCallbackAddressResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[6]
}

func (x UpdateFromMicaClientCallbackAddressResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateFromMicaClientCallbackAddressResponse_Status.Descriptor instead.
func (UpdateFromMicaClientCallbackAddressResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{13, 0}
}

type CreateApiTokenConfigurationResponse_Status int32

const (
	CreateApiTokenConfigurationResponse_STATUS_UNSPECIFIED CreateApiTokenConfigurationResponse_Status = 0
	CreateApiTokenConfigurationResponse_STATUS_SUCCESS     CreateApiTokenConfigurationResponse_Status = 1
	CreateApiTokenConfigurationResponse_STATUS_ERROR       CreateApiTokenConfigurationResponse_Status = 2
)

// Enum value maps for CreateApiTokenConfigurationResponse_Status.
var (
	CreateApiTokenConfigurationResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	CreateApiTokenConfigurationResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x CreateApiTokenConfigurationResponse_Status) Enum() *CreateApiTokenConfigurationResponse_Status {
	p := new(CreateApiTokenConfigurationResponse_Status)
	*p = x
	return p
}

func (x CreateApiTokenConfigurationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateApiTokenConfigurationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[7].Descriptor()
}

func (CreateApiTokenConfigurationResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[7]
}

func (x CreateApiTokenConfigurationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateApiTokenConfigurationResponse_Status.Descriptor instead.
func (CreateApiTokenConfigurationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{15, 0}
}

type GetApiTokenConfigurationResponse_Status int32

const (
	GetApiTokenConfigurationResponse_STATUS_UNSPECIFIED GetApiTokenConfigurationResponse_Status = 0
	GetApiTokenConfigurationResponse_STATUS_SUCCESS     GetApiTokenConfigurationResponse_Status = 1
	GetApiTokenConfigurationResponse_STATUS_ERROR       GetApiTokenConfigurationResponse_Status = 2
	GetApiTokenConfigurationResponse_STATUS_NOT_FOUND   GetApiTokenConfigurationResponse_Status = 3
)

// Enum value maps for GetApiTokenConfigurationResponse_Status.
var (
	GetApiTokenConfigurationResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	GetApiTokenConfigurationResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x GetApiTokenConfigurationResponse_Status) Enum() *GetApiTokenConfigurationResponse_Status {
	p := new(GetApiTokenConfigurationResponse_Status)
	*p = x
	return p
}

func (x GetApiTokenConfigurationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetApiTokenConfigurationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[8].Descriptor()
}

func (GetApiTokenConfigurationResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[8]
}

func (x GetApiTokenConfigurationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetApiTokenConfigurationResponse_Status.Descriptor instead.
func (GetApiTokenConfigurationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{17, 0}
}

type UpdateAPITokenAuthenticationConfigurationResponse_Status int32

const (
	UpdateAPITokenAuthenticationConfigurationResponse_STATUS_UNSPECIFIED UpdateAPITokenAuthenticationConfigurationResponse_Status = 0
	UpdateAPITokenAuthenticationConfigurationResponse_STATUS_SUCCESS     UpdateAPITokenAuthenticationConfigurationResponse_Status = 1
	UpdateAPITokenAuthenticationConfigurationResponse_STATUS_ERROR       UpdateAPITokenAuthenticationConfigurationResponse_Status = 2
	UpdateAPITokenAuthenticationConfigurationResponse_STATUS_NOT_FOUND   UpdateAPITokenAuthenticationConfigurationResponse_Status = 3
)

// Enum value maps for UpdateAPITokenAuthenticationConfigurationResponse_Status.
var (
	UpdateAPITokenAuthenticationConfigurationResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	UpdateAPITokenAuthenticationConfigurationResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x UpdateAPITokenAuthenticationConfigurationResponse_Status) Enum() *UpdateAPITokenAuthenticationConfigurationResponse_Status {
	p := new(UpdateAPITokenAuthenticationConfigurationResponse_Status)
	*p = x
	return p
}

func (x UpdateAPITokenAuthenticationConfigurationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateAPITokenAuthenticationConfigurationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_discount_administration_v1_admin_service_proto_enumTypes[9].Descriptor()
}

func (UpdateAPITokenAuthenticationConfigurationResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_discount_administration_v1_admin_service_proto_enumTypes[9]
}

func (x UpdateAPITokenAuthenticationConfigurationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateAPITokenAuthenticationConfigurationResponse_Status.Descriptor instead.
func (UpdateAPITokenAuthenticationConfigurationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{19, 0}
}

type PingExternalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingExternalRequest) Reset() {
	*x = PingExternalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingExternalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingExternalRequest) ProtoMessage() {}

func (x *PingExternalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingExternalRequest.ProtoReflect.Descriptor instead.
func (*PingExternalRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{0}
}

type PingExternalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          PingExternalResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.PingExternalResponse_Status" json:"status,omitempty"`
	ServerTime      *timestamppb.Timestamp      `protobuf:"bytes,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	ServerStartTime *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=server_start_time,json=serverStartTime,proto3" json:"server_start_time,omitempty"`
	BuildVersion    string                      `protobuf:"bytes,3,opt,name=build_version,json=buildVersion,proto3" json:"build_version,omitempty"`
	BuildSha        string                      `protobuf:"bytes,4,opt,name=build_sha,json=buildSha,proto3" json:"build_sha,omitempty"`
	BuildTime       string                      `protobuf:"bytes,5,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	ServiceType     string                      `protobuf:"bytes,6,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
}

func (x *PingExternalResponse) Reset() {
	*x = PingExternalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingExternalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingExternalResponse) ProtoMessage() {}

func (x *PingExternalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingExternalResponse.ProtoReflect.Descriptor instead.
func (*PingExternalResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{1}
}

func (x *PingExternalResponse) GetStatus() PingExternalResponse_Status {
	if x != nil {
		return x.Status
	}
	return PingExternalResponse_STATUS_UNSPECIFIED
}

func (x *PingExternalResponse) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *PingExternalResponse) GetServerStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerStartTime
	}
	return nil
}

func (x *PingExternalResponse) GetBuildVersion() string {
	if x != nil {
		return x.BuildVersion
	}
	return ""
}

func (x *PingExternalResponse) GetBuildSha() string {
	if x != nil {
		return x.BuildSha
	}
	return ""
}

func (x *PingExternalResponse) GetBuildTime() string {
	if x != nil {
		return x.BuildTime
	}
	return ""
}

func (x *PingExternalResponse) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

// We generate the db entry and return the csr to the user so they can sign it.
type GenerateFromMicaClientCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *GenerateFromMicaClientCertificateRequest) Reset() {
	*x = GenerateFromMicaClientCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateFromMicaClientCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateFromMicaClientCertificateRequest) ProtoMessage() {}

func (x *GenerateFromMicaClientCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateFromMicaClientCertificateRequest.ProtoReflect.Descriptor instead.
func (*GenerateFromMicaClientCertificateRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateFromMicaClientCertificateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type GenerateFromMicaClientCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            GenerateFromMicaClientCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse_Status" json:"status,omitempty"`
	Error             *v1.Error                                        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	CertificateToSign *v1.FromMicaClientCertificate                    `protobuf:"bytes,3,opt,name=certificate_to_sign,json=certificateToSign,proto3" json:"certificate_to_sign,omitempty"`
}

func (x *GenerateFromMicaClientCertificateResponse) Reset() {
	*x = GenerateFromMicaClientCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateFromMicaClientCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateFromMicaClientCertificateResponse) ProtoMessage() {}

func (x *GenerateFromMicaClientCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateFromMicaClientCertificateResponse.ProtoReflect.Descriptor instead.
func (*GenerateFromMicaClientCertificateResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateFromMicaClientCertificateResponse) GetStatus() GenerateFromMicaClientCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return GenerateFromMicaClientCertificateResponse_STATUS_UNSPECIFIED
}

func (x *GenerateFromMicaClientCertificateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GenerateFromMicaClientCertificateResponse) GetCertificateToSign() *v1.FromMicaClientCertificate {
	if x != nil {
		return x.CertificateToSign
	}
	return nil
}

type UpdateFromMicaClientCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	DisplayName   string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Base64 standard encoded PEM string
	Base64SignedCertPemFromCsr string `protobuf:"bytes,3,opt,name=base64_signed_cert_pem_from_csr,json=base64SignedCertPemFromCsr,proto3" json:"base64_signed_cert_pem_from_csr,omitempty"`
	// Base64 standard encoded PEM string
	Base64RootcaPem string `protobuf:"bytes,4,opt,name=base64_rootca_pem,json=base64RootcaPem,proto3" json:"base64_rootca_pem,omitempty"`
}

func (x *UpdateFromMicaClientCertificateRequest) Reset() {
	*x = UpdateFromMicaClientCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFromMicaClientCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFromMicaClientCertificateRequest) ProtoMessage() {}

func (x *UpdateFromMicaClientCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFromMicaClientCertificateRequest.ProtoReflect.Descriptor instead.
func (*UpdateFromMicaClientCertificateRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFromMicaClientCertificateRequest) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *UpdateFromMicaClientCertificateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateFromMicaClientCertificateRequest) GetBase64SignedCertPemFromCsr() string {
	if x != nil {
		return x.Base64SignedCertPemFromCsr
	}
	return ""
}

func (x *UpdateFromMicaClientCertificateRequest) GetBase64RootcaPem() string {
	if x != nil {
		return x.Base64RootcaPem
	}
	return ""
}

type UpdateFromMicaClientCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      UpdateFromMicaClientCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse_Status" json:"status,omitempty"`
	Error       *v1.Error                                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificate *v1.FromMicaClientCertificate                  `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *UpdateFromMicaClientCertificateResponse) Reset() {
	*x = UpdateFromMicaClientCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFromMicaClientCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFromMicaClientCertificateResponse) ProtoMessage() {}

func (x *UpdateFromMicaClientCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFromMicaClientCertificateResponse.ProtoReflect.Descriptor instead.
func (*UpdateFromMicaClientCertificateResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFromMicaClientCertificateResponse) GetStatus() UpdateFromMicaClientCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateFromMicaClientCertificateResponse_STATUS_UNSPECIFIED
}

func (x *UpdateFromMicaClientCertificateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateFromMicaClientCertificateResponse) GetCertificate() *v1.FromMicaClientCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type EnableFromMicaClientCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateId string `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
}

func (x *EnableFromMicaClientCertificateRequest) Reset() {
	*x = EnableFromMicaClientCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableFromMicaClientCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFromMicaClientCertificateRequest) ProtoMessage() {}

func (x *EnableFromMicaClientCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFromMicaClientCertificateRequest.ProtoReflect.Descriptor instead.
func (*EnableFromMicaClientCertificateRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{6}
}

func (x *EnableFromMicaClientCertificateRequest) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

type EnableFromMicaClientCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      EnableFromMicaClientCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.EnableFromMicaClientCertificateResponse_Status" json:"status,omitempty"`
	Error       *v1.Error                                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificate *v1.FromMicaClientCertificate                  `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *EnableFromMicaClientCertificateResponse) Reset() {
	*x = EnableFromMicaClientCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableFromMicaClientCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableFromMicaClientCertificateResponse) ProtoMessage() {}

func (x *EnableFromMicaClientCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableFromMicaClientCertificateResponse.ProtoReflect.Descriptor instead.
func (*EnableFromMicaClientCertificateResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{7}
}

func (x *EnableFromMicaClientCertificateResponse) GetStatus() EnableFromMicaClientCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return EnableFromMicaClientCertificateResponse_STATUS_UNSPECIFIED
}

func (x *EnableFromMicaClientCertificateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *EnableFromMicaClientCertificateResponse) GetCertificate() *v1.FromMicaClientCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type SearchFromMicaClientCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchFromMicaClientCertificateRequest) Reset() {
	*x = SearchFromMicaClientCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFromMicaClientCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFromMicaClientCertificateRequest) ProtoMessage() {}

func (x *SearchFromMicaClientCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFromMicaClientCertificateRequest.ProtoReflect.Descriptor instead.
func (*SearchFromMicaClientCertificateRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{8}
}

type SearchFromMicaClientCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       SearchFromMicaClientCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.SearchFromMicaClientCertificateResponse_Status" json:"status,omitempty"`
	Error        *v1.Error                                      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificates []*v1.FromMicaClientCertificate                `protobuf:"bytes,3,rep,name=certificates,proto3" json:"certificates,omitempty"`
}

func (x *SearchFromMicaClientCertificateResponse) Reset() {
	*x = SearchFromMicaClientCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchFromMicaClientCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFromMicaClientCertificateResponse) ProtoMessage() {}

func (x *SearchFromMicaClientCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFromMicaClientCertificateResponse.ProtoReflect.Descriptor instead.
func (*SearchFromMicaClientCertificateResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{9}
}

func (x *SearchFromMicaClientCertificateResponse) GetStatus() SearchFromMicaClientCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchFromMicaClientCertificateResponse_STATUS_UNSPECIFIED
}

func (x *SearchFromMicaClientCertificateResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchFromMicaClientCertificateResponse) GetCertificates() []*v1.FromMicaClientCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

type GetFromMicaClientSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFromMicaClientSettingsRequest) Reset() {
	*x = GetFromMicaClientSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromMicaClientSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromMicaClientSettingsRequest) ProtoMessage() {}

func (x *GetFromMicaClientSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromMicaClientSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetFromMicaClientSettingsRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{10}
}

type GetFromMicaClientSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   GetFromMicaClientSettingsResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.GetFromMicaClientSettingsResponse_Status" json:"status,omitempty"`
	Error    *v1.Error                                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Settings *v1.ExternalClientSettings               `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetFromMicaClientSettingsResponse) Reset() {
	*x = GetFromMicaClientSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFromMicaClientSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFromMicaClientSettingsResponse) ProtoMessage() {}

func (x *GetFromMicaClientSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFromMicaClientSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetFromMicaClientSettingsResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetFromMicaClientSettingsResponse) GetStatus() GetFromMicaClientSettingsResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetFromMicaClientSettingsResponse_STATUS_UNSPECIFIED
}

func (x *GetFromMicaClientSettingsResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetFromMicaClientSettingsResponse) GetSettings() *v1.ExternalClientSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateFromMicaClientCallbackAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// the callback address must folow a <hostname>:<port> pattern for example
	// mycallbackservicie.somecompany.io:443
	CallbackAddress string `protobuf:"bytes,2,opt,name=callback_address,json=callbackAddress,proto3" json:"callback_address,omitempty"`
}

func (x *UpdateFromMicaClientCallbackAddressRequest) Reset() {
	*x = UpdateFromMicaClientCallbackAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFromMicaClientCallbackAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFromMicaClientCallbackAddressRequest) ProtoMessage() {}

func (x *UpdateFromMicaClientCallbackAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFromMicaClientCallbackAddressRequest.ProtoReflect.Descriptor instead.
func (*UpdateFromMicaClientCallbackAddressRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateFromMicaClientCallbackAddressRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateFromMicaClientCallbackAddressRequest) GetCallbackAddress() string {
	if x != nil {
		return x.CallbackAddress
	}
	return ""
}

type UpdateFromMicaClientCallbackAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  UpdateFromMicaClientCallbackAddressResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse_Status" json:"status,omitempty"`
	Error   *v1.Error                                          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version int64                                              `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateFromMicaClientCallbackAddressResponse) Reset() {
	*x = UpdateFromMicaClientCallbackAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFromMicaClientCallbackAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFromMicaClientCallbackAddressResponse) ProtoMessage() {}

func (x *UpdateFromMicaClientCallbackAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFromMicaClientCallbackAddressResponse.ProtoReflect.Descriptor instead.
func (*UpdateFromMicaClientCallbackAddressResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateFromMicaClientCallbackAddressResponse) GetStatus() UpdateFromMicaClientCallbackAddressResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateFromMicaClientCallbackAddressResponse_STATUS_UNSPECIFIED
}

func (x *UpdateFromMicaClientCallbackAddressResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateFromMicaClientCallbackAddressResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CreateApiTokenConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderConfiguration *v1.AuthenticationHeaderConfiguration `protobuf:"bytes,1,opt,name=header_configuration,json=headerConfiguration,proto3" json:"header_configuration,omitempty"`
	ApiTokenValue       string                                `protobuf:"bytes,2,opt,name=api_token_value,json=apiTokenValue,proto3" json:"api_token_value,omitempty"`
	// The pem encoded certificate chain
	PemCaChain []string `protobuf:"bytes,3,rep,name=pem_ca_chain,json=pemCaChain,proto3" json:"pem_ca_chain,omitempty"`
}

func (x *CreateApiTokenConfigurationRequest) Reset() {
	*x = CreateApiTokenConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiTokenConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiTokenConfigurationRequest) ProtoMessage() {}

func (x *CreateApiTokenConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiTokenConfigurationRequest.ProtoReflect.Descriptor instead.
func (*CreateApiTokenConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateApiTokenConfigurationRequest) GetHeaderConfiguration() *v1.AuthenticationHeaderConfiguration {
	if x != nil {
		return x.HeaderConfiguration
	}
	return nil
}

func (x *CreateApiTokenConfigurationRequest) GetApiTokenValue() string {
	if x != nil {
		return x.ApiTokenValue
	}
	return ""
}

func (x *CreateApiTokenConfigurationRequest) GetPemCaChain() []string {
	if x != nil {
		return x.PemCaChain
	}
	return nil
}

type CreateApiTokenConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  CreateApiTokenConfigurationResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.CreateApiTokenConfigurationResponse_Status" json:"status,omitempty"`
	Error   *v1.Error                                  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Version int64                                      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateApiTokenConfigurationResponse) Reset() {
	*x = CreateApiTokenConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateApiTokenConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApiTokenConfigurationResponse) ProtoMessage() {}

func (x *CreateApiTokenConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApiTokenConfigurationResponse.ProtoReflect.Descriptor instead.
func (*CreateApiTokenConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateApiTokenConfigurationResponse) GetStatus() CreateApiTokenConfigurationResponse_Status {
	if x != nil {
		return x.Status
	}
	return CreateApiTokenConfigurationResponse_STATUS_UNSPECIFIED
}

func (x *CreateApiTokenConfigurationResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateApiTokenConfigurationResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetApiTokenConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetApiTokenConfigurationRequest) Reset() {
	*x = GetApiTokenConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiTokenConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiTokenConfigurationRequest) ProtoMessage() {}

func (x *GetApiTokenConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiTokenConfigurationRequest.ProtoReflect.Descriptor instead.
func (*GetApiTokenConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{16}
}

type GetApiTokenConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                GetApiTokenConfigurationResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.GetApiTokenConfigurationResponse_Status" json:"status,omitempty"`
	Error                 *v1.Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ApiTokenConfiguration *v1.ApiTokenConfiguration               `protobuf:"bytes,3,opt,name=api_token_configuration,json=apiTokenConfiguration,proto3" json:"api_token_configuration,omitempty"`
}

func (x *GetApiTokenConfigurationResponse) Reset() {
	*x = GetApiTokenConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApiTokenConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApiTokenConfigurationResponse) ProtoMessage() {}

func (x *GetApiTokenConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApiTokenConfigurationResponse.ProtoReflect.Descriptor instead.
func (*GetApiTokenConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetApiTokenConfigurationResponse) GetStatus() GetApiTokenConfigurationResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetApiTokenConfigurationResponse_STATUS_UNSPECIFIED
}

func (x *GetApiTokenConfigurationResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetApiTokenConfigurationResponse) GetApiTokenConfiguration() *v1.ApiTokenConfiguration {
	if x != nil {
		return x.ApiTokenConfiguration
	}
	return nil
}

type UpdateAPITokenAuthenticationConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderConfiguration *v1.AuthenticationHeaderConfiguration `protobuf:"bytes,2,opt,name=header_configuration,json=headerConfiguration,proto3" json:"header_configuration,omitempty"`
	ApiTokenValue       string                                `protobuf:"bytes,3,opt,name=api_token_value,json=apiTokenValue,proto3" json:"api_token_value,omitempty"`
	// The pem encoded certificate chain
	PemCaChain []string `protobuf:"bytes,4,rep,name=pem_ca_chain,json=pemCaChain,proto3" json:"pem_ca_chain,omitempty"`
}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) Reset() {
	*x = UpdateAPITokenAuthenticationConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPITokenAuthenticationConfigurationRequest) ProtoMessage() {}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPITokenAuthenticationConfigurationRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPITokenAuthenticationConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) GetHeaderConfiguration() *v1.AuthenticationHeaderConfiguration {
	if x != nil {
		return x.HeaderConfiguration
	}
	return nil
}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) GetApiTokenValue() string {
	if x != nil {
		return x.ApiTokenValue
	}
	return ""
}

func (x *UpdateAPITokenAuthenticationConfigurationRequest) GetPemCaChain() []string {
	if x != nil {
		return x.PemCaChain
	}
	return nil
}

type UpdateAPITokenAuthenticationConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UpdateAPITokenAuthenticationConfigurationResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                                `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UpdateAPITokenAuthenticationConfigurationResponse) Reset() {
	*x = UpdateAPITokenAuthenticationConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPITokenAuthenticationConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPITokenAuthenticationConfigurationResponse) ProtoMessage() {}

func (x *UpdateAPITokenAuthenticationConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_discount_administration_v1_admin_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPITokenAuthenticationConfigurationResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPITokenAuthenticationConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateAPITokenAuthenticationConfigurationResponse) GetStatus() UpdateAPITokenAuthenticationConfigurationResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateAPITokenAuthenticationConfigurationResponse_STATUS_UNSPECIFIED
}

func (x *UpdateAPITokenAuthenticationConfigurationResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_mica_discount_administration_v1_admin_service_proto protoreflect.FileDescriptor

var file_mica_discount_administration_v1_admin_service_proto_rawDesc = []byte{
	0x0a, 0x33, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6d, 0x69, 0x63, 0x61,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x74, 0x6c,
	0x73, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13,
	0x50, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xab, 0x03, 0x0a, 0x14, 0x50, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x46, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x68, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x34, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x22, 0x4d, 0x0a, 0x28, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xf2, 0x02, 0x0a, 0x29, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x51,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63,
	0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x5f, 0x0a, 0x13,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x46, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xe3, 0x01, 0x0a, 0x26, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x1f, 0x62, 0x61,
	0x73, 0x65, 0x36, 0x34, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x5f, 0x70, 0x65, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x73, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x43, 0x65, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x73, 0x72, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x63, 0x61,
	0x5f, 0x70, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65,
	0x36, 0x34, 0x52, 0x6f, 0x6f, 0x74, 0x63, 0x61, 0x50, 0x65, 0x6d, 0x22, 0xe0, 0x02, 0x0a, 0x27,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x4f,
	0x0a, 0x26, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22,
	0xe0, 0x02, 0x0a, 0x27, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69,
	0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x22, 0x28, 0x0a, 0x26, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d,
	0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe2, 0x02, 0x0a,
	0x27, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x53, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10,
	0x02, 0x22, 0x22, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x22, 0x92, 0x01, 0x0a, 0x2a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x16, 0xfa, 0x42, 0x13, 0x72, 0x11, 0x32, 0x0f, 0x5e, 0x5b, 0x5e, 0x2f, 0x5d, 0x2b, 0x3a, 0x5c,
	0x64, 0x7b, 0x33, 0x2c, 0x36, 0x7d, 0x24, 0x52, 0x0f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x2b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02,
	0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x02, 0x22, 0xf7, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x74, 0x0a, 0x14, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x13, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x0f, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2a, 0x0a, 0x0c, 0x70, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08,
	0x01, 0x52, 0x0a, 0x70, 0x65, 0x6d, 0x43, 0x61, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x22, 0xa8, 0x02,
	0x0a, 0x23, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x4b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x21, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x21, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfa, 0x02, 0x0a, 0x20,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x48, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x63, 0x0a, 0x17, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70,
	0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x15, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22, 0xe8, 0x01, 0x0a, 0x30, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a, 0x0a,
	0x14, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x70, 0x69,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x6d, 0x43, 0x61, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x22, 0xb7, 0x02, 0x0a, 0x31, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50,
	0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x59, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x32, 0x9c, 0x0e,
	0x0a, 0x1d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xbc, 0x01, 0x0a, 0x21, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x49, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x4a, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb6,
	0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63,
	0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x47, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb6, 0x01, 0x0a, 0x1f, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x47, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xb6, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x12, 0x47, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa4, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xc2, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d,
	0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4c, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xaa, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70,
	0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x40, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x41, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xd4, 0x01, 0x0a, 0x29, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x50, 0x49, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x0c, 0x50, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x34, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x67, 0x0a, 0x22,
	0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x42, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1e,
	0x6d, 0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02,
	0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_discount_administration_v1_admin_service_proto_rawDescOnce sync.Once
	file_mica_discount_administration_v1_admin_service_proto_rawDescData = file_mica_discount_administration_v1_admin_service_proto_rawDesc
)

func file_mica_discount_administration_v1_admin_service_proto_rawDescGZIP() []byte {
	file_mica_discount_administration_v1_admin_service_proto_rawDescOnce.Do(func() {
		file_mica_discount_administration_v1_admin_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_discount_administration_v1_admin_service_proto_rawDescData)
	})
	return file_mica_discount_administration_v1_admin_service_proto_rawDescData
}

var file_mica_discount_administration_v1_admin_service_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_mica_discount_administration_v1_admin_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_mica_discount_administration_v1_admin_service_proto_goTypes = []interface{}{
	(PingExternalResponse_Status)(0),                              // 0: mica.discount.administration.v1.PingExternalResponse.Status
	(GenerateFromMicaClientCertificateResponse_Status)(0),         // 1: mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse.Status
	(UpdateFromMicaClientCertificateResponse_Status)(0),           // 2: mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse.Status
	(EnableFromMicaClientCertificateResponse_Status)(0),           // 3: mica.discount.administration.v1.EnableFromMicaClientCertificateResponse.Status
	(SearchFromMicaClientCertificateResponse_Status)(0),           // 4: mica.discount.administration.v1.SearchFromMicaClientCertificateResponse.Status
	(GetFromMicaClientSettingsResponse_Status)(0),                 // 5: mica.discount.administration.v1.GetFromMicaClientSettingsResponse.Status
	(UpdateFromMicaClientCallbackAddressResponse_Status)(0),       // 6: mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse.Status
	(CreateApiTokenConfigurationResponse_Status)(0),               // 7: mica.discount.administration.v1.CreateApiTokenConfigurationResponse.Status
	(GetApiTokenConfigurationResponse_Status)(0),                  // 8: mica.discount.administration.v1.GetApiTokenConfigurationResponse.Status
	(UpdateAPITokenAuthenticationConfigurationResponse_Status)(0), // 9: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse.Status
	(*PingExternalRequest)(nil),                                   // 10: mica.discount.administration.v1.PingExternalRequest
	(*PingExternalResponse)(nil),                                  // 11: mica.discount.administration.v1.PingExternalResponse
	(*GenerateFromMicaClientCertificateRequest)(nil),              // 12: mica.discount.administration.v1.GenerateFromMicaClientCertificateRequest
	(*GenerateFromMicaClientCertificateResponse)(nil),             // 13: mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse
	(*UpdateFromMicaClientCertificateRequest)(nil),                // 14: mica.discount.administration.v1.UpdateFromMicaClientCertificateRequest
	(*UpdateFromMicaClientCertificateResponse)(nil),               // 15: mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse
	(*EnableFromMicaClientCertificateRequest)(nil),                // 16: mica.discount.administration.v1.EnableFromMicaClientCertificateRequest
	(*EnableFromMicaClientCertificateResponse)(nil),               // 17: mica.discount.administration.v1.EnableFromMicaClientCertificateResponse
	(*SearchFromMicaClientCertificateRequest)(nil),                // 18: mica.discount.administration.v1.SearchFromMicaClientCertificateRequest
	(*SearchFromMicaClientCertificateResponse)(nil),               // 19: mica.discount.administration.v1.SearchFromMicaClientCertificateResponse
	(*GetFromMicaClientSettingsRequest)(nil),                      // 20: mica.discount.administration.v1.GetFromMicaClientSettingsRequest
	(*GetFromMicaClientSettingsResponse)(nil),                     // 21: mica.discount.administration.v1.GetFromMicaClientSettingsResponse
	(*UpdateFromMicaClientCallbackAddressRequest)(nil),            // 22: mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressRequest
	(*UpdateFromMicaClientCallbackAddressResponse)(nil),           // 23: mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse
	(*CreateApiTokenConfigurationRequest)(nil),                    // 24: mica.discount.administration.v1.CreateApiTokenConfigurationRequest
	(*CreateApiTokenConfigurationResponse)(nil),                   // 25: mica.discount.administration.v1.CreateApiTokenConfigurationResponse
	(*GetApiTokenConfigurationRequest)(nil),                       // 26: mica.discount.administration.v1.GetApiTokenConfigurationRequest
	(*GetApiTokenConfigurationResponse)(nil),                      // 27: mica.discount.administration.v1.GetApiTokenConfigurationResponse
	(*UpdateAPITokenAuthenticationConfigurationRequest)(nil),      // 28: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationRequest
	(*UpdateAPITokenAuthenticationConfigurationResponse)(nil),     // 29: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse
	(*timestamppb.Timestamp)(nil),                                 // 30: google.protobuf.Timestamp
	(*v1.Error)(nil),                                              // 31: micashared.common.v1.Error
	(*v1.FromMicaClientCertificate)(nil),                          // 32: micashared.common.v1.FromMicaClientCertificate
	(*v1.ExternalClientSettings)(nil),                             // 33: micashared.common.v1.ExternalClientSettings
	(*v1.AuthenticationHeaderConfiguration)(nil),                  // 34: micashared.common.v1.AuthenticationHeaderConfiguration
	(*v1.ApiTokenConfiguration)(nil),                              // 35: micashared.common.v1.ApiTokenConfiguration
}
var file_mica_discount_administration_v1_admin_service_proto_depIdxs = []int32{
	0,  // 0: mica.discount.administration.v1.PingExternalResponse.status:type_name -> mica.discount.administration.v1.PingExternalResponse.Status
	30, // 1: mica.discount.administration.v1.PingExternalResponse.server_time:type_name -> google.protobuf.Timestamp
	30, // 2: mica.discount.administration.v1.PingExternalResponse.server_start_time:type_name -> google.protobuf.Timestamp
	1,  // 3: mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse.status:type_name -> mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse.Status
	31, // 4: mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse.error:type_name -> micashared.common.v1.Error
	32, // 5: mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse.certificate_to_sign:type_name -> micashared.common.v1.FromMicaClientCertificate
	2,  // 6: mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse.status:type_name -> mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse.Status
	31, // 7: mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse.error:type_name -> micashared.common.v1.Error
	32, // 8: mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse.certificate:type_name -> micashared.common.v1.FromMicaClientCertificate
	3,  // 9: mica.discount.administration.v1.EnableFromMicaClientCertificateResponse.status:type_name -> mica.discount.administration.v1.EnableFromMicaClientCertificateResponse.Status
	31, // 10: mica.discount.administration.v1.EnableFromMicaClientCertificateResponse.error:type_name -> micashared.common.v1.Error
	32, // 11: mica.discount.administration.v1.EnableFromMicaClientCertificateResponse.certificate:type_name -> micashared.common.v1.FromMicaClientCertificate
	4,  // 12: mica.discount.administration.v1.SearchFromMicaClientCertificateResponse.status:type_name -> mica.discount.administration.v1.SearchFromMicaClientCertificateResponse.Status
	31, // 13: mica.discount.administration.v1.SearchFromMicaClientCertificateResponse.error:type_name -> micashared.common.v1.Error
	32, // 14: mica.discount.administration.v1.SearchFromMicaClientCertificateResponse.certificates:type_name -> micashared.common.v1.FromMicaClientCertificate
	5,  // 15: mica.discount.administration.v1.GetFromMicaClientSettingsResponse.status:type_name -> mica.discount.administration.v1.GetFromMicaClientSettingsResponse.Status
	31, // 16: mica.discount.administration.v1.GetFromMicaClientSettingsResponse.error:type_name -> micashared.common.v1.Error
	33, // 17: mica.discount.administration.v1.GetFromMicaClientSettingsResponse.settings:type_name -> micashared.common.v1.ExternalClientSettings
	6,  // 18: mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse.status:type_name -> mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse.Status
	31, // 19: mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse.error:type_name -> micashared.common.v1.Error
	34, // 20: mica.discount.administration.v1.CreateApiTokenConfigurationRequest.header_configuration:type_name -> micashared.common.v1.AuthenticationHeaderConfiguration
	7,  // 21: mica.discount.administration.v1.CreateApiTokenConfigurationResponse.status:type_name -> mica.discount.administration.v1.CreateApiTokenConfigurationResponse.Status
	31, // 22: mica.discount.administration.v1.CreateApiTokenConfigurationResponse.error:type_name -> micashared.common.v1.Error
	8,  // 23: mica.discount.administration.v1.GetApiTokenConfigurationResponse.status:type_name -> mica.discount.administration.v1.GetApiTokenConfigurationResponse.Status
	31, // 24: mica.discount.administration.v1.GetApiTokenConfigurationResponse.error:type_name -> micashared.common.v1.Error
	35, // 25: mica.discount.administration.v1.GetApiTokenConfigurationResponse.api_token_configuration:type_name -> micashared.common.v1.ApiTokenConfiguration
	34, // 26: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationRequest.header_configuration:type_name -> micashared.common.v1.AuthenticationHeaderConfiguration
	9,  // 27: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse.status:type_name -> mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse.Status
	31, // 28: mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse.error:type_name -> micashared.common.v1.Error
	12, // 29: mica.discount.administration.v1.DiscountAdministrationService.GenerateFromMicaClientCertificate:input_type -> mica.discount.administration.v1.GenerateFromMicaClientCertificateRequest
	14, // 30: mica.discount.administration.v1.DiscountAdministrationService.UpdateFromMicaClientCertificate:input_type -> mica.discount.administration.v1.UpdateFromMicaClientCertificateRequest
	16, // 31: mica.discount.administration.v1.DiscountAdministrationService.EnableFromMicaClientCertificate:input_type -> mica.discount.administration.v1.EnableFromMicaClientCertificateRequest
	18, // 32: mica.discount.administration.v1.DiscountAdministrationService.SearchFromMicaClientCertificate:input_type -> mica.discount.administration.v1.SearchFromMicaClientCertificateRequest
	20, // 33: mica.discount.administration.v1.DiscountAdministrationService.GetFromMicaClientSettings:input_type -> mica.discount.administration.v1.GetFromMicaClientSettingsRequest
	22, // 34: mica.discount.administration.v1.DiscountAdministrationService.UpdateFromMicaClientCallbackAddress:input_type -> mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressRequest
	24, // 35: mica.discount.administration.v1.DiscountAdministrationService.CreateApiTokenConfiguration:input_type -> mica.discount.administration.v1.CreateApiTokenConfigurationRequest
	26, // 36: mica.discount.administration.v1.DiscountAdministrationService.GetApiTokenConfiguration:input_type -> mica.discount.administration.v1.GetApiTokenConfigurationRequest
	28, // 37: mica.discount.administration.v1.DiscountAdministrationService.UpdateAPITokenAuthenticationConfiguration:input_type -> mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationRequest
	10, // 38: mica.discount.administration.v1.DiscountAdministrationService.PingExternal:input_type -> mica.discount.administration.v1.PingExternalRequest
	13, // 39: mica.discount.administration.v1.DiscountAdministrationService.GenerateFromMicaClientCertificate:output_type -> mica.discount.administration.v1.GenerateFromMicaClientCertificateResponse
	15, // 40: mica.discount.administration.v1.DiscountAdministrationService.UpdateFromMicaClientCertificate:output_type -> mica.discount.administration.v1.UpdateFromMicaClientCertificateResponse
	17, // 41: mica.discount.administration.v1.DiscountAdministrationService.EnableFromMicaClientCertificate:output_type -> mica.discount.administration.v1.EnableFromMicaClientCertificateResponse
	19, // 42: mica.discount.administration.v1.DiscountAdministrationService.SearchFromMicaClientCertificate:output_type -> mica.discount.administration.v1.SearchFromMicaClientCertificateResponse
	21, // 43: mica.discount.administration.v1.DiscountAdministrationService.GetFromMicaClientSettings:output_type -> mica.discount.administration.v1.GetFromMicaClientSettingsResponse
	23, // 44: mica.discount.administration.v1.DiscountAdministrationService.UpdateFromMicaClientCallbackAddress:output_type -> mica.discount.administration.v1.UpdateFromMicaClientCallbackAddressResponse
	25, // 45: mica.discount.administration.v1.DiscountAdministrationService.CreateApiTokenConfiguration:output_type -> mica.discount.administration.v1.CreateApiTokenConfigurationResponse
	27, // 46: mica.discount.administration.v1.DiscountAdministrationService.GetApiTokenConfiguration:output_type -> mica.discount.administration.v1.GetApiTokenConfigurationResponse
	29, // 47: mica.discount.administration.v1.DiscountAdministrationService.UpdateAPITokenAuthenticationConfiguration:output_type -> mica.discount.administration.v1.UpdateAPITokenAuthenticationConfigurationResponse
	11, // 48: mica.discount.administration.v1.DiscountAdministrationService.PingExternal:output_type -> mica.discount.administration.v1.PingExternalResponse
	39, // [39:49] is the sub-list for method output_type
	29, // [29:39] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_mica_discount_administration_v1_admin_service_proto_init() }
func file_mica_discount_administration_v1_admin_service_proto_init() {
	if File_mica_discount_administration_v1_admin_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingExternalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingExternalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateFromMicaClientCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateFromMicaClientCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFromMicaClientCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFromMicaClientCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableFromMicaClientCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableFromMicaClientCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFromMicaClientCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchFromMicaClientCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromMicaClientSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFromMicaClientSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFromMicaClientCallbackAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFromMicaClientCallbackAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiTokenConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateApiTokenConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiTokenConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApiTokenConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPITokenAuthenticationConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_discount_administration_v1_admin_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPITokenAuthenticationConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_discount_administration_v1_admin_service_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mica_discount_administration_v1_admin_service_proto_goTypes,
		DependencyIndexes: file_mica_discount_administration_v1_admin_service_proto_depIdxs,
		EnumInfos:         file_mica_discount_administration_v1_admin_service_proto_enumTypes,
		MessageInfos:      file_mica_discount_administration_v1_admin_service_proto_msgTypes,
	}.Build()
	File_mica_discount_administration_v1_admin_service_proto = out.File
	file_mica_discount_administration_v1_admin_service_proto_rawDesc = nil
	file_mica_discount_administration_v1_admin_service_proto_goTypes = nil
	file_mica_discount_administration_v1_admin_service_proto_depIdxs = nil
}
