// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: fi/instrument/v1/instrument.proto

package instrumentv1

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	currencyv1 "ten80/proto/common/enums/currencyv1"
	instrumenttypev1 "ten80/proto/common/enums/instrumenttypev1"
	v1 "ten80/proto/common/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RegisterInstrumentResponse_Status int32

const (
	RegisterInstrumentResponse_STATUS_UNSPECIFIED RegisterInstrumentResponse_Status = 0
	RegisterInstrumentResponse_STATUS_SUCCESS     RegisterInstrumentResponse_Status = 1
	RegisterInstrumentResponse_STATUS_ERROR       RegisterInstrumentResponse_Status = 2
	RegisterInstrumentResponse_STATUS_DUPLICATE   RegisterInstrumentResponse_Status = 3
)

// Enum value maps for RegisterInstrumentResponse_Status.
var (
	RegisterInstrumentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_DUPLICATE",
	}
	RegisterInstrumentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_DUPLICATE":   3,
	}
)

func (x RegisterInstrumentResponse_Status) Enum() *RegisterInstrumentResponse_Status {
	p := new(RegisterInstrumentResponse_Status)
	*p = x
	return p
}

func (x RegisterInstrumentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterInstrumentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fi_instrument_v1_instrument_proto_enumTypes[0].Descriptor()
}

func (RegisterInstrumentResponse_Status) Type() protoreflect.EnumType {
	return &file_fi_instrument_v1_instrument_proto_enumTypes[0]
}

func (x RegisterInstrumentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterInstrumentResponse_Status.Descriptor instead.
func (RegisterInstrumentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{2, 0}
}

type GetInstrumentResponse_Status int32

const (
	GetInstrumentResponse_STATUS_UNSPECIFIED GetInstrumentResponse_Status = 0
	GetInstrumentResponse_STATUS_SUCCESS     GetInstrumentResponse_Status = 1
	GetInstrumentResponse_STATUS_ERROR       GetInstrumentResponse_Status = 2
	GetInstrumentResponse_STATUS_NOT_FOUND   GetInstrumentResponse_Status = 3
)

// Enum value maps for GetInstrumentResponse_Status.
var (
	GetInstrumentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	GetInstrumentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x GetInstrumentResponse_Status) Enum() *GetInstrumentResponse_Status {
	p := new(GetInstrumentResponse_Status)
	*p = x
	return p
}

func (x GetInstrumentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetInstrumentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fi_instrument_v1_instrument_proto_enumTypes[1].Descriptor()
}

func (GetInstrumentResponse_Status) Type() protoreflect.EnumType {
	return &file_fi_instrument_v1_instrument_proto_enumTypes[1]
}

func (x GetInstrumentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetInstrumentResponse_Status.Descriptor instead.
func (GetInstrumentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{5, 0}
}

type RemoveInstrumentResponse_Status int32

const (
	RemoveInstrumentResponse_STATUS_UNSPECIFIED RemoveInstrumentResponse_Status = 0
	RemoveInstrumentResponse_STATUS_SUCCESS     RemoveInstrumentResponse_Status = 1
	RemoveInstrumentResponse_STATUS_ERROR       RemoveInstrumentResponse_Status = 2
	RemoveInstrumentResponse_STATUS_NOT_FOUND   RemoveInstrumentResponse_Status = 3
)

// Enum value maps for RemoveInstrumentResponse_Status.
var (
	RemoveInstrumentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
	}
	RemoveInstrumentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
		"STATUS_NOT_FOUND":   3,
	}
)

func (x RemoveInstrumentResponse_Status) Enum() *RemoveInstrumentResponse_Status {
	p := new(RemoveInstrumentResponse_Status)
	*p = x
	return p
}

func (x RemoveInstrumentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveInstrumentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fi_instrument_v1_instrument_proto_enumTypes[2].Descriptor()
}

func (RemoveInstrumentResponse_Status) Type() protoreflect.EnumType {
	return &file_fi_instrument_v1_instrument_proto_enumTypes[2]
}

func (x RemoveInstrumentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveInstrumentResponse_Status.Descriptor instead.
func (RemoveInstrumentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{7, 0}
}

type SearchInstrumentResponse_Status int32

const (
	SearchInstrumentResponse_STATUS_UNSPECIFIED SearchInstrumentResponse_Status = 0
	SearchInstrumentResponse_STATUS_SUCCESS     SearchInstrumentResponse_Status = 1
	SearchInstrumentResponse_STATUS_ERROR       SearchInstrumentResponse_Status = 2
)

// Enum value maps for SearchInstrumentResponse_Status.
var (
	SearchInstrumentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchInstrumentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchInstrumentResponse_Status) Enum() *SearchInstrumentResponse_Status {
	p := new(SearchInstrumentResponse_Status)
	*p = x
	return p
}

func (x SearchInstrumentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchInstrumentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fi_instrument_v1_instrument_proto_enumTypes[3].Descriptor()
}

func (SearchInstrumentResponse_Status) Type() protoreflect.EnumType {
	return &file_fi_instrument_v1_instrument_proto_enumTypes[3]
}

func (x SearchInstrumentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchInstrumentResponse_Status.Descriptor instead.
func (SearchInstrumentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{9, 0}
}

type RetrieveTransactionResponse_Status int32

const (
	RetrieveTransactionResponse_STATUS_UNSPECIFIED          RetrieveTransactionResponse_Status = 0
	RetrieveTransactionResponse_STATUS_SUCCESS              RetrieveTransactionResponse_Status = 1
	RetrieveTransactionResponse_STATUS_ERROR                RetrieveTransactionResponse_Status = 2
	RetrieveTransactionResponse_STATUS_INSTRUMENT_NOT_FOUND RetrieveTransactionResponse_Status = 3
)

// Enum value maps for RetrieveTransactionResponse_Status.
var (
	RetrieveTransactionResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_INSTRUMENT_NOT_FOUND",
	}
	RetrieveTransactionResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":          0,
		"STATUS_SUCCESS":              1,
		"STATUS_ERROR":                2,
		"STATUS_INSTRUMENT_NOT_FOUND": 3,
	}
)

func (x RetrieveTransactionResponse_Status) Enum() *RetrieveTransactionResponse_Status {
	p := new(RetrieveTransactionResponse_Status)
	*p = x
	return p
}

func (x RetrieveTransactionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetrieveTransactionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fi_instrument_v1_instrument_proto_enumTypes[4].Descriptor()
}

func (RetrieveTransactionResponse_Status) Type() protoreflect.EnumType {
	return &file_fi_instrument_v1_instrument_proto_enumTypes[4]
}

func (x RetrieveTransactionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetrieveTransactionResponse_Status.Descriptor instead.
func (RetrieveTransactionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{11, 0}
}

type RegisterInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key representing this user in 1080.
	FiUserKey string `protobuf:"bytes,1,opt,name=fi_user_key,json=fiUserKey,proto3" json:"fi_user_key,omitempty"`
	// Primary key on the external system.
	FiInstrumentRef string                          `protobuf:"bytes,2,opt,name=fi_instrument_ref,json=fiInstrumentRef,proto3" json:"fi_instrument_ref,omitempty"`
	InstrumentType  instrumenttypev1.InstrumentType `protobuf:"varint,3,opt,name=instrument_type,json=instrumentType,proto3,enum=common.enums.instrumenttype.v1.InstrumentType" json:"instrument_type,omitempty"`
	// The 3-letter currency code defined in ISO 4217.
	Currency currencyv1.Currency `protobuf:"varint,4,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Last 4 digits of this instrument.
	LastFour string `protobuf:"bytes,5,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
	// List of previous settled transactions
	SettledTransactions []*Transaction `protobuf:"bytes,6,rep,name=settled_transactions,json=settledTransactions,proto3" json:"settled_transactions,omitempty"`
}

func (x *RegisterInstrumentRequest) Reset() {
	*x = RegisterInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInstrumentRequest) ProtoMessage() {}

func (x *RegisterInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInstrumentRequest.ProtoReflect.Descriptor instead.
func (*RegisterInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterInstrumentRequest) GetFiUserKey() string {
	if x != nil {
		return x.FiUserKey
	}
	return ""
}

func (x *RegisterInstrumentRequest) GetFiInstrumentRef() string {
	if x != nil {
		return x.FiInstrumentRef
	}
	return ""
}

func (x *RegisterInstrumentRequest) GetInstrumentType() instrumenttypev1.InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return instrumenttypev1.InstrumentType_INSTRUMENT_TYPE_UNSPECIFIED
}

func (x *RegisterInstrumentRequest) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency_CURRENCY_UNSPECIFIED
}

func (x *RegisterInstrumentRequest) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

func (x *RegisterInstrumentRequest) GetSettledTransactions() []*Transaction {
	if x != nil {
		return x.SettledTransactions
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created      *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Amount       *v1.Amount           `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	MerchantName string               `protobuf:"bytes,3,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Transaction) GetAmount() *v1.Amount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Transaction) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

type RegisterInstrumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RegisterInstrumentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=fi.instrument.v1.RegisterInstrumentResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The key representing this instrument in 1080.
	FiInstrumentKey string `protobuf:"bytes,3,opt,name=fi_instrument_key,json=fiInstrumentKey,proto3" json:"fi_instrument_key,omitempty"`
	Version         int64  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *RegisterInstrumentResponse) Reset() {
	*x = RegisterInstrumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterInstrumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterInstrumentResponse) ProtoMessage() {}

func (x *RegisterInstrumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterInstrumentResponse.ProtoReflect.Descriptor instead.
func (*RegisterInstrumentResponse) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterInstrumentResponse) GetStatus() RegisterInstrumentResponse_Status {
	if x != nil {
		return x.Status
	}
	return RegisterInstrumentResponse_STATUS_UNSPECIFIED
}

func (x *RegisterInstrumentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RegisterInstrumentResponse) GetFiInstrumentKey() string {
	if x != nil {
		return x.FiInstrumentKey
	}
	return ""
}

func (x *RegisterInstrumentResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//	*GetInstrumentRequest_FiInstrumentKey
	//	*GetInstrumentRequest_FiInstrumentRef
	Criteria isGetInstrumentRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *GetInstrumentRequest) Reset() {
	*x = GetInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentRequest) ProtoMessage() {}

func (x *GetInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentRequest.ProtoReflect.Descriptor instead.
func (*GetInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{3}
}

func (m *GetInstrumentRequest) GetCriteria() isGetInstrumentRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *GetInstrumentRequest) GetFiInstrumentKey() string {
	if x, ok := x.GetCriteria().(*GetInstrumentRequest_FiInstrumentKey); ok {
		return x.FiInstrumentKey
	}
	return ""
}

func (x *GetInstrumentRequest) GetFiInstrumentRef() string {
	if x, ok := x.GetCriteria().(*GetInstrumentRequest_FiInstrumentRef); ok {
		return x.FiInstrumentRef
	}
	return ""
}

type isGetInstrumentRequest_Criteria interface {
	isGetInstrumentRequest_Criteria()
}

type GetInstrumentRequest_FiInstrumentKey struct {
	// The key representing this instrument in 1080.
	FiInstrumentKey string `protobuf:"bytes,1,opt,name=fi_instrument_key,json=fiInstrumentKey,proto3,oneof"`
}

type GetInstrumentRequest_FiInstrumentRef struct {
	// Primary key on the external system.
	FiInstrumentRef string `protobuf:"bytes,2,opt,name=fi_instrument_ref,json=fiInstrumentRef,proto3,oneof"`
}

func (*GetInstrumentRequest_FiInstrumentKey) isGetInstrumentRequest_Criteria() {}

func (*GetInstrumentRequest_FiInstrumentRef) isGetInstrumentRequest_Criteria() {}

type Instrument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The primary key that represents this instrument at 1080.
	FiInstrumentKey string `protobuf:"bytes,1,opt,name=fi_instrument_key,json=fiInstrumentKey,proto3" json:"fi_instrument_key,omitempty"`
	// version of the user record, used for optimistic locking
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// Date that the Store was created at 1080.
	Created *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	// Date that the Store was last updated at 1080.
	Updated *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	// Primary key on the external system.
	FiInstrumentRef string `protobuf:"bytes,5,opt,name=fi_instrument_ref,json=fiInstrumentRef,proto3" json:"fi_instrument_ref,omitempty"`
	// The key that represents this user.
	FiUserKey string `protobuf:"bytes,6,opt,name=fi_user_key,json=fiUserKey,proto3" json:"fi_user_key,omitempty"`
	// Primary key on the external system.
	FiUserRef      string                          `protobuf:"bytes,7,opt,name=fi_user_ref,json=fiUserRef,proto3" json:"fi_user_ref,omitempty"`
	InstrumentType instrumenttypev1.InstrumentType `protobuf:"varint,8,opt,name=instrument_type,json=instrumentType,proto3,enum=common.enums.instrumenttype.v1.InstrumentType" json:"instrument_type,omitempty"`
	// The 3-letter currency code defined in ISO 4217.
	Currency currencyv1.Currency `protobuf:"varint,9,opt,name=currency,proto3,enum=common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Last for characters of this instrument.
	LastFour string `protobuf:"bytes,10,opt,name=last_four,json=lastFour,proto3" json:"last_four,omitempty"`
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{4}
}

func (x *Instrument) GetFiInstrumentKey() string {
	if x != nil {
		return x.FiInstrumentKey
	}
	return ""
}

func (x *Instrument) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Instrument) GetCreated() *timestamp.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Instrument) GetUpdated() *timestamp.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *Instrument) GetFiInstrumentRef() string {
	if x != nil {
		return x.FiInstrumentRef
	}
	return ""
}

func (x *Instrument) GetFiUserKey() string {
	if x != nil {
		return x.FiUserKey
	}
	return ""
}

func (x *Instrument) GetFiUserRef() string {
	if x != nil {
		return x.FiUserRef
	}
	return ""
}

func (x *Instrument) GetInstrumentType() instrumenttypev1.InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return instrumenttypev1.InstrumentType_INSTRUMENT_TYPE_UNSPECIFIED
}

func (x *Instrument) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency_CURRENCY_UNSPECIFIED
}

func (x *Instrument) GetLastFour() string {
	if x != nil {
		return x.LastFour
	}
	return ""
}

type GetInstrumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     GetInstrumentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=fi.instrument.v1.GetInstrumentResponse_Status" json:"status,omitempty"`
	Error      *v1.Error                    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Instrument *Instrument                  `protobuf:"bytes,3,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *GetInstrumentResponse) Reset() {
	*x = GetInstrumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInstrumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInstrumentResponse) ProtoMessage() {}

func (x *GetInstrumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInstrumentResponse.ProtoReflect.Descriptor instead.
func (*GetInstrumentResponse) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{5}
}

func (x *GetInstrumentResponse) GetStatus() GetInstrumentResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetInstrumentResponse_STATUS_UNSPECIFIED
}

func (x *GetInstrumentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetInstrumentResponse) GetInstrument() *Instrument {
	if x != nil {
		return x.Instrument
	}
	return nil
}

type RemoveInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//	*RemoveInstrumentRequest_FiInstrumentKey
	//	*RemoveInstrumentRequest_FiInstrumentRef
	Criteria isRemoveInstrumentRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *RemoveInstrumentRequest) Reset() {
	*x = RemoveInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentRequest) ProtoMessage() {}

func (x *RemoveInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentRequest.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{6}
}

func (m *RemoveInstrumentRequest) GetCriteria() isRemoveInstrumentRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *RemoveInstrumentRequest) GetFiInstrumentKey() string {
	if x, ok := x.GetCriteria().(*RemoveInstrumentRequest_FiInstrumentKey); ok {
		return x.FiInstrumentKey
	}
	return ""
}

func (x *RemoveInstrumentRequest) GetFiInstrumentRef() string {
	if x, ok := x.GetCriteria().(*RemoveInstrumentRequest_FiInstrumentRef); ok {
		return x.FiInstrumentRef
	}
	return ""
}

type isRemoveInstrumentRequest_Criteria interface {
	isRemoveInstrumentRequest_Criteria()
}

type RemoveInstrumentRequest_FiInstrumentKey struct {
	// The key representing this instrument in 1080.
	FiInstrumentKey string `protobuf:"bytes,1,opt,name=fi_instrument_key,json=fiInstrumentKey,proto3,oneof"`
}

type RemoveInstrumentRequest_FiInstrumentRef struct {
	// Primary key on the external system.
	FiInstrumentRef string `protobuf:"bytes,2,opt,name=fi_instrument_ref,json=fiInstrumentRef,proto3,oneof"`
}

func (*RemoveInstrumentRequest_FiInstrumentKey) isRemoveInstrumentRequest_Criteria() {}

func (*RemoveInstrumentRequest_FiInstrumentRef) isRemoveInstrumentRequest_Criteria() {}

type RemoveInstrumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RemoveInstrumentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=fi.instrument.v1.RemoveInstrumentResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RemoveInstrumentResponse) Reset() {
	*x = RemoveInstrumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentResponse) ProtoMessage() {}

func (x *RemoveInstrumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentResponse.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentResponse) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveInstrumentResponse) GetStatus() RemoveInstrumentResponse_Status {
	if x != nil {
		return x.Status
	}
	return RemoveInstrumentResponse_STATUS_UNSPECIFIED
}

func (x *RemoveInstrumentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchInstrumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//	*SearchInstrumentRequest_FiUserKey
	Criteria isSearchInstrumentRequest_Criteria `protobuf_oneof:"criteria"`
}

func (x *SearchInstrumentRequest) Reset() {
	*x = SearchInstrumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInstrumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInstrumentRequest) ProtoMessage() {}

func (x *SearchInstrumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInstrumentRequest.ProtoReflect.Descriptor instead.
func (*SearchInstrumentRequest) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{8}
}

func (m *SearchInstrumentRequest) GetCriteria() isSearchInstrumentRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *SearchInstrumentRequest) GetFiUserKey() string {
	if x, ok := x.GetCriteria().(*SearchInstrumentRequest_FiUserKey); ok {
		return x.FiUserKey
	}
	return ""
}

type isSearchInstrumentRequest_Criteria interface {
	isSearchInstrumentRequest_Criteria()
}

type SearchInstrumentRequest_FiUserKey struct {
	// The key representing this user in 1080.
	FiUserKey string `protobuf:"bytes,1,opt,name=fi_user_key,json=fiUserKey,proto3,oneof"`
}

func (*SearchInstrumentRequest_FiUserKey) isSearchInstrumentRequest_Criteria() {}

type SearchInstrumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SearchInstrumentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=fi.instrument.v1.SearchInstrumentResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// List of instruments that matched the search criteria.
	Instruments []*Instrument `protobuf:"bytes,3,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *SearchInstrumentResponse) Reset() {
	*x = SearchInstrumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchInstrumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchInstrumentResponse) ProtoMessage() {}

func (x *SearchInstrumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchInstrumentResponse.ProtoReflect.Descriptor instead.
func (*SearchInstrumentResponse) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{9}
}

func (x *SearchInstrumentResponse) GetStatus() SearchInstrumentResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchInstrumentResponse_STATUS_UNSPECIFIED
}

func (x *SearchInstrumentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchInstrumentResponse) GetInstruments() []*Instrument {
	if x != nil {
		return x.Instruments
	}
	return nil
}

type RetrieveTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Primary key on the external system.
	FiInstrumentRef string `protobuf:"bytes,2,opt,name=fi_instrument_ref,json=fiInstrumentRef,proto3" json:"fi_instrument_ref,omitempty"`
	// Transactions that occurred after this date (inclusive).
	DateFrom *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	// Transactions that occurred before this date (exclusive).
	DateTo *timestamp.Timestamp `protobuf:"bytes,5,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
}

func (x *RetrieveTransactionRequest) Reset() {
	*x = RetrieveTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTransactionRequest) ProtoMessage() {}

func (x *RetrieveTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTransactionRequest.ProtoReflect.Descriptor instead.
func (*RetrieveTransactionRequest) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{10}
}

func (x *RetrieveTransactionRequest) GetFiInstrumentRef() string {
	if x != nil {
		return x.FiInstrumentRef
	}
	return ""
}

func (x *RetrieveTransactionRequest) GetDateFrom() *timestamp.Timestamp {
	if x != nil {
		return x.DateFrom
	}
	return nil
}

func (x *RetrieveTransactionRequest) GetDateTo() *timestamp.Timestamp {
	if x != nil {
		return x.DateTo
	}
	return nil
}

type RetrieveTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RetrieveTransactionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=fi.instrument.v1.RetrieveTransactionResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// List of instruments that matched the search criteria.
	Transactions []*Transaction `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *RetrieveTransactionResponse) Reset() {
	*x = RetrieveTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fi_instrument_v1_instrument_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveTransactionResponse) ProtoMessage() {}

func (x *RetrieveTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fi_instrument_v1_instrument_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveTransactionResponse.ProtoReflect.Descriptor instead.
func (*RetrieveTransactionResponse) Descriptor() ([]byte, []int) {
	return file_fi_instrument_v1_instrument_proto_rawDescGZIP(), []int{11}
}

func (x *RetrieveTransactionResponse) GetStatus() RetrieveTransactionResponse_Status {
	if x != nil {
		return x.Status
	}
	return RetrieveTransactionResponse_STATUS_UNSPECIFIED
}

func (x *RetrieveTransactionResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *RetrieveTransactionResponse) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_fi_instrument_v1_instrument_proto protoreflect.FileDescriptor

var file_fi_instrument_v1_instrument_proto_rawDesc = []byte{
	0x0a, 0x21, 0x66, 0x69, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x02, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x55, 0x73, 0x65, 0x72, 0x4b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66,
	0x69, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x57,
	0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x66, 0x6f, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x46, 0x6f, 0x75, 0x72, 0x12, 0x50, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x13, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb5, 0x02, 0x0a,
	0x1a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x66, 0x69,
	0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x10, 0x03, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x22, 0xe0, 0x03, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x69, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x12, 0x57, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x46, 0x6f, 0x75, 0x72, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3c, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22, 0x81, 0x01,
	0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x42, 0x0a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x22, 0xeb, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x22,
	0x47, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x66, 0x69, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x42, 0x0a, 0x0a, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x95, 0x02, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x66, 0x69, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x69, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x37, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x33, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x1b, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x66, 0x69, 0x2e, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x41, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x67, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x42, 0x56, 0x0a, 0x1e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x74, 0x65, 0x6e, 0x38, 0x30, 0x2e, 0x66, 0x69, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1b,
	0x74, 0x65, 0x6e, 0x38, 0x30, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x54, 0x45,
	0x4e, 0x38, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fi_instrument_v1_instrument_proto_rawDescOnce sync.Once
	file_fi_instrument_v1_instrument_proto_rawDescData = file_fi_instrument_v1_instrument_proto_rawDesc
)

func file_fi_instrument_v1_instrument_proto_rawDescGZIP() []byte {
	file_fi_instrument_v1_instrument_proto_rawDescOnce.Do(func() {
		file_fi_instrument_v1_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_fi_instrument_v1_instrument_proto_rawDescData)
	})
	return file_fi_instrument_v1_instrument_proto_rawDescData
}

var file_fi_instrument_v1_instrument_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_fi_instrument_v1_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_fi_instrument_v1_instrument_proto_goTypes = []interface{}{
	(RegisterInstrumentResponse_Status)(0),  // 0: fi.instrument.v1.RegisterInstrumentResponse.Status
	(GetInstrumentResponse_Status)(0),       // 1: fi.instrument.v1.GetInstrumentResponse.Status
	(RemoveInstrumentResponse_Status)(0),    // 2: fi.instrument.v1.RemoveInstrumentResponse.Status
	(SearchInstrumentResponse_Status)(0),    // 3: fi.instrument.v1.SearchInstrumentResponse.Status
	(RetrieveTransactionResponse_Status)(0), // 4: fi.instrument.v1.RetrieveTransactionResponse.Status
	(*RegisterInstrumentRequest)(nil),       // 5: fi.instrument.v1.RegisterInstrumentRequest
	(*Transaction)(nil),                     // 6: fi.instrument.v1.Transaction
	(*RegisterInstrumentResponse)(nil),      // 7: fi.instrument.v1.RegisterInstrumentResponse
	(*GetInstrumentRequest)(nil),            // 8: fi.instrument.v1.GetInstrumentRequest
	(*Instrument)(nil),                      // 9: fi.instrument.v1.Instrument
	(*GetInstrumentResponse)(nil),           // 10: fi.instrument.v1.GetInstrumentResponse
	(*RemoveInstrumentRequest)(nil),         // 11: fi.instrument.v1.RemoveInstrumentRequest
	(*RemoveInstrumentResponse)(nil),        // 12: fi.instrument.v1.RemoveInstrumentResponse
	(*SearchInstrumentRequest)(nil),         // 13: fi.instrument.v1.SearchInstrumentRequest
	(*SearchInstrumentResponse)(nil),        // 14: fi.instrument.v1.SearchInstrumentResponse
	(*RetrieveTransactionRequest)(nil),      // 15: fi.instrument.v1.RetrieveTransactionRequest
	(*RetrieveTransactionResponse)(nil),     // 16: fi.instrument.v1.RetrieveTransactionResponse
	(instrumenttypev1.InstrumentType)(0),    // 17: common.enums.instrumenttype.v1.InstrumentType
	(currencyv1.Currency)(0),                // 18: common.enums.currency.v1.Currency
	(*timestamp.Timestamp)(nil),             // 19: google.protobuf.Timestamp
	(*v1.Amount)(nil),                       // 20: common.v1.Amount
	(*v1.Error)(nil),                        // 21: common.v1.Error
}
var file_fi_instrument_v1_instrument_proto_depIdxs = []int32{
	17, // 0: fi.instrument.v1.RegisterInstrumentRequest.instrument_type:type_name -> common.enums.instrumenttype.v1.InstrumentType
	18, // 1: fi.instrument.v1.RegisterInstrumentRequest.currency:type_name -> common.enums.currency.v1.Currency
	6,  // 2: fi.instrument.v1.RegisterInstrumentRequest.settled_transactions:type_name -> fi.instrument.v1.Transaction
	19, // 3: fi.instrument.v1.Transaction.created:type_name -> google.protobuf.Timestamp
	20, // 4: fi.instrument.v1.Transaction.amount:type_name -> common.v1.Amount
	0,  // 5: fi.instrument.v1.RegisterInstrumentResponse.status:type_name -> fi.instrument.v1.RegisterInstrumentResponse.Status
	21, // 6: fi.instrument.v1.RegisterInstrumentResponse.error:type_name -> common.v1.Error
	19, // 7: fi.instrument.v1.Instrument.created:type_name -> google.protobuf.Timestamp
	19, // 8: fi.instrument.v1.Instrument.updated:type_name -> google.protobuf.Timestamp
	17, // 9: fi.instrument.v1.Instrument.instrument_type:type_name -> common.enums.instrumenttype.v1.InstrumentType
	18, // 10: fi.instrument.v1.Instrument.currency:type_name -> common.enums.currency.v1.Currency
	1,  // 11: fi.instrument.v1.GetInstrumentResponse.status:type_name -> fi.instrument.v1.GetInstrumentResponse.Status
	21, // 12: fi.instrument.v1.GetInstrumentResponse.error:type_name -> common.v1.Error
	9,  // 13: fi.instrument.v1.GetInstrumentResponse.instrument:type_name -> fi.instrument.v1.Instrument
	2,  // 14: fi.instrument.v1.RemoveInstrumentResponse.status:type_name -> fi.instrument.v1.RemoveInstrumentResponse.Status
	21, // 15: fi.instrument.v1.RemoveInstrumentResponse.error:type_name -> common.v1.Error
	3,  // 16: fi.instrument.v1.SearchInstrumentResponse.status:type_name -> fi.instrument.v1.SearchInstrumentResponse.Status
	21, // 17: fi.instrument.v1.SearchInstrumentResponse.error:type_name -> common.v1.Error
	9,  // 18: fi.instrument.v1.SearchInstrumentResponse.instruments:type_name -> fi.instrument.v1.Instrument
	19, // 19: fi.instrument.v1.RetrieveTransactionRequest.date_from:type_name -> google.protobuf.Timestamp
	19, // 20: fi.instrument.v1.RetrieveTransactionRequest.date_to:type_name -> google.protobuf.Timestamp
	4,  // 21: fi.instrument.v1.RetrieveTransactionResponse.status:type_name -> fi.instrument.v1.RetrieveTransactionResponse.Status
	21, // 22: fi.instrument.v1.RetrieveTransactionResponse.error:type_name -> common.v1.Error
	6,  // 23: fi.instrument.v1.RetrieveTransactionResponse.transactions:type_name -> fi.instrument.v1.Transaction
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_fi_instrument_v1_instrument_proto_init() }
func file_fi_instrument_v1_instrument_proto_init() {
	if File_fi_instrument_v1_instrument_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fi_instrument_v1_instrument_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterInstrumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Instrument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInstrumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInstrumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchInstrumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fi_instrument_v1_instrument_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_fi_instrument_v1_instrument_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GetInstrumentRequest_FiInstrumentKey)(nil),
		(*GetInstrumentRequest_FiInstrumentRef)(nil),
	}
	file_fi_instrument_v1_instrument_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*RemoveInstrumentRequest_FiInstrumentKey)(nil),
		(*RemoveInstrumentRequest_FiInstrumentRef)(nil),
	}
	file_fi_instrument_v1_instrument_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*SearchInstrumentRequest_FiUserKey)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fi_instrument_v1_instrument_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fi_instrument_v1_instrument_proto_goTypes,
		DependencyIndexes: file_fi_instrument_v1_instrument_proto_depIdxs,
		EnumInfos:         file_fi_instrument_v1_instrument_proto_enumTypes,
		MessageInfos:      file_fi_instrument_v1_instrument_proto_msgTypes,
	}.Build()
	File_fi_instrument_v1_instrument_proto = out.File
	file_fi_instrument_v1_instrument_proto_rawDesc = nil
	file_fi_instrument_v1_instrument_proto_goTypes = nil
	file_fi_instrument_v1_instrument_proto_depIdxs = nil
}
