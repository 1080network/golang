// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.30.2
// source: mica/serviceprovider/service/v1/service_provider_from_mica_wip_service.proto

package servicev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	commonv1 "github.com/1080network/golang/fullsdk/proto/mica/commonv1"
	instrumentv1 "github.com/1080network/golang/fullsdk/proto/mica/serviceprovider/instrumentv1"
	valuev1 "github.com/1080network/golang/fullsdk/proto/mica/serviceprovider/valuev1"
	v1 "github.com/1080network/golang/fullsdk/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApproveChargebackResponse_Status int32

const (
	ApproveChargebackResponse_STATUS_UNSPECIFIED ApproveChargebackResponse_Status = 0
	// An approval for the full amount
	ApproveChargebackResponse_STATUS_FULL_APPROVAL ApproveChargebackResponse_Status = 1
	// The chargeback was not approved.
	ApproveChargebackResponse_STATUS_NOT_APPROVED ApproveChargebackResponse_Status = 2
	// An error occurred when processing the request.
	ApproveChargebackResponse_STATUS_ERROR ApproveChargebackResponse_Status = 3
)

// Enum value maps for ApproveChargebackResponse_Status.
var (
	ApproveChargebackResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_FULL_APPROVAL",
		2: "STATUS_NOT_APPROVED",
		3: "STATUS_ERROR",
	}
	ApproveChargebackResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":   0,
		"STATUS_FULL_APPROVAL": 1,
		"STATUS_NOT_APPROVED":  2,
		"STATUS_ERROR":         3,
	}
)

func (x ApproveChargebackResponse_Status) Enum() *ApproveChargebackResponse_Status {
	p := new(ApproveChargebackResponse_Status)
	*p = x
	return p
}

func (x ApproveChargebackResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApproveChargebackResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_enumTypes[0].Descriptor()
}

func (ApproveChargebackResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_enumTypes[0]
}

func (x ApproveChargebackResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApproveChargebackResponse_Status.Descriptor instead.
func (ApproveChargebackResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescGZIP(), []int{1, 0}
}

type ApproveChargebackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Mica generated key for this instrument.
	ServiceProviderInstrumentKey string `protobuf:"bytes,2,opt,name=service_provider_instrument_key,json=serviceProviderInstrumentKey,proto3" json:"service_provider_instrument_key,omitempty"`
	// Service Provider's primary key for their instrument.
	InstrumentExternalReference *instrumentv1.InstrumentExternalReference `protobuf:"bytes,22,opt,name=instrument_external_reference,json=instrumentExternalReference,proto3" json:"instrument_external_reference,omitempty"`
	// The currency
	Currency *commonv1.Currency `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	// Amount expressed as: ([0-9]*[.])?[0-9]+
	RequestedAmount string `protobuf:"bytes,15,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	// The original transaction which is being charged back.
	OriginalTransactionIdentifier *v1.TransactionIdentifier `protobuf:"bytes,19,opt,name=original_transaction_identifier,json=originalTransactionIdentifier,proto3" json:"original_transaction_identifier,omitempty"`
}

func (x *ApproveChargebackRequest) Reset() {
	*x = ApproveChargebackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveChargebackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChargebackRequest) ProtoMessage() {}

func (x *ApproveChargebackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChargebackRequest.ProtoReflect.Descriptor instead.
func (*ApproveChargebackRequest) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescGZIP(), []int{0}
}

func (x *ApproveChargebackRequest) GetServiceProviderInstrumentKey() string {
	if x != nil {
		return x.ServiceProviderInstrumentKey
	}
	return ""
}

func (x *ApproveChargebackRequest) GetInstrumentExternalReference() *instrumentv1.InstrumentExternalReference {
	if x != nil {
		return x.InstrumentExternalReference
	}
	return nil
}

func (x *ApproveChargebackRequest) GetCurrency() *commonv1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *ApproveChargebackRequest) GetRequestedAmount() string {
	if x != nil {
		return x.RequestedAmount
	}
	return ""
}

func (x *ApproveChargebackRequest) GetOriginalTransactionIdentifier() *v1.TransactionIdentifier {
	if x != nil {
		return x.OriginalTransactionIdentifier
	}
	return nil
}

type ApproveChargebackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status               ApproveChargebackResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.serviceprovider.service.v1.ApproveChargebackResponse_Status" json:"status,omitempty"`
	Error                *v1.Error                        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ApprovalOperationRef string                           `protobuf:"bytes,3,opt,name=approval_operation_ref,json=approvalOperationRef,proto3" json:"approval_operation_ref,omitempty"`
	Message              string                           `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ApproveChargebackResponse) Reset() {
	*x = ApproveChargebackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveChargebackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveChargebackResponse) ProtoMessage() {}

func (x *ApproveChargebackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveChargebackResponse.ProtoReflect.Descriptor instead.
func (*ApproveChargebackResponse) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescGZIP(), []int{1}
}

func (x *ApproveChargebackResponse) GetStatus() ApproveChargebackResponse_Status {
	if x != nil {
		return x.Status
	}
	return ApproveChargebackResponse_STATUS_UNSPECIFIED
}

func (x *ApproveChargebackResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ApproveChargebackResponse) GetApprovalOperationRef() string {
	if x != nil {
		return x.ApprovalOperationRef
	}
	return ""
}

func (x *ApproveChargebackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto protoreflect.FileDescriptor

var file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x69, 0x63, 0x61, 0x5f, 0x77, 0x69, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1d, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33,
	0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x26, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd0, 0x03, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e,
	0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x32,
	0x52, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x8d,
	0x01, 0x0a, 0x1d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x1b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x73, 0x0a, 0x1f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x1d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0xe9, 0x02, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x3d, 0x0a, 0x16, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x14, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x65, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03,
	0x32, 0xad, 0x02, 0x0a, 0x21, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x57, 0x49, 0x50, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x39, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x73, 0x0a, 0x22, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x26, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x57,
	0x49, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1e,
	0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02,
	0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescOnce sync.Once
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescData = file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDesc
)

func file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescGZIP() []byte {
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescOnce.Do(func() {
		file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescData)
	})
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDescData
}

var file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_goTypes = []interface{}{
	(ApproveChargebackResponse_Status)(0),            // 0: mica.serviceprovider.service.v1.ApproveChargebackResponse.Status
	(*ApproveChargebackRequest)(nil),                 // 1: mica.serviceprovider.service.v1.ApproveChargebackRequest
	(*ApproveChargebackResponse)(nil),                // 2: mica.serviceprovider.service.v1.ApproveChargebackResponse
	(*instrumentv1.InstrumentExternalReference)(nil), // 3: mica.serviceprovider.instrument.v1.InstrumentExternalReference
	(*commonv1.Currency)(nil),                        // 4: mica.common.v1.Currency
	(*v1.TransactionIdentifier)(nil),                 // 5: micashared.common.v1.TransactionIdentifier
	(*v1.Error)(nil),                                 // 6: micashared.common.v1.Error
	(*valuev1.ReceiveValueRequest)(nil),              // 7: mica.serviceprovider.value.v1.ReceiveValueRequest
	(*valuev1.ReceiveValueResponse)(nil),             // 8: mica.serviceprovider.value.v1.ReceiveValueResponse
}
var file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_depIdxs = []int32{
	3, // 0: mica.serviceprovider.service.v1.ApproveChargebackRequest.instrument_external_reference:type_name -> mica.serviceprovider.instrument.v1.InstrumentExternalReference
	4, // 1: mica.serviceprovider.service.v1.ApproveChargebackRequest.currency:type_name -> mica.common.v1.Currency
	5, // 2: mica.serviceprovider.service.v1.ApproveChargebackRequest.original_transaction_identifier:type_name -> micashared.common.v1.TransactionIdentifier
	0, // 3: mica.serviceprovider.service.v1.ApproveChargebackResponse.status:type_name -> mica.serviceprovider.service.v1.ApproveChargebackResponse.Status
	6, // 4: mica.serviceprovider.service.v1.ApproveChargebackResponse.error:type_name -> micashared.common.v1.Error
	1, // 5: mica.serviceprovider.service.v1.ServiceProviderFromMicaWIPService.ApproveChargeback:input_type -> mica.serviceprovider.service.v1.ApproveChargebackRequest
	7, // 6: mica.serviceprovider.service.v1.ServiceProviderFromMicaWIPService.ReceiveValue:input_type -> mica.serviceprovider.value.v1.ReceiveValueRequest
	2, // 7: mica.serviceprovider.service.v1.ServiceProviderFromMicaWIPService.ApproveChargeback:output_type -> mica.serviceprovider.service.v1.ApproveChargebackResponse
	8, // 8: mica.serviceprovider.service.v1.ServiceProviderFromMicaWIPService.ReceiveValue:output_type -> mica.serviceprovider.value.v1.ReceiveValueResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_init() }
func file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_init() {
	if File_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveChargebackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveChargebackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_goTypes,
		DependencyIndexes: file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_depIdxs,
		EnumInfos:         file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_enumTypes,
		MessageInfos:      file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_msgTypes,
	}.Build()
	File_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto = out.File
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_rawDesc = nil
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_goTypes = nil
	file_mica_serviceprovider_service_v1_service_provider_from_mica_wip_service_proto_depIdxs = nil
}
