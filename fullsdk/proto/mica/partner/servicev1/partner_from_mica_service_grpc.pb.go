// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v6.30.2
// source: mica/partner/service/v1/partner_from_mica_service.proto

package servicev1

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const ()

// PartnerFromMicaServiceClient is the client API for PartnerFromMicaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PartnerFromMicaServiceClient interface {
}

type partnerFromMicaServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartnerFromMicaServiceClient(cc grpc.ClientConnInterface) PartnerFromMicaServiceClient {
	return &partnerFromMicaServiceClient{cc}
}

// PartnerFromMicaServiceServer is the server API for PartnerFromMicaService service.
// All implementations must embed UnimplementedPartnerFromMicaServiceServer
// for forward compatibility
type PartnerFromMicaServiceServer interface {
	mustEmbedUnimplementedPartnerFromMicaServiceServer()
}

// UnimplementedPartnerFromMicaServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPartnerFromMicaServiceServer struct {
}

func (UnimplementedPartnerFromMicaServiceServer) mustEmbedUnimplementedPartnerFromMicaServiceServer() {
}

// UnsafePartnerFromMicaServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PartnerFromMicaServiceServer will
// result in compilation errors.
type UnsafePartnerFromMicaServiceServer interface {
	mustEmbedUnimplementedPartnerFromMicaServiceServer()
}

func RegisterPartnerFromMicaServiceServer(s grpc.ServiceRegistrar, srv PartnerFromMicaServiceServer) {
	s.RegisterService(&PartnerFromMicaService_ServiceDesc, srv)
}

// PartnerFromMicaService_ServiceDesc is the grpc.ServiceDesc for PartnerFromMicaService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PartnerFromMicaService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "mica.partner.service.v1.PartnerFromMicaService",
	HandlerType: (*PartnerFromMicaServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "github.com/1080network/golang/fullsdk/proto/mica/partner/service/v1/partner_from_mica_service.proto",
}
