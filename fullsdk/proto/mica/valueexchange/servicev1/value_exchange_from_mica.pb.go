// Copyright (c) 2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: mica/valueexchange/service/v1/value_exchange_from_mica.proto

package servicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pingv1 "github.com/1080network/golang/fullsdk/proto/micashared/common/pingv1"
	v1 "github.com/1080network/golang/fullsdk/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BalanceUpdatedResponse_Status int32

const (
	BalanceUpdatedResponse_STATUS_UNSPECIFIED BalanceUpdatedResponse_Status = 0
	BalanceUpdatedResponse_STATUS_SUCCESS     BalanceUpdatedResponse_Status = 1
	BalanceUpdatedResponse_STATUS_NOT_FOUND   BalanceUpdatedResponse_Status = 2
	BalanceUpdatedResponse_STATUS_ERROR       BalanceUpdatedResponse_Status = 3
)

// Enum value maps for BalanceUpdatedResponse_Status.
var (
	BalanceUpdatedResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_NOT_FOUND",
		3: "STATUS_ERROR",
	}
	BalanceUpdatedResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_NOT_FOUND":   2,
		"STATUS_ERROR":       3,
	}
)

func (x BalanceUpdatedResponse_Status) Enum() *BalanceUpdatedResponse_Status {
	p := new(BalanceUpdatedResponse_Status)
	*p = x
	return p
}

func (x BalanceUpdatedResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BalanceUpdatedResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_enumTypes[0].Descriptor()
}

func (BalanceUpdatedResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_enumTypes[0]
}

func (x BalanceUpdatedResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BalanceUpdatedResponse_Status.Descriptor instead.
func (BalanceUpdatedResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescGZIP(), []int{1, 0}
}

type BalanceUpdatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// this is the external account identifier used by the value provider
	AccountRef string `protobuf:"bytes,1,opt,name=account_ref,json=accountRef,proto3" json:"account_ref,omitempty"`
	// a unique account identifier
	AccountKey string `protobuf:"bytes,2,opt,name=account_key,json=accountKey,proto3" json:"account_key,omitempty"`
	// this is a signed numeric value indicating the change to the positive file balance.
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	// the time when the change was made
	GlobalTransactionTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=global_transaction_time,json=globalTransactionTime,proto3" json:"global_transaction_time,omitempty"`
	// a unique id the value provider can use to track this change
	GlobalTransactionId string `protobuf:"bytes,5,opt,name=global_transaction_id,json=globalTransactionId,proto3" json:"global_transaction_id,omitempty"`
}

func (x *BalanceUpdatedRequest) Reset() {
	*x = BalanceUpdatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceUpdatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceUpdatedRequest) ProtoMessage() {}

func (x *BalanceUpdatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceUpdatedRequest.ProtoReflect.Descriptor instead.
func (*BalanceUpdatedRequest) Descriptor() ([]byte, []int) {
	return file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescGZIP(), []int{0}
}

func (x *BalanceUpdatedRequest) GetAccountRef() string {
	if x != nil {
		return x.AccountRef
	}
	return ""
}

func (x *BalanceUpdatedRequest) GetAccountKey() string {
	if x != nil {
		return x.AccountKey
	}
	return ""
}

func (x *BalanceUpdatedRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *BalanceUpdatedRequest) GetGlobalTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GlobalTransactionTime
	}
	return nil
}

func (x *BalanceUpdatedRequest) GetGlobalTransactionId() string {
	if x != nil {
		return x.GlobalTransactionId
	}
	return ""
}

type BalanceUpdatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status BalanceUpdatedResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.valueexchange.service.v1.BalanceUpdatedResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BalanceUpdatedResponse) Reset() {
	*x = BalanceUpdatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceUpdatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceUpdatedResponse) ProtoMessage() {}

func (x *BalanceUpdatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceUpdatedResponse.ProtoReflect.Descriptor instead.
func (*BalanceUpdatedResponse) Descriptor() ([]byte, []int) {
	return file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescGZIP(), []int{1}
}

func (x *BalanceUpdatedResponse) GetStatus() BalanceUpdatedResponse_Status {
	if x != nil {
		return x.Status
	}
	return BalanceUpdatedResponse_STATUS_UNSPECIFIED
}

func (x *BalanceUpdatedResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_mica_valueexchange_service_v1_value_exchange_from_mica_proto protoreflect.FileDescriptor

var file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x52, 0x0a, 0x17, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x03, 0x32, 0x81, 0x02, 0x0a, 0x1c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x68, 0x0a, 0x20, 0x69, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x1f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x6f, 0x4d, 0x69, 0x63,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1c, 0x6d,
	0x69, 0x63, 0x61, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49,
	0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescOnce sync.Once
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescData = file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDesc
)

func file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescGZIP() []byte {
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescOnce.Do(func() {
		file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescData)
	})
	return file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDescData
}

var file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_goTypes = []interface{}{
	(BalanceUpdatedResponse_Status)(0), // 0: mica.valueexchange.service.v1.BalanceUpdatedResponse.Status
	(*BalanceUpdatedRequest)(nil),      // 1: mica.valueexchange.service.v1.BalanceUpdatedRequest
	(*BalanceUpdatedResponse)(nil),     // 2: mica.valueexchange.service.v1.BalanceUpdatedResponse
	(*timestamppb.Timestamp)(nil),      // 3: google.protobuf.Timestamp
	(*v1.Error)(nil),                   // 4: micashared.common.v1.Error
	(*pingv1.PingRequest)(nil),         // 5: micashared.common.ping.v1.PingRequest
	(*pingv1.PingResponse)(nil),        // 6: micashared.common.ping.v1.PingResponse
}
var file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_depIdxs = []int32{
	3, // 0: mica.valueexchange.service.v1.BalanceUpdatedRequest.global_transaction_time:type_name -> google.protobuf.Timestamp
	0, // 1: mica.valueexchange.service.v1.BalanceUpdatedResponse.status:type_name -> mica.valueexchange.service.v1.BalanceUpdatedResponse.Status
	4, // 2: mica.valueexchange.service.v1.BalanceUpdatedResponse.error:type_name -> micashared.common.v1.Error
	1, // 3: mica.valueexchange.service.v1.ValueProviderFromMicaService.NotifyBalanceUpdated:input_type -> mica.valueexchange.service.v1.BalanceUpdatedRequest
	5, // 4: mica.valueexchange.service.v1.ValueProviderFromMicaService.Ping:input_type -> micashared.common.ping.v1.PingRequest
	2, // 5: mica.valueexchange.service.v1.ValueProviderFromMicaService.NotifyBalanceUpdated:output_type -> mica.valueexchange.service.v1.BalanceUpdatedResponse
	6, // 6: mica.valueexchange.service.v1.ValueProviderFromMicaService.Ping:output_type -> micashared.common.ping.v1.PingResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_init() }
func file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_init() {
	if File_mica_valueexchange_service_v1_value_exchange_from_mica_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceUpdatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceUpdatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_goTypes,
		DependencyIndexes: file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_depIdxs,
		EnumInfos:         file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_enumTypes,
		MessageInfos:      file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_msgTypes,
	}.Build()
	File_mica_valueexchange_service_v1_value_exchange_from_mica_proto = out.File
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_rawDesc = nil
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_goTypes = nil
	file_mica_valueexchange_service_v1_value_exchange_from_mica_proto_depIdxs = nil
}
