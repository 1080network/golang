// Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.24.3
// source: mica/serviceprovider/discount/v1/discount.proto

package discountv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	discountv1 "github.com/1080network/golang/serviceprovider/proto/mica/discount/discountv1"
	currencyv1 "github.com/1080network/golang/serviceprovider/proto/micashared/common/enums/currencyv1"
	discounttypev1 "github.com/1080network/golang/serviceprovider/proto/micashared/common/enums/discounttypev1"
	v1 "github.com/1080network/golang/serviceprovider/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchUserDiscountResponse_Status int32

const (
	SearchUserDiscountResponse_STATUS_UNSPECIFIED SearchUserDiscountResponse_Status = 0
	SearchUserDiscountResponse_STATUS_SUCCESS     SearchUserDiscountResponse_Status = 1
	SearchUserDiscountResponse_STATUS_ERROR       SearchUserDiscountResponse_Status = 2
)

// Enum value maps for SearchUserDiscountResponse_Status.
var (
	SearchUserDiscountResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchUserDiscountResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchUserDiscountResponse_Status) Enum() *SearchUserDiscountResponse_Status {
	p := new(SearchUserDiscountResponse_Status)
	*p = x
	return p
}

func (x SearchUserDiscountResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchUserDiscountResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_serviceprovider_discount_v1_discount_proto_enumTypes[0].Descriptor()
}

func (SearchUserDiscountResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_serviceprovider_discount_v1_discount_proto_enumTypes[0]
}

func (x SearchUserDiscountResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchUserDiscountResponse_Status.Descriptor instead.
func (SearchUserDiscountResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_serviceprovider_discount_v1_discount_proto_rawDescGZIP(), []int{2, 0}
}

type ServiceProviderUserDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountKey string `protobuf:"bytes,1,opt,name=discount_key,json=discountKey,proto3" json:"discount_key,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Headline string `protobuf:"bytes,11,opt,name=headline,proto3" json:"headline,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	// human readable description for a given discount that can be shown to the end user
	ReceiptDescription string                      `protobuf:"bytes,2,opt,name=receipt_description,json=receiptDescription,proto3" json:"receipt_description,omitempty"`
	Status             discountv1.DiscountStatus   `protobuf:"varint,3,opt,name=status,proto3,enum=mica.discount.discount.v1.DiscountStatus" json:"status,omitempty"`
	Type               discounttypev1.DiscountType `protobuf:"varint,4,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	ValidFrom          *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	ValidTo            *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	Currency           currencyv1.Currency         `protobuf:"varint,7,opt,name=currency,proto3,enum=micashared.common.enums.currency.v1.Currency" json:"currency,omitempty"`
	// Types that are assignable to DiscountAmount:
	//
	//	*ServiceProviderUserDiscount_MonetaryAmount
	//	*ServiceProviderUserDiscount_PercentageAmount
	DiscountAmount isServiceProviderUserDiscount_DiscountAmount `protobuf_oneof:"discount_amount"`
	// address to the image for this discount definition (note that this image is expected to be square)
	ThumbnailUrl string `protobuf:"bytes,10,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
}

func (x *ServiceProviderUserDiscount) Reset() {
	*x = ServiceProviderUserDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProviderUserDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProviderUserDiscount) ProtoMessage() {}

func (x *ServiceProviderUserDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProviderUserDiscount.ProtoReflect.Descriptor instead.
func (*ServiceProviderUserDiscount) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_discount_v1_discount_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceProviderUserDiscount) GetDiscountKey() string {
	if x != nil {
		return x.DiscountKey
	}
	return ""
}

func (x *ServiceProviderUserDiscount) GetHeadline() string {
	if x != nil {
		return x.Headline
	}
	return ""
}

func (x *ServiceProviderUserDiscount) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ServiceProviderUserDiscount) GetReceiptDescription() string {
	if x != nil {
		return x.ReceiptDescription
	}
	return ""
}

func (x *ServiceProviderUserDiscount) GetStatus() discountv1.DiscountStatus {
	if x != nil {
		return x.Status
	}
	return discountv1.DiscountStatus(0)
}

func (x *ServiceProviderUserDiscount) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *ServiceProviderUserDiscount) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *ServiceProviderUserDiscount) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *ServiceProviderUserDiscount) GetCurrency() currencyv1.Currency {
	if x != nil {
		return x.Currency
	}
	return currencyv1.Currency(0)
}

func (m *ServiceProviderUserDiscount) GetDiscountAmount() isServiceProviderUserDiscount_DiscountAmount {
	if m != nil {
		return m.DiscountAmount
	}
	return nil
}

func (x *ServiceProviderUserDiscount) GetMonetaryAmount() *discountv1.MonetaryAmount {
	if x, ok := x.GetDiscountAmount().(*ServiceProviderUserDiscount_MonetaryAmount); ok {
		return x.MonetaryAmount
	}
	return nil
}

func (x *ServiceProviderUserDiscount) GetPercentageAmount() *discountv1.PercentageAmount {
	if x, ok := x.GetDiscountAmount().(*ServiceProviderUserDiscount_PercentageAmount); ok {
		return x.PercentageAmount
	}
	return nil
}

func (x *ServiceProviderUserDiscount) GetThumbnailUrl() string {
	if x != nil {
		return x.ThumbnailUrl
	}
	return ""
}

type isServiceProviderUserDiscount_DiscountAmount interface {
	isServiceProviderUserDiscount_DiscountAmount()
}

type ServiceProviderUserDiscount_MonetaryAmount struct {
	MonetaryAmount *discountv1.MonetaryAmount `protobuf:"bytes,8,opt,name=monetary_amount,json=monetaryAmount,proto3,oneof"`
}

type ServiceProviderUserDiscount_PercentageAmount struct {
	PercentageAmount *discountv1.PercentageAmount `protobuf:"bytes,9,opt,name=percentage_amount,json=percentageAmount,proto3,oneof"`
}

func (*ServiceProviderUserDiscount_MonetaryAmount) isServiceProviderUserDiscount_DiscountAmount() {}

func (*ServiceProviderUserDiscount_PercentageAmount) isServiceProviderUserDiscount_DiscountAmount() {}

// This operation will only filter discounts that are valid and ignores any that aren't
type SearchUserDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Criteria:
	//
	//	*SearchUserDiscountRequest_ServiceProviderUserKey
	//	*SearchUserDiscountRequest_ServiceProviderUserRef
	Criteria   isSearchUserDiscountRequest_Criteria `protobuf_oneof:"criteria"`
	Type       discounttypev1.DiscountType          `protobuf:"varint,3,opt,name=type,proto3,enum=micashared.common.enums.discounttype.v1.DiscountType" json:"type,omitempty"`
	Pagination *v1.Pagination                       `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchUserDiscountRequest) Reset() {
	*x = SearchUserDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserDiscountRequest) ProtoMessage() {}

func (x *SearchUserDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserDiscountRequest.ProtoReflect.Descriptor instead.
func (*SearchUserDiscountRequest) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_discount_v1_discount_proto_rawDescGZIP(), []int{1}
}

func (m *SearchUserDiscountRequest) GetCriteria() isSearchUserDiscountRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (x *SearchUserDiscountRequest) GetServiceProviderUserKey() string {
	if x, ok := x.GetCriteria().(*SearchUserDiscountRequest_ServiceProviderUserKey); ok {
		return x.ServiceProviderUserKey
	}
	return ""
}

func (x *SearchUserDiscountRequest) GetServiceProviderUserRef() string {
	if x, ok := x.GetCriteria().(*SearchUserDiscountRequest_ServiceProviderUserRef); ok {
		return x.ServiceProviderUserRef
	}
	return ""
}

func (x *SearchUserDiscountRequest) GetType() discounttypev1.DiscountType {
	if x != nil {
		return x.Type
	}
	return discounttypev1.DiscountType(0)
}

func (x *SearchUserDiscountRequest) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isSearchUserDiscountRequest_Criteria interface {
	isSearchUserDiscountRequest_Criteria()
}

type SearchUserDiscountRequest_ServiceProviderUserKey struct {
	// The key representing this user in Mica.
	ServiceProviderUserKey string `protobuf:"bytes,1,opt,name=service_provider_user_key,json=serviceProviderUserKey,proto3,oneof"`
}

type SearchUserDiscountRequest_ServiceProviderUserRef struct {
	// Primary key on the external system.
	ServiceProviderUserRef string `protobuf:"bytes,2,opt,name=service_provider_user_ref,json=serviceProviderUserRef,proto3,oneof"`
}

func (*SearchUserDiscountRequest_ServiceProviderUserKey) isSearchUserDiscountRequest_Criteria() {}

func (*SearchUserDiscountRequest_ServiceProviderUserRef) isSearchUserDiscountRequest_Criteria() {}

type SearchUserDiscountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        SearchUserDiscountResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.serviceprovider.discount.v1.SearchUserDiscountResponse_Status" json:"status,omitempty"`
	Error         *v1.Error                         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	UserDiscounts []*ServiceProviderUserDiscount    `protobuf:"bytes,3,rep,name=user_discounts,json=userDiscounts,proto3" json:"user_discounts,omitempty"`
	Pagination    *v1.Pagination                    `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchUserDiscountResponse) Reset() {
	*x = SearchUserDiscountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserDiscountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserDiscountResponse) ProtoMessage() {}

func (x *SearchUserDiscountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserDiscountResponse.ProtoReflect.Descriptor instead.
func (*SearchUserDiscountResponse) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_discount_v1_discount_proto_rawDescGZIP(), []int{2}
}

func (x *SearchUserDiscountResponse) GetStatus() SearchUserDiscountResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchUserDiscountResponse_STATUS_UNSPECIFIED
}

func (x *SearchUserDiscountResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchUserDiscountResponse) GetUserDiscounts() []*ServiceProviderUserDiscount {
	if x != nil {
		return x.UserDiscounts
	}
	return nil
}

func (x *SearchUserDiscountResponse) GetPagination() *v1.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_mica_serviceprovider_discount_v1_discount_proto protoreflect.FileDescriptor

var file_mica_serviceprovider_discount_v1_discount_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32,
	0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3b, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x25, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9a, 0x06, 0x0a, 0x1b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e,
	0x18, 0x32, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x08, 0x68, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x08, 0x68, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xac, 0x02, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0xc8, 0x01, 0x52,
	0x12, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x00, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x41, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0xb2, 0x01, 0x04, 0x08, 0x00, 0x40, 0x01,
	0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x49, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6d, 0x69,
	0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x61, 0x72, 0x79,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x74, 0x61,
	0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x65,
	0x74, 0x61, 0x72, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x11, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9,
	0x02, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x19,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x19, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0a,
	0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0x9c, 0x03, 0x0a, 0x1a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x43, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x64, 0x0a, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x40, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42, 0x5c, 0x0a, 0x23, 0x69, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x42, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a,
	0x1f, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x76, 0x31,
	0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_serviceprovider_discount_v1_discount_proto_rawDescOnce sync.Once
	file_mica_serviceprovider_discount_v1_discount_proto_rawDescData = file_mica_serviceprovider_discount_v1_discount_proto_rawDesc
)

func file_mica_serviceprovider_discount_v1_discount_proto_rawDescGZIP() []byte {
	file_mica_serviceprovider_discount_v1_discount_proto_rawDescOnce.Do(func() {
		file_mica_serviceprovider_discount_v1_discount_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_serviceprovider_discount_v1_discount_proto_rawDescData)
	})
	return file_mica_serviceprovider_discount_v1_discount_proto_rawDescData
}

var file_mica_serviceprovider_discount_v1_discount_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mica_serviceprovider_discount_v1_discount_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mica_serviceprovider_discount_v1_discount_proto_goTypes = []interface{}{
	(SearchUserDiscountResponse_Status)(0), // 0: mica.serviceprovider.discount.v1.SearchUserDiscountResponse.Status
	(*ServiceProviderUserDiscount)(nil),    // 1: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount
	(*SearchUserDiscountRequest)(nil),      // 2: mica.serviceprovider.discount.v1.SearchUserDiscountRequest
	(*SearchUserDiscountResponse)(nil),     // 3: mica.serviceprovider.discount.v1.SearchUserDiscountResponse
	(discountv1.DiscountStatus)(0),         // 4: mica.discount.discount.v1.DiscountStatus
	(discounttypev1.DiscountType)(0),       // 5: micashared.common.enums.discounttype.v1.DiscountType
	(*timestamppb.Timestamp)(nil),          // 6: google.protobuf.Timestamp
	(currencyv1.Currency)(0),               // 7: micashared.common.enums.currency.v1.Currency
	(*discountv1.MonetaryAmount)(nil),      // 8: mica.discount.discount.v1.MonetaryAmount
	(*discountv1.PercentageAmount)(nil),    // 9: mica.discount.discount.v1.PercentageAmount
	(*v1.Pagination)(nil),                  // 10: micashared.common.v1.Pagination
	(*v1.Error)(nil),                       // 11: micashared.common.v1.Error
}
var file_mica_serviceprovider_discount_v1_discount_proto_depIdxs = []int32{
	4,  // 0: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.status:type_name -> mica.discount.discount.v1.DiscountStatus
	5,  // 1: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	6,  // 2: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.valid_from:type_name -> google.protobuf.Timestamp
	6,  // 3: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.valid_to:type_name -> google.protobuf.Timestamp
	7,  // 4: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.currency:type_name -> micashared.common.enums.currency.v1.Currency
	8,  // 5: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.monetary_amount:type_name -> mica.discount.discount.v1.MonetaryAmount
	9,  // 6: mica.serviceprovider.discount.v1.ServiceProviderUserDiscount.percentage_amount:type_name -> mica.discount.discount.v1.PercentageAmount
	5,  // 7: mica.serviceprovider.discount.v1.SearchUserDiscountRequest.type:type_name -> micashared.common.enums.discounttype.v1.DiscountType
	10, // 8: mica.serviceprovider.discount.v1.SearchUserDiscountRequest.pagination:type_name -> micashared.common.v1.Pagination
	0,  // 9: mica.serviceprovider.discount.v1.SearchUserDiscountResponse.status:type_name -> mica.serviceprovider.discount.v1.SearchUserDiscountResponse.Status
	11, // 10: mica.serviceprovider.discount.v1.SearchUserDiscountResponse.error:type_name -> micashared.common.v1.Error
	1,  // 11: mica.serviceprovider.discount.v1.SearchUserDiscountResponse.user_discounts:type_name -> mica.serviceprovider.discount.v1.ServiceProviderUserDiscount
	10, // 12: mica.serviceprovider.discount.v1.SearchUserDiscountResponse.pagination:type_name -> micashared.common.v1.Pagination
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_mica_serviceprovider_discount_v1_discount_proto_init() }
func file_mica_serviceprovider_discount_v1_discount_proto_init() {
	if File_mica_serviceprovider_discount_v1_discount_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProviderUserDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserDiscountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServiceProviderUserDiscount_MonetaryAmount)(nil),
		(*ServiceProviderUserDiscount_PercentageAmount)(nil),
	}
	file_mica_serviceprovider_discount_v1_discount_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SearchUserDiscountRequest_ServiceProviderUserKey)(nil),
		(*SearchUserDiscountRequest_ServiceProviderUserRef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_serviceprovider_discount_v1_discount_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mica_serviceprovider_discount_v1_discount_proto_goTypes,
		DependencyIndexes: file_mica_serviceprovider_discount_v1_discount_proto_depIdxs,
		EnumInfos:         file_mica_serviceprovider_discount_v1_discount_proto_enumTypes,
		MessageInfos:      file_mica_serviceprovider_discount_v1_discount_proto_msgTypes,
	}.Build()
	File_mica_serviceprovider_discount_v1_discount_proto = out.File
	file_mica_serviceprovider_discount_v1_discount_proto_rawDesc = nil
	file_mica_serviceprovider_discount_v1_discount_proto_goTypes = nil
	file_mica_serviceprovider_discount_v1_discount_proto_depIdxs = nil
}
