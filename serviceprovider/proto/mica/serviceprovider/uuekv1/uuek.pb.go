// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.30.2
// source: mica/serviceprovider/uuek/v1/uuek.proto

package uuekv1

import (
	instrumentv1 "github.com/1080network/golang/serviceprovider/proto/mica/serviceprovider/instrumentv1"
	v1 "github.com/1080network/golang/serviceprovider/proto/micashared/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProvisionServiceProviderUUEKResponse_Status int32

const (
	ProvisionServiceProviderUUEKResponse_STATUS_UNSPECIFIED            ProvisionServiceProviderUUEKResponse_Status = 0
	ProvisionServiceProviderUUEKResponse_STATUS_SUCCESS                ProvisionServiceProviderUUEKResponse_Status = 1
	ProvisionServiceProviderUUEKResponse_STATUS_ERROR                  ProvisionServiceProviderUUEKResponse_Status = 2
	ProvisionServiceProviderUUEKResponse_STATUS_INSTRUMENT_NOT_FOUND   ProvisionServiceProviderUUEKResponse_Status = 3
	ProvisionServiceProviderUUEKResponse_STATUS_INCORRECT_USE_CRITERIA ProvisionServiceProviderUUEKResponse_Status = 4
	ProvisionServiceProviderUUEKResponse_STATUS_INVALID_ARGUMENT       ProvisionServiceProviderUUEKResponse_Status = 5
)

// Enum value maps for ProvisionServiceProviderUUEKResponse_Status.
var (
	ProvisionServiceProviderUUEKResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_INSTRUMENT_NOT_FOUND",
		4: "STATUS_INCORRECT_USE_CRITERIA",
		5: "STATUS_INVALID_ARGUMENT",
	}
	ProvisionServiceProviderUUEKResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":            0,
		"STATUS_SUCCESS":                1,
		"STATUS_ERROR":                  2,
		"STATUS_INSTRUMENT_NOT_FOUND":   3,
		"STATUS_INCORRECT_USE_CRITERIA": 4,
		"STATUS_INVALID_ARGUMENT":       5,
	}
)

func (x ProvisionServiceProviderUUEKResponse_Status) Enum() *ProvisionServiceProviderUUEKResponse_Status {
	p := new(ProvisionServiceProviderUUEKResponse_Status)
	*p = x
	return p
}

func (x ProvisionServiceProviderUUEKResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvisionServiceProviderUUEKResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_serviceprovider_uuek_v1_uuek_proto_enumTypes[0].Descriptor()
}

func (ProvisionServiceProviderUUEKResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_serviceprovider_uuek_v1_uuek_proto_enumTypes[0]
}

func (x ProvisionServiceProviderUUEKResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvisionServiceProviderUUEKResponse_Status.Descriptor instead.
func (ProvisionServiceProviderUUEKResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescGZIP(), []int{1, 0}
}

// to Mica
type ProvisionServiceProviderUUEKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to InstrumentIdentifier:
	//
	//	*ProvisionServiceProviderUUEKRequest_ServiceProviderInstrumentKey
	//	*ProvisionServiceProviderUUEKRequest_InstrumentExternalReference
	InstrumentIdentifier isProvisionServiceProviderUUEKRequest_InstrumentIdentifier `protobuf_oneof:"instrument_identifier"`
	// if set the provisioned UUEK will not be valid until the specified time if not set the UUEK is valid immediately
	ValidFrom *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=valid_from,json=validFrom,proto3" json:"valid_from,omitempty"`
	// if set the provisioned UUEK will expired at the specified time, if not set it will be used until removed. This
	// should typically be set to some number of minutes or small number of hours in the future.
	ValidTo *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=valid_to,json=validTo,proto3" json:"valid_to,omitempty"`
	// a maximum transaction amount that is allowed for this UUEK in a single transaction. If the value request exceeds
	// this amount, it will declined. If not set any transaction amount is allowed.
	SpendLimit string `protobuf:"bytes,5,opt,name=spend_limit,json=spendLimit,proto3" json:"spend_limit,omitempty"`
	// the number of transactions that this UUEK can be used
	// either a positive value greater than 0 or make it unlimited
	//
	// Types that are assignable to UseCriteria:
	//
	//	*ProvisionServiceProviderUUEKRequest_NumberOfUses
	//	*ProvisionServiceProviderUUEKRequest_Unlimited
	UseCriteria isProvisionServiceProviderUUEKRequest_UseCriteria `protobuf_oneof:"use_criteria"`
}

func (x *ProvisionServiceProviderUUEKRequest) Reset() {
	*x = ProvisionServiceProviderUUEKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionServiceProviderUUEKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionServiceProviderUUEKRequest) ProtoMessage() {}

func (x *ProvisionServiceProviderUUEKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionServiceProviderUUEKRequest.ProtoReflect.Descriptor instead.
func (*ProvisionServiceProviderUUEKRequest) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescGZIP(), []int{0}
}

func (m *ProvisionServiceProviderUUEKRequest) GetInstrumentIdentifier() isProvisionServiceProviderUUEKRequest_InstrumentIdentifier {
	if m != nil {
		return m.InstrumentIdentifier
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKRequest) GetServiceProviderInstrumentKey() string {
	if x, ok := x.GetInstrumentIdentifier().(*ProvisionServiceProviderUUEKRequest_ServiceProviderInstrumentKey); ok {
		return x.ServiceProviderInstrumentKey
	}
	return ""
}

func (x *ProvisionServiceProviderUUEKRequest) GetInstrumentExternalReference() *instrumentv1.InstrumentExternalReference {
	if x, ok := x.GetInstrumentIdentifier().(*ProvisionServiceProviderUUEKRequest_InstrumentExternalReference); ok {
		return x.InstrumentExternalReference
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKRequest) GetValidFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidFrom
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKRequest) GetValidTo() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidTo
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKRequest) GetSpendLimit() string {
	if x != nil {
		return x.SpendLimit
	}
	return ""
}

func (m *ProvisionServiceProviderUUEKRequest) GetUseCriteria() isProvisionServiceProviderUUEKRequest_UseCriteria {
	if m != nil {
		return m.UseCriteria
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKRequest) GetNumberOfUses() uint32 {
	if x, ok := x.GetUseCriteria().(*ProvisionServiceProviderUUEKRequest_NumberOfUses); ok {
		return x.NumberOfUses
	}
	return 0
}

func (x *ProvisionServiceProviderUUEKRequest) GetUnlimited() bool {
	if x, ok := x.GetUseCriteria().(*ProvisionServiceProviderUUEKRequest_Unlimited); ok {
		return x.Unlimited
	}
	return false
}

type isProvisionServiceProviderUUEKRequest_InstrumentIdentifier interface {
	isProvisionServiceProviderUUEKRequest_InstrumentIdentifier()
}

type ProvisionServiceProviderUUEKRequest_ServiceProviderInstrumentKey struct {
	// The key representing this instrument in Mica.
	ServiceProviderInstrumentKey string `protobuf:"bytes,1,opt,name=service_provider_instrument_key,json=serviceProviderInstrumentKey,proto3,oneof"`
}

type ProvisionServiceProviderUUEKRequest_InstrumentExternalReference struct {
	// Primary key on the external system.
	InstrumentExternalReference *instrumentv1.InstrumentExternalReference `protobuf:"bytes,8,opt,name=instrument_external_reference,json=instrumentExternalReference,proto3,oneof"`
}

func (*ProvisionServiceProviderUUEKRequest_ServiceProviderInstrumentKey) isProvisionServiceProviderUUEKRequest_InstrumentIdentifier() {
}

func (*ProvisionServiceProviderUUEKRequest_InstrumentExternalReference) isProvisionServiceProviderUUEKRequest_InstrumentIdentifier() {
}

type isProvisionServiceProviderUUEKRequest_UseCriteria interface {
	isProvisionServiceProviderUUEKRequest_UseCriteria()
}

type ProvisionServiceProviderUUEKRequest_NumberOfUses struct {
	// a maximum number of times this UUEK can be used. It's recommended that this be set to 1 in most cases.
	NumberOfUses uint32 `protobuf:"varint,6,opt,name=number_of_uses,json=numberOfUses,proto3,oneof"`
}

type ProvisionServiceProviderUUEKRequest_Unlimited struct {
	// this UUEK can be used an unlimited number of times and should be used with caution.
	Unlimited bool `protobuf:"varint,7,opt,name=unlimited,proto3,oneof"`
}

func (*ProvisionServiceProviderUUEKRequest_NumberOfUses) isProvisionServiceProviderUUEKRequest_UseCriteria() {
}

func (*ProvisionServiceProviderUUEKRequest_Unlimited) isProvisionServiceProviderUUEKRequest_UseCriteria() {
}

type ProvisionServiceProviderUUEKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ProvisionServiceProviderUUEKResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// A UUEK that can be used at all partners.
	ServiceProviderUuek string `protobuf:"bytes,3,opt,name=service_provider_uuek,json=serviceProviderUuek,proto3" json:"service_provider_uuek,omitempty"`
}

func (x *ProvisionServiceProviderUUEKResponse) Reset() {
	*x = ProvisionServiceProviderUUEKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionServiceProviderUUEKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionServiceProviderUUEKResponse) ProtoMessage() {}

func (x *ProvisionServiceProviderUUEKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionServiceProviderUUEKResponse.ProtoReflect.Descriptor instead.
func (*ProvisionServiceProviderUUEKResponse) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionServiceProviderUUEKResponse) GetStatus() ProvisionServiceProviderUUEKResponse_Status {
	if x != nil {
		return x.Status
	}
	return ProvisionServiceProviderUUEKResponse_STATUS_UNSPECIFIED
}

func (x *ProvisionServiceProviderUUEKResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProvisionServiceProviderUUEKResponse) GetServiceProviderUuek() string {
	if x != nil {
		return x.ServiceProviderUuek
	}
	return ""
}

var File_mica_serviceprovider_uuek_v1_uuek_proto protoreflect.FileDescriptor

var file_mica_serviceprovider_uuek_v1_uuek_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x75, 0x75, 0x65, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x75, 0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x75, 0x75, 0x65, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d,
	0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x04, 0x0a, 0x23, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x52, 0x0a, 0x1f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x1e, 0x18, 0x32, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x85, 0x01, 0x0a, 0x1d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x1b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x54, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x2f, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x73, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x48, 0x01, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x55, 0x73, 0x65, 0x73,
	0x12, 0x1e, 0x0a, 0x09, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64,
	0x42, 0x1c, 0x0a, 0x15, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x42, 0x13,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0xa5, 0x03, 0x0a, 0x24, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x49, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x65, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x65,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e,
	0x18, 0x32, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x55, 0x75, 0x65, 0x6b, 0x22, 0xa7, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02,
	0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x03, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x43, 0x4f,
	0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x45, 0x52,
	0x49, 0x41, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x05, 0x42, 0x68, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x75, 0x75, 0x65,
	0x6b, 0x2e, 0x76, 0x31, 0x42, 0x21, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x55,
	0x45, 0x4b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1b, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x75, 0x75,
	0x65, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescOnce sync.Once
	file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescData = file_mica_serviceprovider_uuek_v1_uuek_proto_rawDesc
)

func file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescGZIP() []byte {
	file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescOnce.Do(func() {
		file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescData)
	})
	return file_mica_serviceprovider_uuek_v1_uuek_proto_rawDescData
}

var file_mica_serviceprovider_uuek_v1_uuek_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mica_serviceprovider_uuek_v1_uuek_proto_goTypes = []interface{}{
	(ProvisionServiceProviderUUEKResponse_Status)(0), // 0: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse.Status
	(*ProvisionServiceProviderUUEKRequest)(nil),      // 1: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKRequest
	(*ProvisionServiceProviderUUEKResponse)(nil),     // 2: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse
	(*instrumentv1.InstrumentExternalReference)(nil), // 3: mica.serviceprovider.instrument.v1.InstrumentExternalReference
	(*timestamppb.Timestamp)(nil),                    // 4: google.protobuf.Timestamp
	(*v1.Error)(nil),                                 // 5: micashared.common.v1.Error
}
var file_mica_serviceprovider_uuek_v1_uuek_proto_depIdxs = []int32{
	3, // 0: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKRequest.instrument_external_reference:type_name -> mica.serviceprovider.instrument.v1.InstrumentExternalReference
	4, // 1: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKRequest.valid_from:type_name -> google.protobuf.Timestamp
	4, // 2: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKRequest.valid_to:type_name -> google.protobuf.Timestamp
	0, // 3: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse.status:type_name -> mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse.Status
	5, // 4: mica.serviceprovider.uuek.v1.ProvisionServiceProviderUUEKResponse.error:type_name -> micashared.common.v1.Error
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mica_serviceprovider_uuek_v1_uuek_proto_init() }
func file_mica_serviceprovider_uuek_v1_uuek_proto_init() {
	if File_mica_serviceprovider_uuek_v1_uuek_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionServiceProviderUUEKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionServiceProviderUUEKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ProvisionServiceProviderUUEKRequest_ServiceProviderInstrumentKey)(nil),
		(*ProvisionServiceProviderUUEKRequest_InstrumentExternalReference)(nil),
		(*ProvisionServiceProviderUUEKRequest_NumberOfUses)(nil),
		(*ProvisionServiceProviderUUEKRequest_Unlimited)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_serviceprovider_uuek_v1_uuek_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mica_serviceprovider_uuek_v1_uuek_proto_goTypes,
		DependencyIndexes: file_mica_serviceprovider_uuek_v1_uuek_proto_depIdxs,
		EnumInfos:         file_mica_serviceprovider_uuek_v1_uuek_proto_enumTypes,
		MessageInfos:      file_mica_serviceprovider_uuek_v1_uuek_proto_msgTypes,
	}.Build()
	File_mica_serviceprovider_uuek_v1_uuek_proto = out.File
	file_mica_serviceprovider_uuek_v1_uuek_proto_rawDesc = nil
	file_mica_serviceprovider_uuek_v1_uuek_proto_goTypes = nil
	file_mica_serviceprovider_uuek_v1_uuek_proto_depIdxs = nil
}
