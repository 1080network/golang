// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.30.2
// source: mica/serviceprovider/service/v1/service_provider_from_mica_service.proto

package servicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	valuev1 "github.com/1080network/golang/serviceprovider/proto/mica/serviceprovider/valuev1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceProviderFromMicaServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceProviderFromMicaServicePingRequest) Reset() {
	*x = ServiceProviderFromMicaServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProviderFromMicaServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProviderFromMicaServicePingRequest) ProtoMessage() {}

func (x *ServiceProviderFromMicaServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProviderFromMicaServicePingRequest.ProtoReflect.Descriptor instead.
func (*ServiceProviderFromMicaServicePingRequest) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescGZIP(), []int{0}
}

type ServiceProviderFromMicaServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServiceProviderFromMicaServicePingResponse) Reset() {
	*x = ServiceProviderFromMicaServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProviderFromMicaServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProviderFromMicaServicePingResponse) ProtoMessage() {}

func (x *ServiceProviderFromMicaServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProviderFromMicaServicePingResponse.ProtoReflect.Descriptor instead.
func (*ServiceProviderFromMicaServicePingResponse) Descriptor() ([]byte, []int) {
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescGZIP(), []int{1}
}

var File_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto protoreflect.FileDescriptor

var file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDesc = []byte{
	0x0a, 0x48, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6d, 0x69, 0x63, 0x61, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x29, 0x6d, 0x69, 0x63,
	0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x29, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x2a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xc8, 0x0a, 0x0a, 0x1e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a,
	0x12, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x38, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x4f, 0x62, 0x74, 0x61, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x0b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x31, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x09, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0e, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x34, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x65, 0x6e, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6d, 0x65, 0x6e, 0x64,
	0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x0f,
	0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x35, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x76, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x64, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x4a, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x46,
	0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x70, 0x0a, 0x22,
	0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x42, 0x23, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x69, 0x63, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1e, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescOnce sync.Once
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescData = file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDesc
)

func file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescGZIP() []byte {
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescOnce.Do(func() {
		file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescData)
	})
	return file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDescData
}

var file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_goTypes = []interface{}{
	(*ServiceProviderFromMicaServicePingRequest)(nil),  // 0: mica.serviceprovider.service.v1.ServiceProviderFromMicaServicePingRequest
	(*ServiceProviderFromMicaServicePingResponse)(nil), // 1: mica.serviceprovider.service.v1.ServiceProviderFromMicaServicePingResponse
	(*valuev1.ObtainValueRequest)(nil),                 // 2: mica.serviceprovider.value.v1.ObtainValueRequest
	(*valuev1.ReverseObtainValueRequest)(nil),          // 3: mica.serviceprovider.value.v1.ReverseObtainValueRequest
	(*valuev1.ReturnValueRequest)(nil),                 // 4: mica.serviceprovider.value.v1.ReturnValueRequest
	(*valuev1.ReverseReturnValueRequest)(nil),          // 5: mica.serviceprovider.value.v1.ReverseReturnValueRequest
	(*valuev1.HoldValueRequest)(nil),                   // 6: mica.serviceprovider.value.v1.HoldValueRequest
	(*valuev1.AmendHoldValueRequest)(nil),              // 7: mica.serviceprovider.value.v1.AmendHoldValueRequest
	(*valuev1.ReleaseHoldValueRequest)(nil),            // 8: mica.serviceprovider.value.v1.ReleaseHoldValueRequest
	(*valuev1.ObtainHoldValueRequest)(nil),             // 9: mica.serviceprovider.value.v1.ObtainHoldValueRequest
	(*valuev1.ValueAdviceRequest)(nil),                 // 10: mica.serviceprovider.value.v1.ValueAdviceRequest
	(*valuev1.ObtainValueResponse)(nil),                // 11: mica.serviceprovider.value.v1.ObtainValueResponse
	(*valuev1.ReverseObtainValueResponse)(nil),         // 12: mica.serviceprovider.value.v1.ReverseObtainValueResponse
	(*valuev1.ReturnValueResponse)(nil),                // 13: mica.serviceprovider.value.v1.ReturnValueResponse
	(*valuev1.ReverseReturnValueResponse)(nil),         // 14: mica.serviceprovider.value.v1.ReverseReturnValueResponse
	(*valuev1.HoldValueResponse)(nil),                  // 15: mica.serviceprovider.value.v1.HoldValueResponse
	(*valuev1.AmendHoldValueResponse)(nil),             // 16: mica.serviceprovider.value.v1.AmendHoldValueResponse
	(*valuev1.ReleaseHoldValueResponse)(nil),           // 17: mica.serviceprovider.value.v1.ReleaseHoldValueResponse
	(*valuev1.ObtainHoldValueResponse)(nil),            // 18: mica.serviceprovider.value.v1.ObtainHoldValueResponse
	(*valuev1.ValueAdviceResponse)(nil),                // 19: mica.serviceprovider.value.v1.ValueAdviceResponse
}
var file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_depIdxs = []int32{
	2,  // 0: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ObtainValue:input_type -> mica.serviceprovider.value.v1.ObtainValueRequest
	3,  // 1: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReverseObtainValue:input_type -> mica.serviceprovider.value.v1.ReverseObtainValueRequest
	4,  // 2: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReturnValue:input_type -> mica.serviceprovider.value.v1.ReturnValueRequest
	5,  // 3: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReverseReturnValue:input_type -> mica.serviceprovider.value.v1.ReverseReturnValueRequest
	6,  // 4: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.HoldValue:input_type -> mica.serviceprovider.value.v1.HoldValueRequest
	7,  // 5: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.AmendHoldValue:input_type -> mica.serviceprovider.value.v1.AmendHoldValueRequest
	8,  // 6: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReleaseHoldValue:input_type -> mica.serviceprovider.value.v1.ReleaseHoldValueRequest
	9,  // 7: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ObtainHoldValue:input_type -> mica.serviceprovider.value.v1.ObtainHoldValueRequest
	10, // 8: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ValueAdvice:input_type -> mica.serviceprovider.value.v1.ValueAdviceRequest
	0,  // 9: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.Ping:input_type -> mica.serviceprovider.service.v1.ServiceProviderFromMicaServicePingRequest
	11, // 10: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ObtainValue:output_type -> mica.serviceprovider.value.v1.ObtainValueResponse
	12, // 11: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReverseObtainValue:output_type -> mica.serviceprovider.value.v1.ReverseObtainValueResponse
	13, // 12: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReturnValue:output_type -> mica.serviceprovider.value.v1.ReturnValueResponse
	14, // 13: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReverseReturnValue:output_type -> mica.serviceprovider.value.v1.ReverseReturnValueResponse
	15, // 14: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.HoldValue:output_type -> mica.serviceprovider.value.v1.HoldValueResponse
	16, // 15: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.AmendHoldValue:output_type -> mica.serviceprovider.value.v1.AmendHoldValueResponse
	17, // 16: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ReleaseHoldValue:output_type -> mica.serviceprovider.value.v1.ReleaseHoldValueResponse
	18, // 17: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ObtainHoldValue:output_type -> mica.serviceprovider.value.v1.ObtainHoldValueResponse
	19, // 18: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.ValueAdvice:output_type -> mica.serviceprovider.value.v1.ValueAdviceResponse
	1,  // 19: mica.serviceprovider.service.v1.ServiceProviderFromMicaService.Ping:output_type -> mica.serviceprovider.service.v1.ServiceProviderFromMicaServicePingResponse
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_init() }
func file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_init() {
	if File_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProviderFromMicaServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProviderFromMicaServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_goTypes,
		DependencyIndexes: file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_depIdxs,
		MessageInfos:      file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_msgTypes,
	}.Build()
	File_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto = out.File
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_rawDesc = nil
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_goTypes = nil
	file_mica_serviceprovider_service_v1_service_provider_from_mica_service_proto_depIdxs = nil
}
