// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.2
// source: partner/service/v1/partner_to_ten80_service.proto

package servicev1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	authenticatev1 "ten80/proto/partner/authenticatev1"
	fiv1 "ten80/proto/partner/fiv1"
	fundsv1 "ten80/proto/partner/fundsv1"
	instrumentv1 "ten80/proto/partner/instrumentv1"
	organizationv1 "ten80/proto/partner/organizationv1"
	partnerv1 "ten80/proto/partner/partnerv1"
	paymenttokenv1 "ten80/proto/partner/paymenttokenv1"
	serviceaccountv1 "ten80/proto/partner/serviceaccountv1"
	storev1 "ten80/proto/partner/storev1"
	userv1 "ten80/proto/partner/userv1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_partner_service_v1_partner_to_ten80_service_proto protoreflect.FileDescriptor

var file_partner_service_v1_partner_to_ten80_service_proto_rawDesc = []byte{
	0x0a, 0x31, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f,
	0x74, 0x65, 0x6e, 0x38, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x66, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2f, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x75,
	0x6e, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xc8, 0x15, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54,
	0x6f, 0x31, 0x30, 0x38, 0x30, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x0c,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x36, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x76, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x12, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x32, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x08, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x49, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x49, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x49, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x1a, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a,
	0x1a, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x19, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x4f, 0x62, 0x74, 0x61, 0x69,
	0x6e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x62, 0x74, 0x61, 0x69, 0x6e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46,
	0x75, 0x6e, 0x64, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66,
	0x75, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x46, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x24, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x66, 0x75, 0x6e,
	0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x75, 0x6e, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x66, 0x75, 0x6e, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5e,
	0x0a, 0x20, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x74, 0x65, 0x6e, 0x38, 0x30, 0x2e,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x42, 0x13, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x1d, 0x74, 0x65, 0x6e, 0x38, 0x30, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x05, 0x54, 0x45, 0x4e, 0x38, 0x30, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_partner_service_v1_partner_to_ten80_service_proto_goTypes = []interface{}{
	(*authenticatev1.AuthenticateRequest)(nil),               // 0: partner.authenticate.v1.AuthenticateRequest
	(*partnerv1.GetPartnerRequest)(nil),                      // 1: partner.partner.v1.GetPartnerRequest
	(*serviceaccountv1.CreateServiceAccountRequest)(nil),     // 2: partner.serviceaccount.v1.CreateServiceAccountRequest
	(*serviceaccountv1.GetServiceAccountRequest)(nil),        // 3: partner.serviceaccount.v1.GetServiceAccountRequest
	(*serviceaccountv1.UpdateServiceAccountRequest)(nil),     // 4: partner.serviceaccount.v1.UpdateServiceAccountRequest
	(*serviceaccountv1.SearchServiceAccountRequest)(nil),     // 5: partner.serviceaccount.v1.SearchServiceAccountRequest
	(*organizationv1.GetOrganizationRequest)(nil),            // 6: partner.organization.v1.GetOrganizationRequest
	(*organizationv1.SearchOrganizationRequest)(nil),         // 7: partner.organization.v1.SearchOrganizationRequest
	(*storev1.CreateStoreRequest)(nil),                       // 8: partner.store.v1.CreateStoreRequest
	(*storev1.GetStoreRequest)(nil),                          // 9: partner.store.v1.GetStoreRequest
	(*storev1.UpdateStoreRequest)(nil),                       // 10: partner.store.v1.UpdateStoreRequest
	(*storev1.RemoveStoreRequest)(nil),                       // 11: partner.store.v1.RemoveStoreRequest
	(*storev1.SearchStoreRequest)(nil),                       // 12: partner.store.v1.SearchStoreRequest
	(*fiv1.SearchFIRequest)(nil),                             // 13: partner.fi.v1.SearchFIRequest
	(*instrumentv1.RegisterInstrumentInitiateRequest)(nil),   // 14: partner.instrument.v1.RegisterInstrumentInitiateRequest
	(*instrumentv1.RegisterInstrumentCompleteRequest)(nil),   // 15: partner.instrument.v1.RegisterInstrumentCompleteRequest
	(*paymenttokenv1.RemovePaymentTokenRequest)(nil),         // 16: partner.paymenttoken.v1.RemovePaymentTokenRequest
	(*paymenttokenv1.ExchangePaymentTokenRequest)(nil),       // 17: partner.paymenttoken.v1.ExchangePaymentTokenRequest
	(*paymenttokenv1.SearchPartnerPaymentTokenRequest)(nil),  // 18: partner.paymenttoken.v1.SearchPartnerPaymentTokenRequest
	(*userv1.SearchUserInstrumentRequest)(nil),               // 19: partner.user.v1.SearchUserInstrumentRequest
	(*fundsv1.ObtainFundsRequest)(nil),                       // 20: partner.funds.v1.ObtainFundsRequest
	(*fundsv1.ReturnFundsRequest)(nil),                       // 21: partner.funds.v1.ReturnFundsRequest
	(*fundsv1.SearchFundsRequest)(nil),                       // 22: partner.funds.v1.SearchFundsRequest
	(*PingRequest)(nil),                                      // 23: partner.service.v1.PingRequest
	(*authenticatev1.AuthenticateResponse)(nil),              // 24: partner.authenticate.v1.AuthenticateResponse
	(*partnerv1.GetPartnerResponse)(nil),                     // 25: partner.partner.v1.GetPartnerResponse
	(*serviceaccountv1.CreateServiceAccountResponse)(nil),    // 26: partner.serviceaccount.v1.CreateServiceAccountResponse
	(*serviceaccountv1.GetServiceAccountResponse)(nil),       // 27: partner.serviceaccount.v1.GetServiceAccountResponse
	(*serviceaccountv1.UpdateServiceAccountResponse)(nil),    // 28: partner.serviceaccount.v1.UpdateServiceAccountResponse
	(*serviceaccountv1.SearchServiceAccountResponse)(nil),    // 29: partner.serviceaccount.v1.SearchServiceAccountResponse
	(*organizationv1.GetOrganizationResponse)(nil),           // 30: partner.organization.v1.GetOrganizationResponse
	(*organizationv1.SearchOrganizationResponse)(nil),        // 31: partner.organization.v1.SearchOrganizationResponse
	(*storev1.CreateStoreResponse)(nil),                      // 32: partner.store.v1.CreateStoreResponse
	(*storev1.GetStoreResponse)(nil),                         // 33: partner.store.v1.GetStoreResponse
	(*storev1.UpdateStoreResponse)(nil),                      // 34: partner.store.v1.UpdateStoreResponse
	(*storev1.RemoveStoreResponse)(nil),                      // 35: partner.store.v1.RemoveStoreResponse
	(*storev1.SearchStoreResponse)(nil),                      // 36: partner.store.v1.SearchStoreResponse
	(*fiv1.SearchFIResponse)(nil),                            // 37: partner.fi.v1.SearchFIResponse
	(*instrumentv1.RegisterInstrumentInitiateResponse)(nil),  // 38: partner.instrument.v1.RegisterInstrumentInitiateResponse
	(*instrumentv1.RegisterInstrumentCompleteResponse)(nil),  // 39: partner.instrument.v1.RegisterInstrumentCompleteResponse
	(*paymenttokenv1.RemovePaymentTokenResponse)(nil),        // 40: partner.paymenttoken.v1.RemovePaymentTokenResponse
	(*paymenttokenv1.ExchangePaymentTokenResponse)(nil),      // 41: partner.paymenttoken.v1.ExchangePaymentTokenResponse
	(*paymenttokenv1.SearchPartnerPaymentTokenResponse)(nil), // 42: partner.paymenttoken.v1.SearchPartnerPaymentTokenResponse
	(*userv1.SearchUserInstrumentResponse)(nil),              // 43: partner.user.v1.SearchUserInstrumentResponse
	(*fundsv1.ObtainFundsResponse)(nil),                      // 44: partner.funds.v1.ObtainFundsResponse
	(*fundsv1.ReturnFundsResponse)(nil),                      // 45: partner.funds.v1.ReturnFundsResponse
	(*fundsv1.SearchFundsResponse)(nil),                      // 46: partner.funds.v1.SearchFundsResponse
	(*PingResponse)(nil),                                     // 47: partner.service.v1.PingResponse
}
var file_partner_service_v1_partner_to_ten80_service_proto_depIdxs = []int32{
	0,  // 0: partner.service.v1.PartnerTo1080Service.Authenticate:input_type -> partner.authenticate.v1.AuthenticateRequest
	1,  // 1: partner.service.v1.PartnerTo1080Service.GetPartner:input_type -> partner.partner.v1.GetPartnerRequest
	2,  // 2: partner.service.v1.PartnerTo1080Service.CreateServiceAccount:input_type -> partner.serviceaccount.v1.CreateServiceAccountRequest
	3,  // 3: partner.service.v1.PartnerTo1080Service.GetServiceAccount:input_type -> partner.serviceaccount.v1.GetServiceAccountRequest
	4,  // 4: partner.service.v1.PartnerTo1080Service.UpdateServiceAccount:input_type -> partner.serviceaccount.v1.UpdateServiceAccountRequest
	5,  // 5: partner.service.v1.PartnerTo1080Service.SearchServiceAccount:input_type -> partner.serviceaccount.v1.SearchServiceAccountRequest
	6,  // 6: partner.service.v1.PartnerTo1080Service.GetOrganization:input_type -> partner.organization.v1.GetOrganizationRequest
	7,  // 7: partner.service.v1.PartnerTo1080Service.SearchOrganization:input_type -> partner.organization.v1.SearchOrganizationRequest
	8,  // 8: partner.service.v1.PartnerTo1080Service.CreateStore:input_type -> partner.store.v1.CreateStoreRequest
	9,  // 9: partner.service.v1.PartnerTo1080Service.GetStore:input_type -> partner.store.v1.GetStoreRequest
	10, // 10: partner.service.v1.PartnerTo1080Service.UpdateStore:input_type -> partner.store.v1.UpdateStoreRequest
	11, // 11: partner.service.v1.PartnerTo1080Service.RemoveStore:input_type -> partner.store.v1.RemoveStoreRequest
	12, // 12: partner.service.v1.PartnerTo1080Service.SearchStore:input_type -> partner.store.v1.SearchStoreRequest
	13, // 13: partner.service.v1.PartnerTo1080Service.SearchFI:input_type -> partner.fi.v1.SearchFIRequest
	14, // 14: partner.service.v1.PartnerTo1080Service.RegisterInstrumentInitiate:input_type -> partner.instrument.v1.RegisterInstrumentInitiateRequest
	15, // 15: partner.service.v1.PartnerTo1080Service.RegisterInstrumentComplete:input_type -> partner.instrument.v1.RegisterInstrumentCompleteRequest
	16, // 16: partner.service.v1.PartnerTo1080Service.ClosePaymentToken:input_type -> partner.paymenttoken.v1.RemovePaymentTokenRequest
	17, // 17: partner.service.v1.PartnerTo1080Service.ReplacePaymentToken:input_type -> partner.paymenttoken.v1.ExchangePaymentTokenRequest
	18, // 18: partner.service.v1.PartnerTo1080Service.SearchPartnerPaymentToken:input_type -> partner.paymenttoken.v1.SearchPartnerPaymentTokenRequest
	19, // 19: partner.service.v1.PartnerTo1080Service.SearchUserInstrument:input_type -> partner.user.v1.SearchUserInstrumentRequest
	20, // 20: partner.service.v1.PartnerTo1080Service.ObtainFunds:input_type -> partner.funds.v1.ObtainFundsRequest
	21, // 21: partner.service.v1.PartnerTo1080Service.ReturnFunds:input_type -> partner.funds.v1.ReturnFundsRequest
	22, // 22: partner.service.v1.PartnerTo1080Service.SearchFunds:input_type -> partner.funds.v1.SearchFundsRequest
	23, // 23: partner.service.v1.PartnerTo1080Service.Ping:input_type -> partner.service.v1.PingRequest
	24, // 24: partner.service.v1.PartnerTo1080Service.Authenticate:output_type -> partner.authenticate.v1.AuthenticateResponse
	25, // 25: partner.service.v1.PartnerTo1080Service.GetPartner:output_type -> partner.partner.v1.GetPartnerResponse
	26, // 26: partner.service.v1.PartnerTo1080Service.CreateServiceAccount:output_type -> partner.serviceaccount.v1.CreateServiceAccountResponse
	27, // 27: partner.service.v1.PartnerTo1080Service.GetServiceAccount:output_type -> partner.serviceaccount.v1.GetServiceAccountResponse
	28, // 28: partner.service.v1.PartnerTo1080Service.UpdateServiceAccount:output_type -> partner.serviceaccount.v1.UpdateServiceAccountResponse
	29, // 29: partner.service.v1.PartnerTo1080Service.SearchServiceAccount:output_type -> partner.serviceaccount.v1.SearchServiceAccountResponse
	30, // 30: partner.service.v1.PartnerTo1080Service.GetOrganization:output_type -> partner.organization.v1.GetOrganizationResponse
	31, // 31: partner.service.v1.PartnerTo1080Service.SearchOrganization:output_type -> partner.organization.v1.SearchOrganizationResponse
	32, // 32: partner.service.v1.PartnerTo1080Service.CreateStore:output_type -> partner.store.v1.CreateStoreResponse
	33, // 33: partner.service.v1.PartnerTo1080Service.GetStore:output_type -> partner.store.v1.GetStoreResponse
	34, // 34: partner.service.v1.PartnerTo1080Service.UpdateStore:output_type -> partner.store.v1.UpdateStoreResponse
	35, // 35: partner.service.v1.PartnerTo1080Service.RemoveStore:output_type -> partner.store.v1.RemoveStoreResponse
	36, // 36: partner.service.v1.PartnerTo1080Service.SearchStore:output_type -> partner.store.v1.SearchStoreResponse
	37, // 37: partner.service.v1.PartnerTo1080Service.SearchFI:output_type -> partner.fi.v1.SearchFIResponse
	38, // 38: partner.service.v1.PartnerTo1080Service.RegisterInstrumentInitiate:output_type -> partner.instrument.v1.RegisterInstrumentInitiateResponse
	39, // 39: partner.service.v1.PartnerTo1080Service.RegisterInstrumentComplete:output_type -> partner.instrument.v1.RegisterInstrumentCompleteResponse
	40, // 40: partner.service.v1.PartnerTo1080Service.ClosePaymentToken:output_type -> partner.paymenttoken.v1.RemovePaymentTokenResponse
	41, // 41: partner.service.v1.PartnerTo1080Service.ReplacePaymentToken:output_type -> partner.paymenttoken.v1.ExchangePaymentTokenResponse
	42, // 42: partner.service.v1.PartnerTo1080Service.SearchPartnerPaymentToken:output_type -> partner.paymenttoken.v1.SearchPartnerPaymentTokenResponse
	43, // 43: partner.service.v1.PartnerTo1080Service.SearchUserInstrument:output_type -> partner.user.v1.SearchUserInstrumentResponse
	44, // 44: partner.service.v1.PartnerTo1080Service.ObtainFunds:output_type -> partner.funds.v1.ObtainFundsResponse
	45, // 45: partner.service.v1.PartnerTo1080Service.ReturnFunds:output_type -> partner.funds.v1.ReturnFundsResponse
	46, // 46: partner.service.v1.PartnerTo1080Service.SearchFunds:output_type -> partner.funds.v1.SearchFundsResponse
	47, // 47: partner.service.v1.PartnerTo1080Service.Ping:output_type -> partner.service.v1.PingResponse
	24, // [24:48] is the sub-list for method output_type
	0,  // [0:24] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_partner_service_v1_partner_to_ten80_service_proto_init() }
func file_partner_service_v1_partner_to_ten80_service_proto_init() {
	if File_partner_service_v1_partner_to_ten80_service_proto != nil {
		return
	}
	file_partner_ping_v1_ping_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_partner_service_v1_partner_to_ten80_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_partner_service_v1_partner_to_ten80_service_proto_goTypes,
		DependencyIndexes: file_partner_service_v1_partner_to_ten80_service_proto_depIdxs,
	}.Build()
	File_partner_service_v1_partner_to_ten80_service_proto = out.File
	file_partner_service_v1_partner_to_ten80_service_proto_rawDesc = nil
	file_partner_service_v1_partner_to_ten80_service_proto_goTypes = nil
	file_partner_service_v1_partner_to_ten80_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PartnerTo1080ServiceClient is the client API for PartnerTo1080Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PartnerTo1080ServiceClient interface {
	Authenticate(ctx context.Context, in *authenticatev1.AuthenticateRequest, opts ...grpc.CallOption) (*authenticatev1.AuthenticateResponse, error)
	GetPartner(ctx context.Context, in *partnerv1.GetPartnerRequest, opts ...grpc.CallOption) (*partnerv1.GetPartnerResponse, error)
	CreateServiceAccount(ctx context.Context, in *serviceaccountv1.CreateServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.CreateServiceAccountResponse, error)
	GetServiceAccount(ctx context.Context, in *serviceaccountv1.GetServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.GetServiceAccountResponse, error)
	UpdateServiceAccount(ctx context.Context, in *serviceaccountv1.UpdateServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.UpdateServiceAccountResponse, error)
	SearchServiceAccount(ctx context.Context, in *serviceaccountv1.SearchServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.SearchServiceAccountResponse, error)
	GetOrganization(ctx context.Context, in *organizationv1.GetOrganizationRequest, opts ...grpc.CallOption) (*organizationv1.GetOrganizationResponse, error)
	SearchOrganization(ctx context.Context, in *organizationv1.SearchOrganizationRequest, opts ...grpc.CallOption) (*organizationv1.SearchOrganizationResponse, error)
	CreateStore(ctx context.Context, in *storev1.CreateStoreRequest, opts ...grpc.CallOption) (*storev1.CreateStoreResponse, error)
	GetStore(ctx context.Context, in *storev1.GetStoreRequest, opts ...grpc.CallOption) (*storev1.GetStoreResponse, error)
	UpdateStore(ctx context.Context, in *storev1.UpdateStoreRequest, opts ...grpc.CallOption) (*storev1.UpdateStoreResponse, error)
	RemoveStore(ctx context.Context, in *storev1.RemoveStoreRequest, opts ...grpc.CallOption) (*storev1.RemoveStoreResponse, error)
	SearchStore(ctx context.Context, in *storev1.SearchStoreRequest, opts ...grpc.CallOption) (*storev1.SearchStoreResponse, error)
	SearchFI(ctx context.Context, in *fiv1.SearchFIRequest, opts ...grpc.CallOption) (*fiv1.SearchFIResponse, error)
	RegisterInstrumentInitiate(ctx context.Context, in *instrumentv1.RegisterInstrumentInitiateRequest, opts ...grpc.CallOption) (*instrumentv1.RegisterInstrumentInitiateResponse, error)
	RegisterInstrumentComplete(ctx context.Context, in *instrumentv1.RegisterInstrumentCompleteRequest, opts ...grpc.CallOption) (*instrumentv1.RegisterInstrumentCompleteResponse, error)
	ClosePaymentToken(ctx context.Context, in *paymenttokenv1.RemovePaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.RemovePaymentTokenResponse, error)
	ReplacePaymentToken(ctx context.Context, in *paymenttokenv1.ExchangePaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.ExchangePaymentTokenResponse, error)
	SearchPartnerPaymentToken(ctx context.Context, in *paymenttokenv1.SearchPartnerPaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.SearchPartnerPaymentTokenResponse, error)
	SearchUserInstrument(ctx context.Context, in *userv1.SearchUserInstrumentRequest, opts ...grpc.CallOption) (*userv1.SearchUserInstrumentResponse, error)
	ObtainFunds(ctx context.Context, in *fundsv1.ObtainFundsRequest, opts ...grpc.CallOption) (*fundsv1.ObtainFundsResponse, error)
	ReturnFunds(ctx context.Context, in *fundsv1.ReturnFundsRequest, opts ...grpc.CallOption) (*fundsv1.ReturnFundsResponse, error)
	SearchFunds(ctx context.Context, in *fundsv1.SearchFundsRequest, opts ...grpc.CallOption) (*fundsv1.SearchFundsResponse, error)
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
}

type partnerTo1080ServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPartnerTo1080ServiceClient(cc grpc.ClientConnInterface) PartnerTo1080ServiceClient {
	return &partnerTo1080ServiceClient{cc}
}

func (c *partnerTo1080ServiceClient) Authenticate(ctx context.Context, in *authenticatev1.AuthenticateRequest, opts ...grpc.CallOption) (*authenticatev1.AuthenticateResponse, error) {
	out := new(authenticatev1.AuthenticateResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) GetPartner(ctx context.Context, in *partnerv1.GetPartnerRequest, opts ...grpc.CallOption) (*partnerv1.GetPartnerResponse, error) {
	out := new(partnerv1.GetPartnerResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/GetPartner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) CreateServiceAccount(ctx context.Context, in *serviceaccountv1.CreateServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.CreateServiceAccountResponse, error) {
	out := new(serviceaccountv1.CreateServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/CreateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) GetServiceAccount(ctx context.Context, in *serviceaccountv1.GetServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.GetServiceAccountResponse, error) {
	out := new(serviceaccountv1.GetServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/GetServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) UpdateServiceAccount(ctx context.Context, in *serviceaccountv1.UpdateServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.UpdateServiceAccountResponse, error) {
	out := new(serviceaccountv1.UpdateServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/UpdateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchServiceAccount(ctx context.Context, in *serviceaccountv1.SearchServiceAccountRequest, opts ...grpc.CallOption) (*serviceaccountv1.SearchServiceAccountResponse, error) {
	out := new(serviceaccountv1.SearchServiceAccountResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) GetOrganization(ctx context.Context, in *organizationv1.GetOrganizationRequest, opts ...grpc.CallOption) (*organizationv1.GetOrganizationResponse, error) {
	out := new(organizationv1.GetOrganizationResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/GetOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchOrganization(ctx context.Context, in *organizationv1.SearchOrganizationRequest, opts ...grpc.CallOption) (*organizationv1.SearchOrganizationResponse, error) {
	out := new(organizationv1.SearchOrganizationResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchOrganization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) CreateStore(ctx context.Context, in *storev1.CreateStoreRequest, opts ...grpc.CallOption) (*storev1.CreateStoreResponse, error) {
	out := new(storev1.CreateStoreResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/CreateStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) GetStore(ctx context.Context, in *storev1.GetStoreRequest, opts ...grpc.CallOption) (*storev1.GetStoreResponse, error) {
	out := new(storev1.GetStoreResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/GetStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) UpdateStore(ctx context.Context, in *storev1.UpdateStoreRequest, opts ...grpc.CallOption) (*storev1.UpdateStoreResponse, error) {
	out := new(storev1.UpdateStoreResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/UpdateStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) RemoveStore(ctx context.Context, in *storev1.RemoveStoreRequest, opts ...grpc.CallOption) (*storev1.RemoveStoreResponse, error) {
	out := new(storev1.RemoveStoreResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/RemoveStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchStore(ctx context.Context, in *storev1.SearchStoreRequest, opts ...grpc.CallOption) (*storev1.SearchStoreResponse, error) {
	out := new(storev1.SearchStoreResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchStore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchFI(ctx context.Context, in *fiv1.SearchFIRequest, opts ...grpc.CallOption) (*fiv1.SearchFIResponse, error) {
	out := new(fiv1.SearchFIResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchFI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) RegisterInstrumentInitiate(ctx context.Context, in *instrumentv1.RegisterInstrumentInitiateRequest, opts ...grpc.CallOption) (*instrumentv1.RegisterInstrumentInitiateResponse, error) {
	out := new(instrumentv1.RegisterInstrumentInitiateResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/RegisterInstrumentInitiate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) RegisterInstrumentComplete(ctx context.Context, in *instrumentv1.RegisterInstrumentCompleteRequest, opts ...grpc.CallOption) (*instrumentv1.RegisterInstrumentCompleteResponse, error) {
	out := new(instrumentv1.RegisterInstrumentCompleteResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/RegisterInstrumentComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) ClosePaymentToken(ctx context.Context, in *paymenttokenv1.RemovePaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.RemovePaymentTokenResponse, error) {
	out := new(paymenttokenv1.RemovePaymentTokenResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/ClosePaymentToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) ReplacePaymentToken(ctx context.Context, in *paymenttokenv1.ExchangePaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.ExchangePaymentTokenResponse, error) {
	out := new(paymenttokenv1.ExchangePaymentTokenResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/ReplacePaymentToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchPartnerPaymentToken(ctx context.Context, in *paymenttokenv1.SearchPartnerPaymentTokenRequest, opts ...grpc.CallOption) (*paymenttokenv1.SearchPartnerPaymentTokenResponse, error) {
	out := new(paymenttokenv1.SearchPartnerPaymentTokenResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchPartnerPaymentToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchUserInstrument(ctx context.Context, in *userv1.SearchUserInstrumentRequest, opts ...grpc.CallOption) (*userv1.SearchUserInstrumentResponse, error) {
	out := new(userv1.SearchUserInstrumentResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchUserInstrument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) ObtainFunds(ctx context.Context, in *fundsv1.ObtainFundsRequest, opts ...grpc.CallOption) (*fundsv1.ObtainFundsResponse, error) {
	out := new(fundsv1.ObtainFundsResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/ObtainFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) ReturnFunds(ctx context.Context, in *fundsv1.ReturnFundsRequest, opts ...grpc.CallOption) (*fundsv1.ReturnFundsResponse, error) {
	out := new(fundsv1.ReturnFundsResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/ReturnFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) SearchFunds(ctx context.Context, in *fundsv1.SearchFundsRequest, opts ...grpc.CallOption) (*fundsv1.SearchFundsResponse, error) {
	out := new(fundsv1.SearchFundsResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/SearchFunds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *partnerTo1080ServiceClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/partner.service.v1.PartnerTo1080Service/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PartnerTo1080ServiceServer is the server API for PartnerTo1080Service service.
type PartnerTo1080ServiceServer interface {
	Authenticate(context.Context, *authenticatev1.AuthenticateRequest) (*authenticatev1.AuthenticateResponse, error)
	GetPartner(context.Context, *partnerv1.GetPartnerRequest) (*partnerv1.GetPartnerResponse, error)
	CreateServiceAccount(context.Context, *serviceaccountv1.CreateServiceAccountRequest) (*serviceaccountv1.CreateServiceAccountResponse, error)
	GetServiceAccount(context.Context, *serviceaccountv1.GetServiceAccountRequest) (*serviceaccountv1.GetServiceAccountResponse, error)
	UpdateServiceAccount(context.Context, *serviceaccountv1.UpdateServiceAccountRequest) (*serviceaccountv1.UpdateServiceAccountResponse, error)
	SearchServiceAccount(context.Context, *serviceaccountv1.SearchServiceAccountRequest) (*serviceaccountv1.SearchServiceAccountResponse, error)
	GetOrganization(context.Context, *organizationv1.GetOrganizationRequest) (*organizationv1.GetOrganizationResponse, error)
	SearchOrganization(context.Context, *organizationv1.SearchOrganizationRequest) (*organizationv1.SearchOrganizationResponse, error)
	CreateStore(context.Context, *storev1.CreateStoreRequest) (*storev1.CreateStoreResponse, error)
	GetStore(context.Context, *storev1.GetStoreRequest) (*storev1.GetStoreResponse, error)
	UpdateStore(context.Context, *storev1.UpdateStoreRequest) (*storev1.UpdateStoreResponse, error)
	RemoveStore(context.Context, *storev1.RemoveStoreRequest) (*storev1.RemoveStoreResponse, error)
	SearchStore(context.Context, *storev1.SearchStoreRequest) (*storev1.SearchStoreResponse, error)
	SearchFI(context.Context, *fiv1.SearchFIRequest) (*fiv1.SearchFIResponse, error)
	RegisterInstrumentInitiate(context.Context, *instrumentv1.RegisterInstrumentInitiateRequest) (*instrumentv1.RegisterInstrumentInitiateResponse, error)
	RegisterInstrumentComplete(context.Context, *instrumentv1.RegisterInstrumentCompleteRequest) (*instrumentv1.RegisterInstrumentCompleteResponse, error)
	ClosePaymentToken(context.Context, *paymenttokenv1.RemovePaymentTokenRequest) (*paymenttokenv1.RemovePaymentTokenResponse, error)
	ReplacePaymentToken(context.Context, *paymenttokenv1.ExchangePaymentTokenRequest) (*paymenttokenv1.ExchangePaymentTokenResponse, error)
	SearchPartnerPaymentToken(context.Context, *paymenttokenv1.SearchPartnerPaymentTokenRequest) (*paymenttokenv1.SearchPartnerPaymentTokenResponse, error)
	SearchUserInstrument(context.Context, *userv1.SearchUserInstrumentRequest) (*userv1.SearchUserInstrumentResponse, error)
	ObtainFunds(context.Context, *fundsv1.ObtainFundsRequest) (*fundsv1.ObtainFundsResponse, error)
	ReturnFunds(context.Context, *fundsv1.ReturnFundsRequest) (*fundsv1.ReturnFundsResponse, error)
	SearchFunds(context.Context, *fundsv1.SearchFundsRequest) (*fundsv1.SearchFundsResponse, error)
	Ping(context.Context, *PingRequest) (*PingResponse, error)
}

// UnimplementedPartnerTo1080ServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPartnerTo1080ServiceServer struct {
}

func (*UnimplementedPartnerTo1080ServiceServer) Authenticate(context.Context, *authenticatev1.AuthenticateRequest) (*authenticatev1.AuthenticateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) GetPartner(context.Context, *partnerv1.GetPartnerRequest) (*partnerv1.GetPartnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPartner not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) CreateServiceAccount(context.Context, *serviceaccountv1.CreateServiceAccountRequest) (*serviceaccountv1.CreateServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceAccount not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) GetServiceAccount(context.Context, *serviceaccountv1.GetServiceAccountRequest) (*serviceaccountv1.GetServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAccount not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) UpdateServiceAccount(context.Context, *serviceaccountv1.UpdateServiceAccountRequest) (*serviceaccountv1.UpdateServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServiceAccount not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchServiceAccount(context.Context, *serviceaccountv1.SearchServiceAccountRequest) (*serviceaccountv1.SearchServiceAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchServiceAccount not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) GetOrganization(context.Context, *organizationv1.GetOrganizationRequest) (*organizationv1.GetOrganizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganization not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchOrganization(context.Context, *organizationv1.SearchOrganizationRequest) (*organizationv1.SearchOrganizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchOrganization not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) CreateStore(context.Context, *storev1.CreateStoreRequest) (*storev1.CreateStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStore not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) GetStore(context.Context, *storev1.GetStoreRequest) (*storev1.GetStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStore not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) UpdateStore(context.Context, *storev1.UpdateStoreRequest) (*storev1.UpdateStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStore not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) RemoveStore(context.Context, *storev1.RemoveStoreRequest) (*storev1.RemoveStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveStore not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchStore(context.Context, *storev1.SearchStoreRequest) (*storev1.SearchStoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchStore not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchFI(context.Context, *fiv1.SearchFIRequest) (*fiv1.SearchFIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFI not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) RegisterInstrumentInitiate(context.Context, *instrumentv1.RegisterInstrumentInitiateRequest) (*instrumentv1.RegisterInstrumentInitiateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterInstrumentInitiate not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) RegisterInstrumentComplete(context.Context, *instrumentv1.RegisterInstrumentCompleteRequest) (*instrumentv1.RegisterInstrumentCompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterInstrumentComplete not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) ClosePaymentToken(context.Context, *paymenttokenv1.RemovePaymentTokenRequest) (*paymenttokenv1.RemovePaymentTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosePaymentToken not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) ReplacePaymentToken(context.Context, *paymenttokenv1.ExchangePaymentTokenRequest) (*paymenttokenv1.ExchangePaymentTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplacePaymentToken not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchPartnerPaymentToken(context.Context, *paymenttokenv1.SearchPartnerPaymentTokenRequest) (*paymenttokenv1.SearchPartnerPaymentTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchPartnerPaymentToken not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchUserInstrument(context.Context, *userv1.SearchUserInstrumentRequest) (*userv1.SearchUserInstrumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchUserInstrument not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) ObtainFunds(context.Context, *fundsv1.ObtainFundsRequest) (*fundsv1.ObtainFundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ObtainFunds not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) ReturnFunds(context.Context, *fundsv1.ReturnFundsRequest) (*fundsv1.ReturnFundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReturnFunds not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) SearchFunds(context.Context, *fundsv1.SearchFundsRequest) (*fundsv1.SearchFundsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFunds not implemented")
}
func (*UnimplementedPartnerTo1080ServiceServer) Ping(context.Context, *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}

func RegisterPartnerTo1080ServiceServer(s *grpc.Server, srv PartnerTo1080ServiceServer) {
	s.RegisterService(&_PartnerTo1080Service_serviceDesc, srv)
}

func _PartnerTo1080Service_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(authenticatev1.AuthenticateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).Authenticate(ctx, req.(*authenticatev1.AuthenticateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_GetPartner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(partnerv1.GetPartnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).GetPartner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/GetPartner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).GetPartner(ctx, req.(*partnerv1.GetPartnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_CreateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(serviceaccountv1.CreateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).CreateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/CreateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).CreateServiceAccount(ctx, req.(*serviceaccountv1.CreateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_GetServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(serviceaccountv1.GetServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).GetServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/GetServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).GetServiceAccount(ctx, req.(*serviceaccountv1.GetServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_UpdateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(serviceaccountv1.UpdateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).UpdateServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/UpdateServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).UpdateServiceAccount(ctx, req.(*serviceaccountv1.UpdateServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(serviceaccountv1.SearchServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchServiceAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchServiceAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchServiceAccount(ctx, req.(*serviceaccountv1.SearchServiceAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_GetOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(organizationv1.GetOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).GetOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/GetOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).GetOrganization(ctx, req.(*organizationv1.GetOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(organizationv1.SearchOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchOrganization(ctx, req.(*organizationv1.SearchOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_CreateStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storev1.CreateStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).CreateStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/CreateStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).CreateStore(ctx, req.(*storev1.CreateStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_GetStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storev1.GetStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).GetStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/GetStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).GetStore(ctx, req.(*storev1.GetStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_UpdateStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storev1.UpdateStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).UpdateStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/UpdateStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).UpdateStore(ctx, req.(*storev1.UpdateStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_RemoveStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storev1.RemoveStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).RemoveStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/RemoveStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).RemoveStore(ctx, req.(*storev1.RemoveStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchStore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(storev1.SearchStoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchStore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchStore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchStore(ctx, req.(*storev1.SearchStoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchFI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fiv1.SearchFIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchFI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchFI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchFI(ctx, req.(*fiv1.SearchFIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_RegisterInstrumentInitiate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(instrumentv1.RegisterInstrumentInitiateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).RegisterInstrumentInitiate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/RegisterInstrumentInitiate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).RegisterInstrumentInitiate(ctx, req.(*instrumentv1.RegisterInstrumentInitiateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_RegisterInstrumentComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(instrumentv1.RegisterInstrumentCompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).RegisterInstrumentComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/RegisterInstrumentComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).RegisterInstrumentComplete(ctx, req.(*instrumentv1.RegisterInstrumentCompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_ClosePaymentToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(paymenttokenv1.RemovePaymentTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).ClosePaymentToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/ClosePaymentToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).ClosePaymentToken(ctx, req.(*paymenttokenv1.RemovePaymentTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_ReplacePaymentToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(paymenttokenv1.ExchangePaymentTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).ReplacePaymentToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/ReplacePaymentToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).ReplacePaymentToken(ctx, req.(*paymenttokenv1.ExchangePaymentTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchPartnerPaymentToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(paymenttokenv1.SearchPartnerPaymentTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchPartnerPaymentToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchPartnerPaymentToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchPartnerPaymentToken(ctx, req.(*paymenttokenv1.SearchPartnerPaymentTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchUserInstrument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(userv1.SearchUserInstrumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchUserInstrument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchUserInstrument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchUserInstrument(ctx, req.(*userv1.SearchUserInstrumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_ObtainFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fundsv1.ObtainFundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).ObtainFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/ObtainFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).ObtainFunds(ctx, req.(*fundsv1.ObtainFundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_ReturnFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fundsv1.ReturnFundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).ReturnFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/ReturnFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).ReturnFunds(ctx, req.(*fundsv1.ReturnFundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_SearchFunds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fundsv1.SearchFundsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).SearchFunds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/SearchFunds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).SearchFunds(ctx, req.(*fundsv1.SearchFundsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PartnerTo1080Service_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PartnerTo1080ServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/partner.service.v1.PartnerTo1080Service/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PartnerTo1080ServiceServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PartnerTo1080Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "partner.service.v1.PartnerTo1080Service",
	HandlerType: (*PartnerTo1080ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authenticate",
			Handler:    _PartnerTo1080Service_Authenticate_Handler,
		},
		{
			MethodName: "GetPartner",
			Handler:    _PartnerTo1080Service_GetPartner_Handler,
		},
		{
			MethodName: "CreateServiceAccount",
			Handler:    _PartnerTo1080Service_CreateServiceAccount_Handler,
		},
		{
			MethodName: "GetServiceAccount",
			Handler:    _PartnerTo1080Service_GetServiceAccount_Handler,
		},
		{
			MethodName: "UpdateServiceAccount",
			Handler:    _PartnerTo1080Service_UpdateServiceAccount_Handler,
		},
		{
			MethodName: "SearchServiceAccount",
			Handler:    _PartnerTo1080Service_SearchServiceAccount_Handler,
		},
		{
			MethodName: "GetOrganization",
			Handler:    _PartnerTo1080Service_GetOrganization_Handler,
		},
		{
			MethodName: "SearchOrganization",
			Handler:    _PartnerTo1080Service_SearchOrganization_Handler,
		},
		{
			MethodName: "CreateStore",
			Handler:    _PartnerTo1080Service_CreateStore_Handler,
		},
		{
			MethodName: "GetStore",
			Handler:    _PartnerTo1080Service_GetStore_Handler,
		},
		{
			MethodName: "UpdateStore",
			Handler:    _PartnerTo1080Service_UpdateStore_Handler,
		},
		{
			MethodName: "RemoveStore",
			Handler:    _PartnerTo1080Service_RemoveStore_Handler,
		},
		{
			MethodName: "SearchStore",
			Handler:    _PartnerTo1080Service_SearchStore_Handler,
		},
		{
			MethodName: "SearchFI",
			Handler:    _PartnerTo1080Service_SearchFI_Handler,
		},
		{
			MethodName: "RegisterInstrumentInitiate",
			Handler:    _PartnerTo1080Service_RegisterInstrumentInitiate_Handler,
		},
		{
			MethodName: "RegisterInstrumentComplete",
			Handler:    _PartnerTo1080Service_RegisterInstrumentComplete_Handler,
		},
		{
			MethodName: "ClosePaymentToken",
			Handler:    _PartnerTo1080Service_ClosePaymentToken_Handler,
		},
		{
			MethodName: "ReplacePaymentToken",
			Handler:    _PartnerTo1080Service_ReplacePaymentToken_Handler,
		},
		{
			MethodName: "SearchPartnerPaymentToken",
			Handler:    _PartnerTo1080Service_SearchPartnerPaymentToken_Handler,
		},
		{
			MethodName: "SearchUserInstrument",
			Handler:    _PartnerTo1080Service_SearchUserInstrument_Handler,
		},
		{
			MethodName: "ObtainFunds",
			Handler:    _PartnerTo1080Service_ObtainFunds_Handler,
		},
		{
			MethodName: "ReturnFunds",
			Handler:    _PartnerTo1080Service_ReturnFunds_Handler,
		},
		{
			MethodName: "SearchFunds",
			Handler:    _PartnerTo1080Service_SearchFunds_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _PartnerTo1080Service_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "partner/service/v1/partner_to_ten80_service.proto",
}
