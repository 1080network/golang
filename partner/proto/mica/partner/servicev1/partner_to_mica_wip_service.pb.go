// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v6.30.2
// source: mica/partner/service/v1/partner_to_mica_wip_service.proto

package servicev1

import (
	commonv1 "github.com/1080network/golang/partner/proto/mica/commonv1"
	v1 "github.com/1080network/golang/partner/proto/micashared/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRecurringPaymentResponse_Status int32

const (
	CreateRecurringPaymentResponse_STATUS_UNSPECIFIED CreateRecurringPaymentResponse_Status = 0
	CreateRecurringPaymentResponse_STATUS_SUCCESS     CreateRecurringPaymentResponse_Status = 1
	CreateRecurringPaymentResponse_STATUS_ERROR       CreateRecurringPaymentResponse_Status = 2
)

// Enum value maps for CreateRecurringPaymentResponse_Status.
var (
	CreateRecurringPaymentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	CreateRecurringPaymentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x CreateRecurringPaymentResponse_Status) Enum() *CreateRecurringPaymentResponse_Status {
	p := new(CreateRecurringPaymentResponse_Status)
	*p = x
	return p
}

func (x CreateRecurringPaymentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateRecurringPaymentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[0].Descriptor()
}

func (CreateRecurringPaymentResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[0]
}

func (x CreateRecurringPaymentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CreateRecurringPaymentResponse_Status.Descriptor instead.
func (CreateRecurringPaymentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{3, 0}
}

type GetRecurringPaymentResponse_Status int32

const (
	GetRecurringPaymentResponse_STATUS_UNSPECIFIED GetRecurringPaymentResponse_Status = 0
	GetRecurringPaymentResponse_STATUS_SUCCESS     GetRecurringPaymentResponse_Status = 1
	GetRecurringPaymentResponse_STATUS_NOT_FOUND   GetRecurringPaymentResponse_Status = 2
)

// Enum value maps for GetRecurringPaymentResponse_Status.
var (
	GetRecurringPaymentResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_NOT_FOUND",
	}
	GetRecurringPaymentResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_NOT_FOUND":   2,
	}
)

func (x GetRecurringPaymentResponse_Status) Enum() *GetRecurringPaymentResponse_Status {
	p := new(GetRecurringPaymentResponse_Status)
	*p = x
	return p
}

func (x GetRecurringPaymentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetRecurringPaymentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[1].Descriptor()
}

func (GetRecurringPaymentResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[1]
}

func (x GetRecurringPaymentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetRecurringPaymentResponse_Status.Descriptor instead.
func (GetRecurringPaymentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{5, 0}
}

type ProvisionRecurringPaymentUUEKResponse_Status int32

const (
	ProvisionRecurringPaymentUUEKResponse_STATUS_UNSPECIFIED ProvisionRecurringPaymentUUEKResponse_Status = 0
	ProvisionRecurringPaymentUUEKResponse_STATUS_SUCCESS     ProvisionRecurringPaymentUUEKResponse_Status = 1
	ProvisionRecurringPaymentUUEKResponse_STATUS_NOT_FOUND   ProvisionRecurringPaymentUUEKResponse_Status = 2
)

// Enum value maps for ProvisionRecurringPaymentUUEKResponse_Status.
var (
	ProvisionRecurringPaymentUUEKResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_NOT_FOUND",
	}
	ProvisionRecurringPaymentUUEKResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_NOT_FOUND":   2,
	}
)

func (x ProvisionRecurringPaymentUUEKResponse_Status) Enum() *ProvisionRecurringPaymentUUEKResponse_Status {
	p := new(ProvisionRecurringPaymentUUEKResponse_Status)
	*p = x
	return p
}

func (x ProvisionRecurringPaymentUUEKResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvisionRecurringPaymentUUEKResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[2].Descriptor()
}

func (ProvisionRecurringPaymentUUEKResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes[2]
}

func (x ProvisionRecurringPaymentUUEKResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvisionRecurringPaymentUUEKResponse_Status.Descriptor instead.
func (ProvisionRecurringPaymentUUEKResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{7, 0}
}

type RecurringPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPaymentKey string                 `protobuf:"bytes,1,opt,name=recurring_payment_key,json=recurringPaymentKey,proto3" json:"recurring_payment_key,omitempty"`
	Nickname            string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Currency            *commonv1.Currency     `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Created             *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *RecurringPayment) Reset() {
	*x = RecurringPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecurringPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecurringPayment) ProtoMessage() {}

func (x *RecurringPayment) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecurringPayment.ProtoReflect.Descriptor instead.
func (*RecurringPayment) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{0}
}

func (x *RecurringPayment) GetRecurringPaymentKey() string {
	if x != nil {
		return x.RecurringPaymentKey
	}
	return ""
}

func (x *RecurringPayment) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RecurringPayment) GetCurrency() *commonv1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *RecurringPayment) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

type RecurringPaymentTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The total amount allowed to be obtained against this recurring payment during its lifetime.
	TotalSpendLimit string `protobuf:"bytes,1,opt,name=total_spend_limit,json=totalSpendLimit,proto3" json:"total_spend_limit,omitempty"`
}

func (x *RecurringPaymentTerms) Reset() {
	*x = RecurringPaymentTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecurringPaymentTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecurringPaymentTerms) ProtoMessage() {}

func (x *RecurringPaymentTerms) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecurringPaymentTerms.ProtoReflect.Descriptor instead.
func (*RecurringPaymentTerms) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{1}
}

func (x *RecurringPaymentTerms) GetTotalSpendLimit() string {
	if x != nil {
		return x.TotalSpendLimit
	}
	return ""
}

// the recurring payment must have an associated link object which refers to a
// service provider link, which in turn refers to an instrument and user
type CreateRecurringPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to OrganizationIdentifier:
	//
	//	*CreateRecurringPaymentRequest_OrganizationKey
	//	*CreateRecurringPaymentRequest_OrganizationRef
	OrganizationIdentifier isCreateRecurringPaymentRequest_OrganizationIdentifier `protobuf_oneof:"organization_identifier"`
	Uuek                   string                                                 `protobuf:"bytes,4,opt,name=uuek,proto3" json:"uuek,omitempty"`
	Nickname               string                                                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Currency               *commonv1.Currency                                     `protobuf:"bytes,7,opt,name=currency,proto3" json:"currency,omitempty"`
	Terms                  *RecurringPaymentTerms                                 `protobuf:"bytes,6,opt,name=terms,proto3" json:"terms,omitempty"`
}

func (x *CreateRecurringPaymentRequest) Reset() {
	*x = CreateRecurringPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecurringPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecurringPaymentRequest) ProtoMessage() {}

func (x *CreateRecurringPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecurringPaymentRequest.ProtoReflect.Descriptor instead.
func (*CreateRecurringPaymentRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{2}
}

func (m *CreateRecurringPaymentRequest) GetOrganizationIdentifier() isCreateRecurringPaymentRequest_OrganizationIdentifier {
	if m != nil {
		return m.OrganizationIdentifier
	}
	return nil
}

func (x *CreateRecurringPaymentRequest) GetOrganizationKey() string {
	if x, ok := x.GetOrganizationIdentifier().(*CreateRecurringPaymentRequest_OrganizationKey); ok {
		return x.OrganizationKey
	}
	return ""
}

func (x *CreateRecurringPaymentRequest) GetOrganizationRef() string {
	if x, ok := x.GetOrganizationIdentifier().(*CreateRecurringPaymentRequest_OrganizationRef); ok {
		return x.OrganizationRef
	}
	return ""
}

func (x *CreateRecurringPaymentRequest) GetUuek() string {
	if x != nil {
		return x.Uuek
	}
	return ""
}

func (x *CreateRecurringPaymentRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *CreateRecurringPaymentRequest) GetCurrency() *commonv1.Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *CreateRecurringPaymentRequest) GetTerms() *RecurringPaymentTerms {
	if x != nil {
		return x.Terms
	}
	return nil
}

type isCreateRecurringPaymentRequest_OrganizationIdentifier interface {
	isCreateRecurringPaymentRequest_OrganizationIdentifier()
}

type CreateRecurringPaymentRequest_OrganizationKey struct {
	OrganizationKey string `protobuf:"bytes,1,opt,name=organization_key,json=organizationKey,proto3,oneof"`
}

type CreateRecurringPaymentRequest_OrganizationRef struct {
	// The primary key for this organization at the Partner.
	OrganizationRef string `protobuf:"bytes,2,opt,name=organization_ref,json=organizationRef,proto3,oneof"`
}

func (*CreateRecurringPaymentRequest_OrganizationKey) isCreateRecurringPaymentRequest_OrganizationIdentifier() {
}

func (*CreateRecurringPaymentRequest_OrganizationRef) isCreateRecurringPaymentRequest_OrganizationIdentifier() {
}

type CreateRecurringPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status              CreateRecurringPaymentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.service.v1.CreateRecurringPaymentResponse_Status" json:"status,omitempty"`
	Error               *v1.Error                             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	RecurringPaymentKey string                                `protobuf:"bytes,3,opt,name=recurring_payment_key,json=recurringPaymentKey,proto3" json:"recurring_payment_key,omitempty"`
}

func (x *CreateRecurringPaymentResponse) Reset() {
	*x = CreateRecurringPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecurringPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecurringPaymentResponse) ProtoMessage() {}

func (x *CreateRecurringPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecurringPaymentResponse.ProtoReflect.Descriptor instead.
func (*CreateRecurringPaymentResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRecurringPaymentResponse) GetStatus() CreateRecurringPaymentResponse_Status {
	if x != nil {
		return x.Status
	}
	return CreateRecurringPaymentResponse_STATUS_UNSPECIFIED
}

func (x *CreateRecurringPaymentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CreateRecurringPaymentResponse) GetRecurringPaymentKey() string {
	if x != nil {
		return x.RecurringPaymentKey
	}
	return ""
}

type GetRecurringPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPaymentKey string `protobuf:"bytes,1,opt,name=recurring_payment_key,json=recurringPaymentKey,proto3" json:"recurring_payment_key,omitempty"`
}

func (x *GetRecurringPaymentRequest) Reset() {
	*x = GetRecurringPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecurringPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecurringPaymentRequest) ProtoMessage() {}

func (x *GetRecurringPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecurringPaymentRequest.ProtoReflect.Descriptor instead.
func (*GetRecurringPaymentRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecurringPaymentRequest) GetRecurringPaymentKey() string {
	if x != nil {
		return x.RecurringPaymentKey
	}
	return ""
}

type GetRecurringPaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           GetRecurringPaymentResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.service.v1.GetRecurringPaymentResponse_Status" json:"status,omitempty"`
	Error            *v1.Error                          `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	RecurringPayment *RecurringPayment                  `protobuf:"bytes,3,opt,name=recurring_payment,json=recurringPayment,proto3" json:"recurring_payment,omitempty"`
}

func (x *GetRecurringPaymentResponse) Reset() {
	*x = GetRecurringPaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecurringPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecurringPaymentResponse) ProtoMessage() {}

func (x *GetRecurringPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecurringPaymentResponse.ProtoReflect.Descriptor instead.
func (*GetRecurringPaymentResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecurringPaymentResponse) GetStatus() GetRecurringPaymentResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetRecurringPaymentResponse_STATUS_UNSPECIFIED
}

func (x *GetRecurringPaymentResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetRecurringPaymentResponse) GetRecurringPayment() *RecurringPayment {
	if x != nil {
		return x.RecurringPayment
	}
	return nil
}

type ProvisionRecurringPaymentUUEKRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPaymentKey string `protobuf:"bytes,1,opt,name=recurring_payment_key,json=recurringPaymentKey,proto3" json:"recurring_payment_key,omitempty"`
}

func (x *ProvisionRecurringPaymentUUEKRequest) Reset() {
	*x = ProvisionRecurringPaymentUUEKRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionRecurringPaymentUUEKRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionRecurringPaymentUUEKRequest) ProtoMessage() {}

func (x *ProvisionRecurringPaymentUUEKRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionRecurringPaymentUUEKRequest.ProtoReflect.Descriptor instead.
func (*ProvisionRecurringPaymentUUEKRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{6}
}

func (x *ProvisionRecurringPaymentUUEKRequest) GetRecurringPaymentKey() string {
	if x != nil {
		return x.RecurringPaymentKey
	}
	return ""
}

type ProvisionRecurringPaymentUUEKResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ProvisionRecurringPaymentUUEKResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                                    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Uuek   string                                       `protobuf:"bytes,3,opt,name=uuek,proto3" json:"uuek,omitempty"`
}

func (x *ProvisionRecurringPaymentUUEKResponse) Reset() {
	*x = ProvisionRecurringPaymentUUEKResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionRecurringPaymentUUEKResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionRecurringPaymentUUEKResponse) ProtoMessage() {}

func (x *ProvisionRecurringPaymentUUEKResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionRecurringPaymentUUEKResponse.ProtoReflect.Descriptor instead.
func (*ProvisionRecurringPaymentUUEKResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProvisionRecurringPaymentUUEKResponse) GetStatus() ProvisionRecurringPaymentUUEKResponse_Status {
	if x != nil {
		return x.Status
	}
	return ProvisionRecurringPaymentUUEKResponse_STATUS_UNSPECIFIED
}

func (x *ProvisionRecurringPaymentUUEKResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProvisionRecurringPaymentUUEKResponse) GetUuek() string {
	if x != nil {
		return x.Uuek
	}
	return ""
}

var File_mica_partner_service_v1_partner_to_mica_wip_service_proto protoreflect.FileDescriptor

var file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDesc = []byte{
	0x0a, 0x39, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x69, 0x63, 0x61, 0x5f, 0x77, 0x69, 0x70, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd8, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x43, 0x0a, 0x15, 0x52, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0xec, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x18, 0x32, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x65, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x65,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3e, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x4e, 0x0a,
	0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x42, 0x19, 0x0a,
	0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x22, 0xa7,
	0x02, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69,
	0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3e, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63,
	0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79,
	0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x50, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xc9, 0x02, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x56, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x10, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72,
	0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46,
	0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x22, 0x5a, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x15, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0x99, 0x02, 0x0a, 0x25, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x65, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x65, 0x6b, 0x22, 0x4a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x32, 0xcf,
	0x03, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x4d, 0x69, 0x63, 0x61,
	0x57, 0x49, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x8b, 0x01, 0x0a, 0x16, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x82, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x33, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72,
	0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01,
	0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x75, 0x72,
	0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x55, 0x45, 0x4b, 0x12,
	0x3d, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x55, 0x55, 0x45, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x59, 0x0a, 0x1a, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x1c,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x54, 0x6f, 0x4d, 0x69, 0x63, 0x61, 0x57, 0x49, 0x50,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x16, 0x6d, 0x69,
	0x63, 0x61, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescOnce sync.Once
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescData = file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDesc
)

func file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescGZIP() []byte {
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescOnce.Do(func() {
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescData)
	})
	return file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDescData
}

var file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_mica_partner_service_v1_partner_to_mica_wip_service_proto_goTypes = []interface{}{
	(CreateRecurringPaymentResponse_Status)(0),        // 0: mica.partner.service.v1.CreateRecurringPaymentResponse.Status
	(GetRecurringPaymentResponse_Status)(0),           // 1: mica.partner.service.v1.GetRecurringPaymentResponse.Status
	(ProvisionRecurringPaymentUUEKResponse_Status)(0), // 2: mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse.Status
	(*RecurringPayment)(nil),                          // 3: mica.partner.service.v1.RecurringPayment
	(*RecurringPaymentTerms)(nil),                     // 4: mica.partner.service.v1.RecurringPaymentTerms
	(*CreateRecurringPaymentRequest)(nil),             // 5: mica.partner.service.v1.CreateRecurringPaymentRequest
	(*CreateRecurringPaymentResponse)(nil),            // 6: mica.partner.service.v1.CreateRecurringPaymentResponse
	(*GetRecurringPaymentRequest)(nil),                // 7: mica.partner.service.v1.GetRecurringPaymentRequest
	(*GetRecurringPaymentResponse)(nil),               // 8: mica.partner.service.v1.GetRecurringPaymentResponse
	(*ProvisionRecurringPaymentUUEKRequest)(nil),      // 9: mica.partner.service.v1.ProvisionRecurringPaymentUUEKRequest
	(*ProvisionRecurringPaymentUUEKResponse)(nil),     // 10: mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse
	(*commonv1.Currency)(nil),                         // 11: mica.common.v1.Currency
	(*timestamppb.Timestamp)(nil),                     // 12: google.protobuf.Timestamp
	(*v1.Error)(nil),                                  // 13: micashared.common.v1.Error
}
var file_mica_partner_service_v1_partner_to_mica_wip_service_proto_depIdxs = []int32{
	11, // 0: mica.partner.service.v1.RecurringPayment.currency:type_name -> mica.common.v1.Currency
	12, // 1: mica.partner.service.v1.RecurringPayment.created:type_name -> google.protobuf.Timestamp
	11, // 2: mica.partner.service.v1.CreateRecurringPaymentRequest.currency:type_name -> mica.common.v1.Currency
	4,  // 3: mica.partner.service.v1.CreateRecurringPaymentRequest.terms:type_name -> mica.partner.service.v1.RecurringPaymentTerms
	0,  // 4: mica.partner.service.v1.CreateRecurringPaymentResponse.status:type_name -> mica.partner.service.v1.CreateRecurringPaymentResponse.Status
	13, // 5: mica.partner.service.v1.CreateRecurringPaymentResponse.error:type_name -> micashared.common.v1.Error
	1,  // 6: mica.partner.service.v1.GetRecurringPaymentResponse.status:type_name -> mica.partner.service.v1.GetRecurringPaymentResponse.Status
	13, // 7: mica.partner.service.v1.GetRecurringPaymentResponse.error:type_name -> micashared.common.v1.Error
	3,  // 8: mica.partner.service.v1.GetRecurringPaymentResponse.recurring_payment:type_name -> mica.partner.service.v1.RecurringPayment
	2,  // 9: mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse.status:type_name -> mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse.Status
	13, // 10: mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse.error:type_name -> micashared.common.v1.Error
	5,  // 11: mica.partner.service.v1.PartnerToMicaWIPService.CreateRecurringPayment:input_type -> mica.partner.service.v1.CreateRecurringPaymentRequest
	7,  // 12: mica.partner.service.v1.PartnerToMicaWIPService.GetRecurringPayment:input_type -> mica.partner.service.v1.GetRecurringPaymentRequest
	9,  // 13: mica.partner.service.v1.PartnerToMicaWIPService.ProvisionRecurringPaymentUUEK:input_type -> mica.partner.service.v1.ProvisionRecurringPaymentUUEKRequest
	6,  // 14: mica.partner.service.v1.PartnerToMicaWIPService.CreateRecurringPayment:output_type -> mica.partner.service.v1.CreateRecurringPaymentResponse
	8,  // 15: mica.partner.service.v1.PartnerToMicaWIPService.GetRecurringPayment:output_type -> mica.partner.service.v1.GetRecurringPaymentResponse
	10, // 16: mica.partner.service.v1.PartnerToMicaWIPService.ProvisionRecurringPaymentUUEK:output_type -> mica.partner.service.v1.ProvisionRecurringPaymentUUEKResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_mica_partner_service_v1_partner_to_mica_wip_service_proto_init() }
func file_mica_partner_service_v1_partner_to_mica_wip_service_proto_init() {
	if File_mica_partner_service_v1_partner_to_mica_wip_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecurringPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecurringPaymentTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecurringPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecurringPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecurringPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecurringPaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionRecurringPaymentUUEKRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionRecurringPaymentUUEKResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateRecurringPaymentRequest_OrganizationKey)(nil),
		(*CreateRecurringPaymentRequest_OrganizationRef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mica_partner_service_v1_partner_to_mica_wip_service_proto_goTypes,
		DependencyIndexes: file_mica_partner_service_v1_partner_to_mica_wip_service_proto_depIdxs,
		EnumInfos:         file_mica_partner_service_v1_partner_to_mica_wip_service_proto_enumTypes,
		MessageInfos:      file_mica_partner_service_v1_partner_to_mica_wip_service_proto_msgTypes,
	}.Build()
	File_mica_partner_service_v1_partner_to_mica_wip_service_proto = out.File
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_rawDesc = nil
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_goTypes = nil
	file_mica_partner_service_v1_partner_to_mica_wip_service_proto_depIdxs = nil
}
