// Copyright (c) 2022-2024 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.28.3
// source: mica/partner/instrument/v1/instrument.proto

package instrumentv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "github.com/1080network/golang/partner/proto/micashared/common/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProvisionUUEKFromLinkResponse_Status int32

const (
	ProvisionUUEKFromLinkResponse_STATUS_UNSPECIFIED  ProvisionUUEKFromLinkResponse_Status = 0
	ProvisionUUEKFromLinkResponse_STATUS_SUCCESS      ProvisionUUEKFromLinkResponse_Status = 1
	ProvisionUUEKFromLinkResponse_STATUS_ERROR        ProvisionUUEKFromLinkResponse_Status = 2
	ProvisionUUEKFromLinkResponse_STATUS_NOT_FOUND    ProvisionUUEKFromLinkResponse_Status = 3
	ProvisionUUEKFromLinkResponse_STATUS_INVALID_LINK ProvisionUUEKFromLinkResponse_Status = 4
)

// Enum value maps for ProvisionUUEKFromLinkResponse_Status.
var (
	ProvisionUUEKFromLinkResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
		3: "STATUS_NOT_FOUND",
		4: "STATUS_INVALID_LINK",
	}
	ProvisionUUEKFromLinkResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":  0,
		"STATUS_SUCCESS":      1,
		"STATUS_ERROR":        2,
		"STATUS_NOT_FOUND":    3,
		"STATUS_INVALID_LINK": 4,
	}
)

func (x ProvisionUUEKFromLinkResponse_Status) Enum() *ProvisionUUEKFromLinkResponse_Status {
	p := new(ProvisionUUEKFromLinkResponse_Status)
	*p = x
	return p
}

func (x ProvisionUUEKFromLinkResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProvisionUUEKFromLinkResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_instrument_v1_instrument_proto_enumTypes[0].Descriptor()
}

func (ProvisionUUEKFromLinkResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_instrument_v1_instrument_proto_enumTypes[0]
}

func (x ProvisionUUEKFromLinkResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProvisionUUEKFromLinkResponse_Status.Descriptor instead.
func (ProvisionUUEKFromLinkResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{1, 0}
}

type CompleteLinkingWithCodeResponse_Status int32

const (
	CompleteLinkingWithCodeResponse_STATUS_UNSPECIFIED CompleteLinkingWithCodeResponse_Status = 0
	CompleteLinkingWithCodeResponse_STATUS_SUCCESS     CompleteLinkingWithCodeResponse_Status = 1
	// the link source is in a different network and therefore not compatible
	CompleteLinkingWithCodeResponse_STATUS_INVALID_NETWORK CompleteLinkingWithCodeResponse_Status = 2
	// the organization passed does not exist or is deactivated
	CompleteLinkingWithCodeResponse_STATUS_INVALID_ORGANIZATION CompleteLinkingWithCodeResponse_Status = 3
	// the source account or instrument for this link is not supported
	CompleteLinkingWithCodeResponse_STATUS_UNSUPPORTED_LINK_SOURCE CompleteLinkingWithCodeResponse_Status = 4
	// the provided code is incorrect
	CompleteLinkingWithCodeResponse_STATUS_INVALID_CODE CompleteLinkingWithCodeResponse_Status = 5
)

// Enum value maps for CompleteLinkingWithCodeResponse_Status.
var (
	CompleteLinkingWithCodeResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_INVALID_NETWORK",
		3: "STATUS_INVALID_ORGANIZATION",
		4: "STATUS_UNSUPPORTED_LINK_SOURCE",
		5: "STATUS_INVALID_CODE",
	}
	CompleteLinkingWithCodeResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":             0,
		"STATUS_SUCCESS":                 1,
		"STATUS_INVALID_NETWORK":         2,
		"STATUS_INVALID_ORGANIZATION":    3,
		"STATUS_UNSUPPORTED_LINK_SOURCE": 4,
		"STATUS_INVALID_CODE":            5,
	}
)

func (x CompleteLinkingWithCodeResponse_Status) Enum() *CompleteLinkingWithCodeResponse_Status {
	p := new(CompleteLinkingWithCodeResponse_Status)
	*p = x
	return p
}

func (x CompleteLinkingWithCodeResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompleteLinkingWithCodeResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_instrument_v1_instrument_proto_enumTypes[1].Descriptor()
}

func (CompleteLinkingWithCodeResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_instrument_v1_instrument_proto_enumTypes[1]
}

func (x CompleteLinkingWithCodeResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompleteLinkingWithCodeResponse_Status.Descriptor instead.
func (CompleteLinkingWithCodeResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{3, 0}
}

type GetLinkResponse_Status int32

const (
	GetLinkResponse_STATUS_UNSPECIFIED GetLinkResponse_Status = 0
	GetLinkResponse_STATUS_SUCCESS     GetLinkResponse_Status = 1
	// the link source is in a different network and therefore not compatible
	GetLinkResponse_STATUS_LINK_NOT_FOUND GetLinkResponse_Status = 2
)

// Enum value maps for GetLinkResponse_Status.
var (
	GetLinkResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_LINK_NOT_FOUND",
	}
	GetLinkResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":    0,
		"STATUS_SUCCESS":        1,
		"STATUS_LINK_NOT_FOUND": 2,
	}
)

func (x GetLinkResponse_Status) Enum() *GetLinkResponse_Status {
	p := new(GetLinkResponse_Status)
	*p = x
	return p
}

func (x GetLinkResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetLinkResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_instrument_v1_instrument_proto_enumTypes[2].Descriptor()
}

func (GetLinkResponse_Status) Type() protoreflect.EnumType {
	return &file_mica_partner_instrument_v1_instrument_proto_enumTypes[2]
}

func (x GetLinkResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetLinkResponse_Status.Descriptor instead.
func (GetLinkResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{5, 0}
}

type RemoveInstrumentLinkResponse_FailureCode int32

const (
	RemoveInstrumentLinkResponse_FAILURE_CODE_UNSPECIFIED RemoveInstrumentLinkResponse_FailureCode = 0
	// The requested link was not found in the partner system
	RemoveInstrumentLinkResponse_FAILURE_CODE_LINK_NOT_FOUND RemoveInstrumentLinkResponse_FailureCode = 1
	// The requested link was used by 1 or more payments that blocked deletion
	RemoveInstrumentLinkResponse_FAILURE_CODE_LINK_IN_USE RemoveInstrumentLinkResponse_FailureCode = 2
)

// Enum value maps for RemoveInstrumentLinkResponse_FailureCode.
var (
	RemoveInstrumentLinkResponse_FailureCode_name = map[int32]string{
		0: "FAILURE_CODE_UNSPECIFIED",
		1: "FAILURE_CODE_LINK_NOT_FOUND",
		2: "FAILURE_CODE_LINK_IN_USE",
	}
	RemoveInstrumentLinkResponse_FailureCode_value = map[string]int32{
		"FAILURE_CODE_UNSPECIFIED":    0,
		"FAILURE_CODE_LINK_NOT_FOUND": 1,
		"FAILURE_CODE_LINK_IN_USE":    2,
	}
)

func (x RemoveInstrumentLinkResponse_FailureCode) Enum() *RemoveInstrumentLinkResponse_FailureCode {
	p := new(RemoveInstrumentLinkResponse_FailureCode)
	*p = x
	return p
}

func (x RemoveInstrumentLinkResponse_FailureCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveInstrumentLinkResponse_FailureCode) Descriptor() protoreflect.EnumDescriptor {
	return file_mica_partner_instrument_v1_instrument_proto_enumTypes[3].Descriptor()
}

func (RemoveInstrumentLinkResponse_FailureCode) Type() protoreflect.EnumType {
	return &file_mica_partner_instrument_v1_instrument_proto_enumTypes[3]
}

func (x RemoveInstrumentLinkResponse_FailureCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveInstrumentLinkResponse_FailureCode.Descriptor instead.
func (RemoveInstrumentLinkResponse_FailureCode) EnumDescriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{7, 0}
}

type ProvisionUUEKFromLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Use the session key to provision a UUEK
	LinkKey string `protobuf:"bytes,1,opt,name=link_key,json=linkKey,proto3" json:"link_key,omitempty"`
}

func (x *ProvisionUUEKFromLinkRequest) Reset() {
	*x = ProvisionUUEKFromLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionUUEKFromLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionUUEKFromLinkRequest) ProtoMessage() {}

func (x *ProvisionUUEKFromLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionUUEKFromLinkRequest.ProtoReflect.Descriptor instead.
func (*ProvisionUUEKFromLinkRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *ProvisionUUEKFromLinkRequest) GetLinkKey() string {
	if x != nil {
		return x.LinkKey
	}
	return ""
}

type ProvisionUUEKFromLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ProvisionUUEKFromLinkResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The UUEK that can be used to run a transaction
	PartnerUuek string `protobuf:"bytes,3,opt,name=partner_uuek,json=partnerUuek,proto3" json:"partner_uuek,omitempty"`
}

func (x *ProvisionUUEKFromLinkResponse) Reset() {
	*x = ProvisionUUEKFromLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionUUEKFromLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionUUEKFromLinkResponse) ProtoMessage() {}

func (x *ProvisionUUEKFromLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionUUEKFromLinkResponse.ProtoReflect.Descriptor instead.
func (*ProvisionUUEKFromLinkResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionUUEKFromLinkResponse) GetStatus() ProvisionUUEKFromLinkResponse_Status {
	if x != nil {
		return x.Status
	}
	return ProvisionUUEKFromLinkResponse_STATUS_UNSPECIFIED
}

func (x *ProvisionUUEKFromLinkResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ProvisionUUEKFromLinkResponse) GetPartnerUuek() string {
	if x != nil {
		return x.PartnerUuek
	}
	return ""
}

type CompleteLinkingWithCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String code supplied by the end user
	LinkingCode string `protobuf:"bytes,1,opt,name=linking_code,json=linkingCode,proto3" json:"linking_code,omitempty"`
	// On behalf of which organization this link will be created.
	//
	// Types that are assignable to OrganizationIdentifier:
	//
	//	*CompleteLinkingWithCodeRequest_OrganizationKey
	//	*CompleteLinkingWithCodeRequest_OrganizationRef
	OrganizationIdentifier isCompleteLinkingWithCodeRequest_OrganizationIdentifier `protobuf_oneof:"organization_identifier"`
	// If a multi use session is requested (i.e. is_one_time_use is false), setting this flag to true will return both a
	// link session and a uuek
	CreateUuek bool `protobuf:"varint,4,opt,name=create_uuek,json=createUuek,proto3" json:"create_uuek,omitempty"`
}

func (x *CompleteLinkingWithCodeRequest) Reset() {
	*x = CompleteLinkingWithCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteLinkingWithCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteLinkingWithCodeRequest) ProtoMessage() {}

func (x *CompleteLinkingWithCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteLinkingWithCodeRequest.ProtoReflect.Descriptor instead.
func (*CompleteLinkingWithCodeRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{2}
}

func (x *CompleteLinkingWithCodeRequest) GetLinkingCode() string {
	if x != nil {
		return x.LinkingCode
	}
	return ""
}

func (m *CompleteLinkingWithCodeRequest) GetOrganizationIdentifier() isCompleteLinkingWithCodeRequest_OrganizationIdentifier {
	if m != nil {
		return m.OrganizationIdentifier
	}
	return nil
}

func (x *CompleteLinkingWithCodeRequest) GetOrganizationKey() string {
	if x, ok := x.GetOrganizationIdentifier().(*CompleteLinkingWithCodeRequest_OrganizationKey); ok {
		return x.OrganizationKey
	}
	return ""
}

func (x *CompleteLinkingWithCodeRequest) GetOrganizationRef() string {
	if x, ok := x.GetOrganizationIdentifier().(*CompleteLinkingWithCodeRequest_OrganizationRef); ok {
		return x.OrganizationRef
	}
	return ""
}

func (x *CompleteLinkingWithCodeRequest) GetCreateUuek() bool {
	if x != nil {
		return x.CreateUuek
	}
	return false
}

type isCompleteLinkingWithCodeRequest_OrganizationIdentifier interface {
	isCompleteLinkingWithCodeRequest_OrganizationIdentifier()
}

type CompleteLinkingWithCodeRequest_OrganizationKey struct {
	OrganizationKey string `protobuf:"bytes,2,opt,name=organization_key,json=organizationKey,proto3,oneof"`
}

type CompleteLinkingWithCodeRequest_OrganizationRef struct {
	// The primary key for this organization at the Partner.
	OrganizationRef string `protobuf:"bytes,3,opt,name=organization_ref,json=organizationRef,proto3,oneof"`
}

func (*CompleteLinkingWithCodeRequest_OrganizationKey) isCompleteLinkingWithCodeRequest_OrganizationIdentifier() {
}

func (*CompleteLinkingWithCodeRequest_OrganizationRef) isCompleteLinkingWithCodeRequest_OrganizationIdentifier() {
}

type CompleteLinkingWithCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status CompleteLinkingWithCodeResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.instrument.v1.CompleteLinkingWithCodeResponse_Status" json:"status,omitempty"`
	Error  *v1.Error                              `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// If the requested link is one time use there will be no link session key
	IsOneTimeUse bool `protobuf:"varint,3,opt,name=is_one_time_use,json=isOneTimeUse,proto3" json:"is_one_time_use,omitempty"`
	// If it is not a one time use the session key is the token to request other UUEKs in the future
	LinkKey string `protobuf:"bytes,4,opt,name=link_key,json=linkKey,proto3" json:"link_key,omitempty"`
	// If a uuek was requested or if one time use was requested a uuek is minted
	Uuek           string                   `protobuf:"bytes,5,opt,name=uuek,proto3" json:"uuek,omitempty"`
	InstrumentData *v1.LinkedInstrumentData `protobuf:"bytes,7,opt,name=instrument_data,json=instrumentData,proto3" json:"instrument_data,omitempty"`
	// Any claims that are associated with the link as provided by the Service Provider
	Claims *v1.InstrumentLinkClaims `protobuf:"bytes,6,opt,name=claims,proto3" json:"claims,omitempty"`
}

func (x *CompleteLinkingWithCodeResponse) Reset() {
	*x = CompleteLinkingWithCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteLinkingWithCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteLinkingWithCodeResponse) ProtoMessage() {}

func (x *CompleteLinkingWithCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteLinkingWithCodeResponse.ProtoReflect.Descriptor instead.
func (*CompleteLinkingWithCodeResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{3}
}

func (x *CompleteLinkingWithCodeResponse) GetStatus() CompleteLinkingWithCodeResponse_Status {
	if x != nil {
		return x.Status
	}
	return CompleteLinkingWithCodeResponse_STATUS_UNSPECIFIED
}

func (x *CompleteLinkingWithCodeResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *CompleteLinkingWithCodeResponse) GetIsOneTimeUse() bool {
	if x != nil {
		return x.IsOneTimeUse
	}
	return false
}

func (x *CompleteLinkingWithCodeResponse) GetLinkKey() string {
	if x != nil {
		return x.LinkKey
	}
	return ""
}

func (x *CompleteLinkingWithCodeResponse) GetUuek() string {
	if x != nil {
		return x.Uuek
	}
	return ""
}

func (x *CompleteLinkingWithCodeResponse) GetInstrumentData() *v1.LinkedInstrumentData {
	if x != nil {
		return x.InstrumentData
	}
	return nil
}

func (x *CompleteLinkingWithCodeResponse) GetClaims() *v1.InstrumentLinkClaims {
	if x != nil {
		return x.Claims
	}
	return nil
}

type GetLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkKey string `protobuf:"bytes,1,opt,name=link_key,json=linkKey,proto3" json:"link_key,omitempty"`
}

func (x *GetLinkRequest) Reset() {
	*x = GetLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkRequest) ProtoMessage() {}

func (x *GetLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkRequest.ProtoReflect.Descriptor instead.
func (*GetLinkRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{4}
}

func (x *GetLinkRequest) GetLinkKey() string {
	if x != nil {
		return x.LinkKey
	}
	return ""
}

type GetLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GetLinkResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=mica.partner.instrument.v1.GetLinkResponse_Status" json:"status,omitempty"`
	Error  *v1.Error              `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Link   *Link                  `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *GetLinkResponse) Reset() {
	*x = GetLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLinkResponse) ProtoMessage() {}

func (x *GetLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLinkResponse.ProtoReflect.Descriptor instead.
func (*GetLinkResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{5}
}

func (x *GetLinkResponse) GetStatus() GetLinkResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetLinkResponse_STATUS_UNSPECIFIED
}

func (x *GetLinkResponse) GetError() *v1.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetLinkResponse) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

type RemoveInstrumentLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LinkKey string `protobuf:"bytes,1,opt,name=link_key,json=linkKey,proto3" json:"link_key,omitempty"`
}

func (x *RemoveInstrumentLinkRequest) Reset() {
	*x = RemoveInstrumentLinkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentLinkRequest) ProtoMessage() {}

func (x *RemoveInstrumentLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentLinkRequest.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentLinkRequest) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveInstrumentLinkRequest) GetLinkKey() string {
	if x != nil {
		return x.LinkKey
	}
	return ""
}

type RemoveInstrumentLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unless an error is encountered, Mica will respond with one of these results.
	//
	// Types that are assignable to Result:
	//
	//	*RemoveInstrumentLinkResponse_Success_
	//	*RemoveInstrumentLinkResponse_Failure_
	Result isRemoveInstrumentLinkResponse_Result `protobuf_oneof:"result"`
}

func (x *RemoveInstrumentLinkResponse) Reset() {
	*x = RemoveInstrumentLinkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentLinkResponse) ProtoMessage() {}

func (x *RemoveInstrumentLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentLinkResponse.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentLinkResponse) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{7}
}

func (m *RemoveInstrumentLinkResponse) GetResult() isRemoveInstrumentLinkResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *RemoveInstrumentLinkResponse) GetSuccess() *RemoveInstrumentLinkResponse_Success {
	if x, ok := x.GetResult().(*RemoveInstrumentLinkResponse_Success_); ok {
		return x.Success
	}
	return nil
}

func (x *RemoveInstrumentLinkResponse) GetFailure() *RemoveInstrumentLinkResponse_Failure {
	if x, ok := x.GetResult().(*RemoveInstrumentLinkResponse_Failure_); ok {
		return x.Failure
	}
	return nil
}

type isRemoveInstrumentLinkResponse_Result interface {
	isRemoveInstrumentLinkResponse_Result()
}

type RemoveInstrumentLinkResponse_Success_ struct {
	Success *RemoveInstrumentLinkResponse_Success `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type RemoveInstrumentLinkResponse_Failure_ struct {
	Failure *RemoveInstrumentLinkResponse_Failure `protobuf:"bytes,2,opt,name=failure,proto3,oneof"`
}

func (*RemoveInstrumentLinkResponse_Success_) isRemoveInstrumentLinkResponse_Result() {}

func (*RemoveInstrumentLinkResponse_Failure_) isRemoveInstrumentLinkResponse_Result() {}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key            string                   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	InstrumentData *v1.LinkedInstrumentData `protobuf:"bytes,2,opt,name=instrument_data,json=instrumentData,proto3" json:"instrument_data,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{8}
}

func (x *Link) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Link) GetInstrumentData() *v1.LinkedInstrumentData {
	if x != nil {
		return x.InstrumentData
	}
	return nil
}

type RemoveInstrumentLinkResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveInstrumentLinkResponse_Success) Reset() {
	*x = RemoveInstrumentLinkResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentLinkResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentLinkResponse_Success) ProtoMessage() {}

func (x *RemoveInstrumentLinkResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentLinkResponse_Success.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentLinkResponse_Success) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{7, 0}
}

type RemoveInstrumentLinkResponse_Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Structured failure code for cause of failure
	Code    RemoveInstrumentLinkResponse_FailureCode `protobuf:"varint,1,opt,name=code,proto3,enum=mica.partner.instrument.v1.RemoveInstrumentLinkResponse_FailureCode" json:"code,omitempty"`
	Message string                                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RemoveInstrumentLinkResponse_Failure) Reset() {
	*x = RemoveInstrumentLinkResponse_Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveInstrumentLinkResponse_Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveInstrumentLinkResponse_Failure) ProtoMessage() {}

func (x *RemoveInstrumentLinkResponse_Failure) ProtoReflect() protoreflect.Message {
	mi := &file_mica_partner_instrument_v1_instrument_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveInstrumentLinkResponse_Failure.ProtoReflect.Descriptor instead.
func (*RemoveInstrumentLinkResponse_Failure) Descriptor() ([]byte, []int) {
	return file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP(), []int{7, 1}
}

func (x *RemoveInstrumentLinkResponse_Failure) GetCode() RemoveInstrumentLinkResponse_FailureCode {
	if x != nil {
		return x.Code
	}
	return RemoveInstrumentLinkResponse_FAILURE_CODE_UNSPECIFIED
}

func (x *RemoveInstrumentLinkResponse_Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_mica_partner_instrument_v1_instrument_proto protoreflect.FileDescriptor

var file_mica_partner_instrument_v1_instrument_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x6d, 0x69, 0x63, 0x61, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x6d, 0x69, 0x63,
	0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x1c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x55, 0x45, 0x4b, 0x46, 0x72, 0x6f, 0x6d,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x6c,
	0x69, 0x6e, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x1b, 0x18, 0x32, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x4b, 0x65,
	0x79, 0x22, 0xc6, 0x02, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55,
	0x55, 0x45, 0x4b, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x55, 0x45, 0x4b, 0x46, 0x72,
	0x6f, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x65, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55,
	0x75, 0x65, 0x6b, 0x22, 0x75, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x04, 0x22, 0xeb, 0x01, 0x0a, 0x1e, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x34, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x18, 0x32, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x64, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x75, 0x65, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x75, 0x65, 0x6b, 0x42, 0x19, 0x0a,
	0x17, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xd0, 0x04, 0x0a, 0x1f, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x65, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x65,
	0x6b, 0x12, 0x53, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x63,
	0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x10, 0x02, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x4f, 0x52, 0x47, 0x41, 0x4e, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x22,
	0x0a, 0x1e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10, 0x05, 0x22, 0x2b, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0x97, 0x02, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x69, 0x63, 0x61,
	0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x22, 0x4f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x02, 0x22, 0x38, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0xda, 0x03, 0x0a,
	0x1c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5c, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x1a, 0x09, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x1a, 0x7d, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x58, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x44, 0x2e,
	0x6d, 0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x0b, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x49, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x10, 0x02, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x04, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x52, 0x0a, 0x1d, 0x69, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x61, 0x2e, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2e, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5a, 0x19, 0x6d, 0x69, 0x63, 0x61,
	0x2f, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mica_partner_instrument_v1_instrument_proto_rawDescOnce sync.Once
	file_mica_partner_instrument_v1_instrument_proto_rawDescData = file_mica_partner_instrument_v1_instrument_proto_rawDesc
)

func file_mica_partner_instrument_v1_instrument_proto_rawDescGZIP() []byte {
	file_mica_partner_instrument_v1_instrument_proto_rawDescOnce.Do(func() {
		file_mica_partner_instrument_v1_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(file_mica_partner_instrument_v1_instrument_proto_rawDescData)
	})
	return file_mica_partner_instrument_v1_instrument_proto_rawDescData
}

var file_mica_partner_instrument_v1_instrument_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_mica_partner_instrument_v1_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mica_partner_instrument_v1_instrument_proto_goTypes = []interface{}{
	(ProvisionUUEKFromLinkResponse_Status)(0),     // 0: mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse.Status
	(CompleteLinkingWithCodeResponse_Status)(0),   // 1: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.Status
	(GetLinkResponse_Status)(0),                   // 2: mica.partner.instrument.v1.GetLinkResponse.Status
	(RemoveInstrumentLinkResponse_FailureCode)(0), // 3: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.FailureCode
	(*ProvisionUUEKFromLinkRequest)(nil),          // 4: mica.partner.instrument.v1.ProvisionUUEKFromLinkRequest
	(*ProvisionUUEKFromLinkResponse)(nil),         // 5: mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse
	(*CompleteLinkingWithCodeRequest)(nil),        // 6: mica.partner.instrument.v1.CompleteLinkingWithCodeRequest
	(*CompleteLinkingWithCodeResponse)(nil),       // 7: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse
	(*GetLinkRequest)(nil),                        // 8: mica.partner.instrument.v1.GetLinkRequest
	(*GetLinkResponse)(nil),                       // 9: mica.partner.instrument.v1.GetLinkResponse
	(*RemoveInstrumentLinkRequest)(nil),           // 10: mica.partner.instrument.v1.RemoveInstrumentLinkRequest
	(*RemoveInstrumentLinkResponse)(nil),          // 11: mica.partner.instrument.v1.RemoveInstrumentLinkResponse
	(*Link)(nil),                                  // 12: mica.partner.instrument.v1.Link
	(*RemoveInstrumentLinkResponse_Success)(nil),  // 13: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.Success
	(*RemoveInstrumentLinkResponse_Failure)(nil),  // 14: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.Failure
	(*v1.Error)(nil),                              // 15: micashared.common.v1.Error
	(*v1.LinkedInstrumentData)(nil),               // 16: micashared.common.v1.LinkedInstrumentData
	(*v1.InstrumentLinkClaims)(nil),               // 17: micashared.common.v1.InstrumentLinkClaims
}
var file_mica_partner_instrument_v1_instrument_proto_depIdxs = []int32{
	0,  // 0: mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse.status:type_name -> mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse.Status
	15, // 1: mica.partner.instrument.v1.ProvisionUUEKFromLinkResponse.error:type_name -> micashared.common.v1.Error
	1,  // 2: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.status:type_name -> mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.Status
	15, // 3: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.error:type_name -> micashared.common.v1.Error
	16, // 4: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.instrument_data:type_name -> micashared.common.v1.LinkedInstrumentData
	17, // 5: mica.partner.instrument.v1.CompleteLinkingWithCodeResponse.claims:type_name -> micashared.common.v1.InstrumentLinkClaims
	2,  // 6: mica.partner.instrument.v1.GetLinkResponse.status:type_name -> mica.partner.instrument.v1.GetLinkResponse.Status
	15, // 7: mica.partner.instrument.v1.GetLinkResponse.error:type_name -> micashared.common.v1.Error
	12, // 8: mica.partner.instrument.v1.GetLinkResponse.link:type_name -> mica.partner.instrument.v1.Link
	13, // 9: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.success:type_name -> mica.partner.instrument.v1.RemoveInstrumentLinkResponse.Success
	14, // 10: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.failure:type_name -> mica.partner.instrument.v1.RemoveInstrumentLinkResponse.Failure
	16, // 11: mica.partner.instrument.v1.Link.instrument_data:type_name -> micashared.common.v1.LinkedInstrumentData
	3,  // 12: mica.partner.instrument.v1.RemoveInstrumentLinkResponse.Failure.code:type_name -> mica.partner.instrument.v1.RemoveInstrumentLinkResponse.FailureCode
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_mica_partner_instrument_v1_instrument_proto_init() }
func file_mica_partner_instrument_v1_instrument_proto_init() {
	if File_mica_partner_instrument_v1_instrument_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionUUEKFromLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionUUEKFromLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteLinkingWithCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteLinkingWithCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentLinkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentLinkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentLinkResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mica_partner_instrument_v1_instrument_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveInstrumentLinkResponse_Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mica_partner_instrument_v1_instrument_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CompleteLinkingWithCodeRequest_OrganizationKey)(nil),
		(*CompleteLinkingWithCodeRequest_OrganizationRef)(nil),
	}
	file_mica_partner_instrument_v1_instrument_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*RemoveInstrumentLinkResponse_Success_)(nil),
		(*RemoveInstrumentLinkResponse_Failure_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mica_partner_instrument_v1_instrument_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mica_partner_instrument_v1_instrument_proto_goTypes,
		DependencyIndexes: file_mica_partner_instrument_v1_instrument_proto_depIdxs,
		EnumInfos:         file_mica_partner_instrument_v1_instrument_proto_enumTypes,
		MessageInfos:      file_mica_partner_instrument_v1_instrument_proto_msgTypes,
	}.Build()
	File_mica_partner_instrument_v1_instrument_proto = out.File
	file_mica_partner_instrument_v1_instrument_proto_rawDesc = nil
	file_mica_partner_instrument_v1_instrument_proto_goTypes = nil
	file_mica_partner_instrument_v1_instrument_proto_depIdxs = nil
}
