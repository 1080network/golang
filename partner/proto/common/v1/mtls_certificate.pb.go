// Copyright (c) 2022 Mica. All rights reserved. All software, including, without limitation, all source
// code and object code, is the intellectual property of Mica, Inc. and is protected by copyright, trademark and
// other intellectual property laws (collective "Mica Software"). You may not use, copy, reproduce, download, store,
// post, broadcast, transmit, modify, sell or make available to the public content from the Mica Software without a
// valid license or the prior written approval of Mica, Inc. Mica, its logos, slogans, taglines,
// products, feature names, and other trademarks are trademarks of Mica, Inc. and may not be used without
// permission.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.8
// source: common/v1/mtls_certificate.proto

package commonv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GenerateMTLSCertificateResponse_Status int32

const (
	GenerateMTLSCertificateResponse_STATUS_UNSPECIFIED GenerateMTLSCertificateResponse_Status = 0
	GenerateMTLSCertificateResponse_STATUS_SUCCESS     GenerateMTLSCertificateResponse_Status = 1
	GenerateMTLSCertificateResponse_STATUS_ERROR       GenerateMTLSCertificateResponse_Status = 2
)

// Enum value maps for GenerateMTLSCertificateResponse_Status.
var (
	GenerateMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	GenerateMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x GenerateMTLSCertificateResponse_Status) Enum() *GenerateMTLSCertificateResponse_Status {
	p := new(GenerateMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x GenerateMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[0].Descriptor()
}

func (GenerateMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[0]
}

func (x GenerateMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateMTLSCertificateResponse_Status.Descriptor instead.
func (GenerateMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{3, 0}
}

type UpdateMTLSCertificateResponse_Status int32

const (
	UpdateMTLSCertificateResponse_STATUS_UNSPECIFIED UpdateMTLSCertificateResponse_Status = 0
	UpdateMTLSCertificateResponse_STATUS_SUCCESS     UpdateMTLSCertificateResponse_Status = 1
	UpdateMTLSCertificateResponse_STATUS_ERROR       UpdateMTLSCertificateResponse_Status = 2
)

// Enum value maps for UpdateMTLSCertificateResponse_Status.
var (
	UpdateMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	UpdateMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x UpdateMTLSCertificateResponse_Status) Enum() *UpdateMTLSCertificateResponse_Status {
	p := new(UpdateMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x UpdateMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[1].Descriptor()
}

func (UpdateMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[1]
}

func (x UpdateMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateMTLSCertificateResponse_Status.Descriptor instead.
func (UpdateMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{5, 0}
}

type GetMTLSCertificateResponse_Status int32

const (
	GetMTLSCertificateResponse_STATUS_UNSPECIFIED GetMTLSCertificateResponse_Status = 0
	GetMTLSCertificateResponse_STATUS_SUCCESS     GetMTLSCertificateResponse_Status = 1
	GetMTLSCertificateResponse_STATUS_NOT_FOUND   GetMTLSCertificateResponse_Status = 2
	GetMTLSCertificateResponse_STATUS_ERROR       GetMTLSCertificateResponse_Status = 3
)

// Enum value maps for GetMTLSCertificateResponse_Status.
var (
	GetMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_NOT_FOUND",
		3: "STATUS_ERROR",
	}
	GetMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_NOT_FOUND":   2,
		"STATUS_ERROR":       3,
	}
)

func (x GetMTLSCertificateResponse_Status) Enum() *GetMTLSCertificateResponse_Status {
	p := new(GetMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x GetMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[2].Descriptor()
}

func (GetMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[2]
}

func (x GetMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetMTLSCertificateResponse_Status.Descriptor instead.
func (GetMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{7, 0}
}

type SearchMTLSCertificateResponse_Status int32

const (
	SearchMTLSCertificateResponse_STATUS_UNSPECIFIED SearchMTLSCertificateResponse_Status = 0
	SearchMTLSCertificateResponse_STATUS_SUCCESS     SearchMTLSCertificateResponse_Status = 1
	SearchMTLSCertificateResponse_STATUS_ERROR       SearchMTLSCertificateResponse_Status = 2
)

// Enum value maps for SearchMTLSCertificateResponse_Status.
var (
	SearchMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchMTLSCertificateResponse_Status) Enum() *SearchMTLSCertificateResponse_Status {
	p := new(SearchMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x SearchMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[3].Descriptor()
}

func (SearchMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[3]
}

func (x SearchMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchMTLSCertificateResponse_Status.Descriptor instead.
func (SearchMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{9, 0}
}

type GenerateClientMTLSCertificateResponse_Status int32

const (
	GenerateClientMTLSCertificateResponse_STATUS_UNSPECIFIED GenerateClientMTLSCertificateResponse_Status = 0
	GenerateClientMTLSCertificateResponse_STATUS_SUCCESS     GenerateClientMTLSCertificateResponse_Status = 1
	GenerateClientMTLSCertificateResponse_STATUS_ERROR       GenerateClientMTLSCertificateResponse_Status = 2
)

// Enum value maps for GenerateClientMTLSCertificateResponse_Status.
var (
	GenerateClientMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	GenerateClientMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x GenerateClientMTLSCertificateResponse_Status) Enum() *GenerateClientMTLSCertificateResponse_Status {
	p := new(GenerateClientMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x GenerateClientMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerateClientMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[4].Descriptor()
}

func (GenerateClientMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[4]
}

func (x GenerateClientMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerateClientMTLSCertificateResponse_Status.Descriptor instead.
func (GenerateClientMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{12, 0}
}

type UpdateClientMTLSCertificateResponse_Status int32

const (
	UpdateClientMTLSCertificateResponse_STATUS_UNSPECIFIED UpdateClientMTLSCertificateResponse_Status = 0
	UpdateClientMTLSCertificateResponse_STATUS_SUCCESS     UpdateClientMTLSCertificateResponse_Status = 1
	UpdateClientMTLSCertificateResponse_STATUS_ERROR       UpdateClientMTLSCertificateResponse_Status = 2
)

// Enum value maps for UpdateClientMTLSCertificateResponse_Status.
var (
	UpdateClientMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	UpdateClientMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x UpdateClientMTLSCertificateResponse_Status) Enum() *UpdateClientMTLSCertificateResponse_Status {
	p := new(UpdateClientMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x UpdateClientMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateClientMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[5].Descriptor()
}

func (UpdateClientMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[5]
}

func (x UpdateClientMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateClientMTLSCertificateResponse_Status.Descriptor instead.
func (UpdateClientMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{14, 0}
}

type SearchClientMTLSCertificateResponse_Status int32

const (
	SearchClientMTLSCertificateResponse_STATUS_UNSPECIFIED SearchClientMTLSCertificateResponse_Status = 0
	SearchClientMTLSCertificateResponse_STATUS_SUCCESS     SearchClientMTLSCertificateResponse_Status = 1
	SearchClientMTLSCertificateResponse_STATUS_ERROR       SearchClientMTLSCertificateResponse_Status = 2
)

// Enum value maps for SearchClientMTLSCertificateResponse_Status.
var (
	SearchClientMTLSCertificateResponse_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_SUCCESS",
		2: "STATUS_ERROR",
	}
	SearchClientMTLSCertificateResponse_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_SUCCESS":     1,
		"STATUS_ERROR":       2,
	}
)

func (x SearchClientMTLSCertificateResponse_Status) Enum() *SearchClientMTLSCertificateResponse_Status {
	p := new(SearchClientMTLSCertificateResponse_Status)
	*p = x
	return p
}

func (x SearchClientMTLSCertificateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchClientMTLSCertificateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_mtls_certificate_proto_enumTypes[6].Descriptor()
}

func (SearchClientMTLSCertificateResponse_Status) Type() protoreflect.EnumType {
	return &file_common_v1_mtls_certificate_proto_enumTypes[6]
}

func (x SearchClientMTLSCertificateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchClientMTLSCertificateResponse_Status.Descriptor instead.
func (SearchClientMTLSCertificateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{16, 0}
}

type MTLSCertificateSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//PEM encoded string
	PemCsr string `protobuf:"bytes,1,opt,name=pem_csr,json=pemCsr,proto3" json:"pem_csr,omitempty"`
}

func (x *MTLSCertificateSignatureRequest) Reset() {
	*x = MTLSCertificateSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MTLSCertificateSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MTLSCertificateSignatureRequest) ProtoMessage() {}

func (x *MTLSCertificateSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MTLSCertificateSignatureRequest.ProtoReflect.Descriptor instead.
func (*MTLSCertificateSignatureRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *MTLSCertificateSignatureRequest) GetPemCsr() string {
	if x != nil {
		return x.PemCsr
	}
	return ""
}

type MTLSCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//Serial number of the generated certificate
	SerialNumber string                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Issued       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=issued,proto3" json:"issued,omitempty"`
	Expiry       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	//whether this certificate can be used or has been disallowed for access regardless of expiration
	Enabled bool `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	//The pem encoded certificate generated
	PemCertificate string `protobuf:"bytes,5,opt,name=pem_certificate,json=pemCertificate,proto3" json:"pem_certificate,omitempty"`
	//The pem encoded issuing CA
	PemIssuingCa string `protobuf:"bytes,6,opt,name=pem_issuing_ca,json=pemIssuingCa,proto3" json:"pem_issuing_ca,omitempty"`
	//The pem encoded certificate chain
	PemCaChain []string `protobuf:"bytes,7,rep,name=pem_ca_chain,json=pemCaChain,proto3" json:"pem_ca_chain,omitempty"`
	//Aggregate all in one pem bundle
	PemBundle string `protobuf:"bytes,8,opt,name=pem_bundle,json=pemBundle,proto3" json:"pem_bundle,omitempty"`
	//The roles the certificate has
	Roles []string `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *MTLSCertificate) Reset() {
	*x = MTLSCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MTLSCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MTLSCertificate) ProtoMessage() {}

func (x *MTLSCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MTLSCertificate.ProtoReflect.Descriptor instead.
func (*MTLSCertificate) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{1}
}

func (x *MTLSCertificate) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *MTLSCertificate) GetIssued() *timestamppb.Timestamp {
	if x != nil {
		return x.Issued
	}
	return nil
}

func (x *MTLSCertificate) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *MTLSCertificate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MTLSCertificate) GetPemCertificate() string {
	if x != nil {
		return x.PemCertificate
	}
	return ""
}

func (x *MTLSCertificate) GetPemIssuingCa() string {
	if x != nil {
		return x.PemIssuingCa
	}
	return ""
}

func (x *MTLSCertificate) GetPemCaChain() []string {
	if x != nil {
		return x.PemCaChain
	}
	return nil
}

func (x *MTLSCertificate) GetPemBundle() string {
	if x != nil {
		return x.PemBundle
	}
	return ""
}

func (x *MTLSCertificate) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GenerateMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Csr *MTLSCertificateSignatureRequest `protobuf:"bytes,1,opt,name=csr,proto3" json:"csr,omitempty"`
	//TODO we should probably enum this with the few roles that are allowed for mTLS?
	Roles []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GenerateMTLSCertificateRequest) Reset() {
	*x = GenerateMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMTLSCertificateRequest) ProtoMessage() {}

func (x *GenerateMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*GenerateMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{2}
}

func (x *GenerateMTLSCertificateRequest) GetCsr() *MTLSCertificateSignatureRequest {
	if x != nil {
		return x.Csr
	}
	return nil
}

func (x *GenerateMTLSCertificateRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GenerateMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      GenerateMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.GenerateMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error       *Error                                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificate *MTLSCertificate                       `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *GenerateMTLSCertificateResponse) Reset() {
	*x = GenerateMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateMTLSCertificateResponse) ProtoMessage() {}

func (x *GenerateMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*GenerateMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateMTLSCertificateResponse) GetStatus() GenerateMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return GenerateMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *GenerateMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GenerateMTLSCertificateResponse) GetCertificate() *MTLSCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type UpdateMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Enabled      bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *UpdateMTLSCertificateRequest) Reset() {
	*x = UpdateMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMTLSCertificateRequest) ProtoMessage() {}

func (x *UpdateMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*UpdateMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateMTLSCertificateRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *UpdateMTLSCertificateRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       UpdateMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.UpdateMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error        *Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SerialNumber string                               `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *UpdateMTLSCertificateResponse) Reset() {
	*x = UpdateMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMTLSCertificateResponse) ProtoMessage() {}

func (x *UpdateMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*UpdateMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMTLSCertificateResponse) GetStatus() UpdateMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *UpdateMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateMTLSCertificateResponse) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type GetMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *GetMTLSCertificateRequest) Reset() {
	*x = GetMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMTLSCertificateRequest) ProtoMessage() {}

func (x *GetMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*GetMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{6}
}

func (x *GetMTLSCertificateRequest) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type GetMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      GetMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.GetMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error       *Error                            `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificate *MTLSCertificate                  `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *GetMTLSCertificateResponse) Reset() {
	*x = GetMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMTLSCertificateResponse) ProtoMessage() {}

func (x *GetMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*GetMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{7}
}

func (x *GetMTLSCertificateResponse) GetStatus() GetMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return GetMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *GetMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetMTLSCertificateResponse) GetCertificate() *MTLSCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type SearchMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchMTLSCertificateRequest) Reset() {
	*x = SearchMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMTLSCertificateRequest) ProtoMessage() {}

func (x *SearchMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*SearchMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{8}
}

type SearchMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       SearchMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.SearchMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error        *Error                               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificates []*MTLSCertificate                   `protobuf:"bytes,3,rep,name=certificates,proto3" json:"certificates,omitempty"`
}

func (x *SearchMTLSCertificateResponse) Reset() {
	*x = SearchMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMTLSCertificateResponse) ProtoMessage() {}

func (x *SearchMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*SearchMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{9}
}

func (x *SearchMTLSCertificateResponse) GetStatus() SearchMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *SearchMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchMTLSCertificateResponse) GetCertificates() []*MTLSCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

type ClientMTLSCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateRefKey string `protobuf:"bytes,1,opt,name=certificate_ref_key,json=certificateRefKey,proto3" json:"certificate_ref_key,omitempty"` // Used for lookups NOT the actual private key.
	DisplayName       string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CrtPem            string `protobuf:"bytes,3,opt,name=crt_pem,json=crtPem,proto3" json:"crt_pem,omitempty"`
	CsrPem            string `protobuf:"bytes,4,opt,name=csr_pem,json=csrPem,proto3" json:"csr_pem,omitempty"`
	RootcaBundlePem   string `protobuf:"bytes,5,opt,name=rootca_bundle_pem,json=rootcaBundlePem,proto3" json:"rootca_bundle_pem,omitempty"`
	Enabled           bool   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ClientMTLSCertificate) Reset() {
	*x = ClientMTLSCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMTLSCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMTLSCertificate) ProtoMessage() {}

func (x *ClientMTLSCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMTLSCertificate.ProtoReflect.Descriptor instead.
func (*ClientMTLSCertificate) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{10}
}

func (x *ClientMTLSCertificate) GetCertificateRefKey() string {
	if x != nil {
		return x.CertificateRefKey
	}
	return ""
}

func (x *ClientMTLSCertificate) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ClientMTLSCertificate) GetCrtPem() string {
	if x != nil {
		return x.CrtPem
	}
	return ""
}

func (x *ClientMTLSCertificate) GetCsrPem() string {
	if x != nil {
		return x.CsrPem
	}
	return ""
}

func (x *ClientMTLSCertificate) GetRootcaBundlePem() string {
	if x != nil {
		return x.RootcaBundlePem
	}
	return ""
}

func (x *ClientMTLSCertificate) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// We generate the db entry and return the csr to the user so they can sign it.
type GenerateClientMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *GenerateClientMTLSCertificateRequest) Reset() {
	*x = GenerateClientMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateClientMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateClientMTLSCertificateRequest) ProtoMessage() {}

func (x *GenerateClientMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateClientMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*GenerateClientMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{11}
}

func (x *GenerateClientMTLSCertificateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type GenerateClientMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status GenerateClientMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.GenerateClientMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error  *Error                                       `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// This will be returned with certificate_ref_key, display_name, csr_pem, and enabled.
	CertificateToSign *ClientMTLSCertificate `protobuf:"bytes,3,opt,name=certificate_to_sign,json=certificateToSign,proto3" json:"certificate_to_sign,omitempty"`
}

func (x *GenerateClientMTLSCertificateResponse) Reset() {
	*x = GenerateClientMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateClientMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateClientMTLSCertificateResponse) ProtoMessage() {}

func (x *GenerateClientMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateClientMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*GenerateClientMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{12}
}

func (x *GenerateClientMTLSCertificateResponse) GetStatus() GenerateClientMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return GenerateClientMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *GenerateClientMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GenerateClientMTLSCertificateResponse) GetCertificateToSign() *ClientMTLSCertificate {
	if x != nil {
		return x.CertificateToSign
	}
	return nil
}

type UpdateClientMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateRefKey    string `protobuf:"bytes,1,opt,name=certificate_ref_key,json=certificateRefKey,proto3" json:"certificate_ref_key,omitempty"`
	DisplayName          string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	SignedCertPemFromCsr string `protobuf:"bytes,3,opt,name=signed_cert_pem_from_csr,json=signedCertPemFromCsr,proto3" json:"signed_cert_pem_from_csr,omitempty"`
	RootcaBundlePem      string `protobuf:"bytes,4,opt,name=rootca_bundle_pem,json=rootcaBundlePem,proto3" json:"rootca_bundle_pem,omitempty"`
	Enabled              bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *UpdateClientMTLSCertificateRequest) Reset() {
	*x = UpdateClientMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientMTLSCertificateRequest) ProtoMessage() {}

func (x *UpdateClientMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateClientMTLSCertificateRequest) GetCertificateRefKey() string {
	if x != nil {
		return x.CertificateRefKey
	}
	return ""
}

func (x *UpdateClientMTLSCertificateRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateClientMTLSCertificateRequest) GetSignedCertPemFromCsr() string {
	if x != nil {
		return x.SignedCertPemFromCsr
	}
	return ""
}

func (x *UpdateClientMTLSCertificateRequest) GetRootcaBundlePem() string {
	if x != nil {
		return x.RootcaBundlePem
	}
	return ""
}

func (x *UpdateClientMTLSCertificateRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateClientMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      UpdateClientMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.UpdateClientMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error       *Error                                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificate *ClientMTLSCertificate                     `protobuf:"bytes,3,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *UpdateClientMTLSCertificateResponse) Reset() {
	*x = UpdateClientMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientMTLSCertificateResponse) ProtoMessage() {}

func (x *UpdateClientMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*UpdateClientMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateClientMTLSCertificateResponse) GetStatus() UpdateClientMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return UpdateClientMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *UpdateClientMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UpdateClientMTLSCertificateResponse) GetCertificate() *ClientMTLSCertificate {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type SearchClientMTLSCertificateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchClientMTLSCertificateRequest) Reset() {
	*x = SearchClientMTLSCertificateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClientMTLSCertificateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClientMTLSCertificateRequest) ProtoMessage() {}

func (x *SearchClientMTLSCertificateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClientMTLSCertificateRequest.ProtoReflect.Descriptor instead.
func (*SearchClientMTLSCertificateRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{15}
}

type SearchClientMTLSCertificateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       SearchClientMTLSCertificateResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.SearchClientMTLSCertificateResponse_Status" json:"status,omitempty"`
	Error        *Error                                     `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Certificates []*ClientMTLSCertificate                   `protobuf:"bytes,3,rep,name=certificates,proto3" json:"certificates,omitempty"`
}

func (x *SearchClientMTLSCertificateResponse) Reset() {
	*x = SearchClientMTLSCertificateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_mtls_certificate_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchClientMTLSCertificateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchClientMTLSCertificateResponse) ProtoMessage() {}

func (x *SearchClientMTLSCertificateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_mtls_certificate_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchClientMTLSCertificateResponse.ProtoReflect.Descriptor instead.
func (*SearchClientMTLSCertificateResponse) Descriptor() ([]byte, []int) {
	return file_common_v1_mtls_certificate_proto_rawDescGZIP(), []int{16}
}

func (x *SearchClientMTLSCertificateResponse) GetStatus() SearchClientMTLSCertificateResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchClientMTLSCertificateResponse_STATUS_UNSPECIFIED
}

func (x *SearchClientMTLSCertificateResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SearchClientMTLSCertificateResponse) GetCertificates() []*ClientMTLSCertificate {
	if x != nil {
		return x.Certificates
	}
	return nil
}

var File_common_v1_mtls_certificate_proto protoreflect.FileDescriptor

var file_common_v1_mtls_certificate_proto_rawDesc = []byte{
	0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x74, 0x6c, 0x73,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43,
	0x0a, 0x1f, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x65, 0x6d, 0x5f, 0x63, 0x73, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x65, 0x6d,
	0x43, 0x73, 0x72, 0x22, 0xf1, 0x02, 0x0a, 0x0f, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65, 0x6d, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x6d, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x65,
	0x6d, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x65, 0x6d, 0x49, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x43, 0x61,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x65, 0x6d, 0x5f, 0x63, 0x61, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x6d, 0x43, 0x61, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x6d, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x6d, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x03, 0x63, 0x73,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x03, 0x63,
	0x73, 0x72, 0x12, 0x1e, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d,
	0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x54, 0x4c, 0x53, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x54, 0x4c, 0x53, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22,
	0x66, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x54, 0x4c, 0x53,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x54,
	0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x22, 0xa6, 0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x3c, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x5c, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0x1e, 0x0a, 0x1c, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x98, 0x02, 0x0a, 0x1d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3e,
	0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0xed, 0x01, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x39, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x66, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa,
	0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x72, 0x74, 0x50, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x73, 0x72, 0x5f, 0x70,
	0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x73, 0x72, 0x50, 0x65, 0x6d,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x6f, 0x74, 0x63, 0x61, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x5f, 0x70, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x6f,
	0x74, 0x63, 0x61, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x49, 0x0a, 0x24, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xba, 0x02, 0x0a, 0x25, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x50, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x11, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x80,
	0x02, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x13, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x1e, 0x18, 0x32, 0x52, 0x11, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x4b, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x5f, 0x70, 0x65, 0x6d, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x73, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x43, 0x65, 0x72,
	0x74, 0x50, 0x65, 0x6d, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x73, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x6f, 0x6f, 0x74, 0x63, 0x61, 0x5f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x63, 0x61, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x50, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0xa8, 0x02, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x42, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x22, 0x24, 0x0a, 0x22,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x23, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x44, 0x0a, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a,
	0x0c, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x42,
	0x4b, 0x0a, 0x11, 0x69, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x42, 0x10, 0x4d, 0x54, 0x4c, 0x53, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x5a, 0x1d, 0x6d, 0x69, 0x63, 0x61, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x49, 0x43, 0x41, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_mtls_certificate_proto_rawDescOnce sync.Once
	file_common_v1_mtls_certificate_proto_rawDescData = file_common_v1_mtls_certificate_proto_rawDesc
)

func file_common_v1_mtls_certificate_proto_rawDescGZIP() []byte {
	file_common_v1_mtls_certificate_proto_rawDescOnce.Do(func() {
		file_common_v1_mtls_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_mtls_certificate_proto_rawDescData)
	})
	return file_common_v1_mtls_certificate_proto_rawDescData
}

var file_common_v1_mtls_certificate_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_common_v1_mtls_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_common_v1_mtls_certificate_proto_goTypes = []interface{}{
	(GenerateMTLSCertificateResponse_Status)(0),       // 0: common.v1.GenerateMTLSCertificateResponse.Status
	(UpdateMTLSCertificateResponse_Status)(0),         // 1: common.v1.UpdateMTLSCertificateResponse.Status
	(GetMTLSCertificateResponse_Status)(0),            // 2: common.v1.GetMTLSCertificateResponse.Status
	(SearchMTLSCertificateResponse_Status)(0),         // 3: common.v1.SearchMTLSCertificateResponse.Status
	(GenerateClientMTLSCertificateResponse_Status)(0), // 4: common.v1.GenerateClientMTLSCertificateResponse.Status
	(UpdateClientMTLSCertificateResponse_Status)(0),   // 5: common.v1.UpdateClientMTLSCertificateResponse.Status
	(SearchClientMTLSCertificateResponse_Status)(0),   // 6: common.v1.SearchClientMTLSCertificateResponse.Status
	(*MTLSCertificateSignatureRequest)(nil),           // 7: common.v1.MTLSCertificateSignatureRequest
	(*MTLSCertificate)(nil),                           // 8: common.v1.MTLSCertificate
	(*GenerateMTLSCertificateRequest)(nil),            // 9: common.v1.GenerateMTLSCertificateRequest
	(*GenerateMTLSCertificateResponse)(nil),           // 10: common.v1.GenerateMTLSCertificateResponse
	(*UpdateMTLSCertificateRequest)(nil),              // 11: common.v1.UpdateMTLSCertificateRequest
	(*UpdateMTLSCertificateResponse)(nil),             // 12: common.v1.UpdateMTLSCertificateResponse
	(*GetMTLSCertificateRequest)(nil),                 // 13: common.v1.GetMTLSCertificateRequest
	(*GetMTLSCertificateResponse)(nil),                // 14: common.v1.GetMTLSCertificateResponse
	(*SearchMTLSCertificateRequest)(nil),              // 15: common.v1.SearchMTLSCertificateRequest
	(*SearchMTLSCertificateResponse)(nil),             // 16: common.v1.SearchMTLSCertificateResponse
	(*ClientMTLSCertificate)(nil),                     // 17: common.v1.ClientMTLSCertificate
	(*GenerateClientMTLSCertificateRequest)(nil),      // 18: common.v1.GenerateClientMTLSCertificateRequest
	(*GenerateClientMTLSCertificateResponse)(nil),     // 19: common.v1.GenerateClientMTLSCertificateResponse
	(*UpdateClientMTLSCertificateRequest)(nil),        // 20: common.v1.UpdateClientMTLSCertificateRequest
	(*UpdateClientMTLSCertificateResponse)(nil),       // 21: common.v1.UpdateClientMTLSCertificateResponse
	(*SearchClientMTLSCertificateRequest)(nil),        // 22: common.v1.SearchClientMTLSCertificateRequest
	(*SearchClientMTLSCertificateResponse)(nil),       // 23: common.v1.SearchClientMTLSCertificateResponse
	(*timestamppb.Timestamp)(nil),                     // 24: google.protobuf.Timestamp
	(*Error)(nil),                                     // 25: common.v1.Error
}
var file_common_v1_mtls_certificate_proto_depIdxs = []int32{
	24, // 0: common.v1.MTLSCertificate.issued:type_name -> google.protobuf.Timestamp
	24, // 1: common.v1.MTLSCertificate.expiry:type_name -> google.protobuf.Timestamp
	7,  // 2: common.v1.GenerateMTLSCertificateRequest.csr:type_name -> common.v1.MTLSCertificateSignatureRequest
	0,  // 3: common.v1.GenerateMTLSCertificateResponse.status:type_name -> common.v1.GenerateMTLSCertificateResponse.Status
	25, // 4: common.v1.GenerateMTLSCertificateResponse.error:type_name -> common.v1.Error
	8,  // 5: common.v1.GenerateMTLSCertificateResponse.certificate:type_name -> common.v1.MTLSCertificate
	1,  // 6: common.v1.UpdateMTLSCertificateResponse.status:type_name -> common.v1.UpdateMTLSCertificateResponse.Status
	25, // 7: common.v1.UpdateMTLSCertificateResponse.error:type_name -> common.v1.Error
	2,  // 8: common.v1.GetMTLSCertificateResponse.status:type_name -> common.v1.GetMTLSCertificateResponse.Status
	25, // 9: common.v1.GetMTLSCertificateResponse.error:type_name -> common.v1.Error
	8,  // 10: common.v1.GetMTLSCertificateResponse.certificate:type_name -> common.v1.MTLSCertificate
	3,  // 11: common.v1.SearchMTLSCertificateResponse.status:type_name -> common.v1.SearchMTLSCertificateResponse.Status
	25, // 12: common.v1.SearchMTLSCertificateResponse.error:type_name -> common.v1.Error
	8,  // 13: common.v1.SearchMTLSCertificateResponse.certificates:type_name -> common.v1.MTLSCertificate
	4,  // 14: common.v1.GenerateClientMTLSCertificateResponse.status:type_name -> common.v1.GenerateClientMTLSCertificateResponse.Status
	25, // 15: common.v1.GenerateClientMTLSCertificateResponse.error:type_name -> common.v1.Error
	17, // 16: common.v1.GenerateClientMTLSCertificateResponse.certificate_to_sign:type_name -> common.v1.ClientMTLSCertificate
	5,  // 17: common.v1.UpdateClientMTLSCertificateResponse.status:type_name -> common.v1.UpdateClientMTLSCertificateResponse.Status
	25, // 18: common.v1.UpdateClientMTLSCertificateResponse.error:type_name -> common.v1.Error
	17, // 19: common.v1.UpdateClientMTLSCertificateResponse.certificate:type_name -> common.v1.ClientMTLSCertificate
	6,  // 20: common.v1.SearchClientMTLSCertificateResponse.status:type_name -> common.v1.SearchClientMTLSCertificateResponse.Status
	25, // 21: common.v1.SearchClientMTLSCertificateResponse.error:type_name -> common.v1.Error
	17, // 22: common.v1.SearchClientMTLSCertificateResponse.certificates:type_name -> common.v1.ClientMTLSCertificate
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_common_v1_mtls_certificate_proto_init() }
func file_common_v1_mtls_certificate_proto_init() {
	if File_common_v1_mtls_certificate_proto != nil {
		return
	}
	file_common_v1_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_v1_mtls_certificate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MTLSCertificateSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MTLSCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMTLSCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateClientMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateClientMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClientMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClientMTLSCertificateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_mtls_certificate_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchClientMTLSCertificateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_mtls_certificate_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_mtls_certificate_proto_goTypes,
		DependencyIndexes: file_common_v1_mtls_certificate_proto_depIdxs,
		EnumInfos:         file_common_v1_mtls_certificate_proto_enumTypes,
		MessageInfos:      file_common_v1_mtls_certificate_proto_msgTypes,
	}.Build()
	File_common_v1_mtls_certificate_proto = out.File
	file_common_v1_mtls_certificate_proto_rawDesc = nil
	file_common_v1_mtls_certificate_proto_goTypes = nil
	file_common_v1_mtls_certificate_proto_depIdxs = nil
}
